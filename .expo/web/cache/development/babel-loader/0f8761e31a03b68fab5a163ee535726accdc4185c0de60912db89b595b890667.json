{"ast":null,"code":"\"use strict\";\n\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useDescriptors = useDescriptors;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _NavigationBuilderContext = require(\"./NavigationBuilderContext.js\");\nvar _NavigationContext = require(\"./NavigationContext.js\");\nvar _NavigationRouteContext = require(\"./NavigationRouteContext.js\");\nvar _SceneView = require(\"./SceneView.js\");\nvar _ThemeContext = require(\"./theming/ThemeContext.js\");\nvar _useNavigationCache = require(\"./useNavigationCache.js\");\nvar _useRouteCache = require(\"./useRouteCache.js\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nfunction _getRequireWildcardCache(e) {\n  if (\"function\" != typeof WeakMap) return null;\n  var r = new WeakMap(),\n    t = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(e) {\n    return e ? t : r;\n  })(e);\n}\nfunction _interopRequireWildcard(e, r) {\n  if (!r && e && e.__esModule) return e;\n  if (null === e || \"object\" != typeof e && \"function\" != typeof e) return {\n    default: e\n  };\n  var t = _getRequireWildcardCache(r);\n  if (t && t.has(e)) return t.get(e);\n  var n = {\n      __proto__: null\n    },\n    a = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) {\n    var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;\n    i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];\n  }\n  return n.default = e, t && t.set(e, n), n;\n}\nfunction useDescriptors(_ref) {\n  var state = _ref.state,\n    screens = _ref.screens,\n    navigation = _ref.navigation,\n    screenOptions = _ref.screenOptions,\n    screenLayout = _ref.screenLayout,\n    onAction = _ref.onAction,\n    getState = _ref.getState,\n    setState = _ref.setState,\n    addListener = _ref.addListener,\n    addKeyedListener = _ref.addKeyedListener,\n    onRouteFocus = _ref.onRouteFocus,\n    router = _ref.router,\n    emitter = _ref.emitter;\n  var theme = React.useContext(_ThemeContext.ThemeContext);\n  var _React$useState = React.useState({}),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    options = _React$useState2[0],\n    setOptions = _React$useState2[1];\n  var _React$useContext = React.useContext(_NavigationBuilderContext.NavigationBuilderContext),\n    onDispatchAction = _React$useContext.onDispatchAction,\n    onOptionsChange = _React$useContext.onOptionsChange,\n    scheduleUpdate = _React$useContext.scheduleUpdate,\n    flushUpdates = _React$useContext.flushUpdates,\n    stackRef = _React$useContext.stackRef;\n  var context = React.useMemo(function () {\n    return {\n      navigation: navigation,\n      onAction: onAction,\n      addListener: addListener,\n      addKeyedListener: addKeyedListener,\n      onRouteFocus: onRouteFocus,\n      onDispatchAction: onDispatchAction,\n      onOptionsChange: onOptionsChange,\n      scheduleUpdate: scheduleUpdate,\n      flushUpdates: flushUpdates,\n      stackRef: stackRef\n    };\n  }, [navigation, onAction, addListener, addKeyedListener, onRouteFocus, onDispatchAction, onOptionsChange, scheduleUpdate, flushUpdates, stackRef]);\n  var _ref2 = (0, _useNavigationCache.useNavigationCache)({\n      state: state,\n      getState: getState,\n      navigation: navigation,\n      setOptions: setOptions,\n      router: router,\n      emitter: emitter\n    }),\n    base = _ref2.base,\n    navigations = _ref2.navigations;\n  var routes = (0, _useRouteCache.useRouteCache)(state.routes);\n  var getOptions = function getOptions(route, navigation, overrides) {\n    var config = screens[route.name];\n    var screen = config.props;\n    var optionsList = [screenOptions].concat(_toConsumableArray(config.options ? config.options.filter(Boolean) : []), [screen.options, overrides]);\n    return optionsList.reduce(function (acc, curr) {\n      return Object.assign(acc, typeof curr !== 'function' ? curr : curr({\n        route: route,\n        navigation: navigation,\n        theme: theme\n      }));\n    }, {});\n  };\n  var render = function render(route, navigation, customOptions, routeState) {\n    var _ref3, _screen$layout;\n    var config = screens[route.name];\n    var screen = config.props;\n    var clearOptions = function clearOptions() {\n      return setOptions(function (o) {\n        if (route.key in o) {\n          var _route$key = route.key,\n            _ = o[_route$key],\n            rest = _objectWithoutProperties(o, [_route$key].map(_toPropertyKey));\n          return rest;\n        }\n        return o;\n      });\n    };\n    var layout = (_ref3 = (_screen$layout = screen.layout) != null ? _screen$layout : config.layout) != null ? _ref3 : screenLayout;\n    var element = (0, _jsxRuntime.jsx)(_SceneView.SceneView, {\n      navigation: navigation,\n      route: route,\n      screen: screen,\n      routeState: routeState,\n      getState: getState,\n      setState: setState,\n      options: customOptions,\n      clearOptions: clearOptions\n    });\n    if (layout != null) {\n      element = layout({\n        route: route,\n        navigation: navigation,\n        theme: theme,\n        children: element\n      });\n    }\n    return (0, _jsxRuntime.jsx)(_NavigationBuilderContext.NavigationBuilderContext.Provider, {\n      value: context,\n      children: (0, _jsxRuntime.jsx)(_NavigationContext.NavigationContext.Provider, {\n        value: navigation,\n        children: (0, _jsxRuntime.jsx)(_NavigationRouteContext.NavigationRouteContext.Provider, {\n          value: route,\n          children: element\n        })\n      })\n    }, route.key);\n  };\n  var descriptors = routes.reduce(function (acc, route, i) {\n    var navigation = navigations[route.key];\n    var customOptions = getOptions(route, navigation, options[route.key]);\n    var element = render(route, navigation, customOptions, state.routes[i].state);\n    acc[route.key] = {\n      route: route,\n      navigation: navigation,\n      render: function render() {\n        return element;\n      },\n      options: customOptions\n    };\n    return acc;\n  }, {});\n  var describe = function describe(route, placeholder) {\n    if (!placeholder) {\n      if (!(route.key in descriptors)) {\n        throw new Error(`Couldn't find a route with the key ${route.key}.`);\n      }\n      return descriptors[route.key];\n    }\n    var navigation = base;\n    var customOptions = getOptions(route, navigation, {});\n    var element = render(route, navigation, customOptions, undefined);\n    return {\n      route: route,\n      navigation: navigation,\n      render: function render() {\n        return element;\n      },\n      options: customOptions\n    };\n  };\n  return {\n    describe: describe,\n    descriptors: descriptors\n  };\n}","map":{"version":3,"names":["React","_interopRequireWildcard","require","_NavigationBuilderContext","_NavigationContext","_NavigationRouteContext","_SceneView","_ThemeContext","_useNavigationCache","_useRouteCache","_jsxRuntime","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","useDescriptors","_ref","state","screens","navigation","screenOptions","screenLayout","onAction","getState","setState","addListener","addKeyedListener","onRouteFocus","router","emitter","theme","useContext","ThemeContext","_React$useState","useState","_React$useState2","_slicedToArray","options","setOptions","_React$useContext","NavigationBuilderContext","onDispatchAction","onOptionsChange","scheduleUpdate","flushUpdates","stackRef","context","useMemo","_ref2","useNavigationCache","base","navigations","routes","useRouteCache","getOptions","route","overrides","config","name","screen","props","optionsList","concat","_toConsumableArray","filter","Boolean","reduce","acc","curr","assign","render","customOptions","routeState","_ref3","_screen$layout","clearOptions","o","key","_route$key","_","rest","_objectWithoutProperties","map","_toPropertyKey","layout","element","jsx","SceneView","children","Provider","value","NavigationContext","NavigationRouteContext","descriptors","describe","placeholder","Error","undefined"],"sources":["C:\\Users\\R User\\Documents\\software_dev\\BranchBuddy\\node_modules\\@react-navigation\\core\\src\\useDescriptors.tsx"],"sourcesContent":["import type {\n  NavigationAction,\n  NavigationState,\n  ParamListBase,\n  PartialState,\n  Router,\n} from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport {\n  type AddKeyedListener,\n  type AddListener,\n  NavigationBuilderContext,\n} from './NavigationBuilderContext';\nimport { NavigationContext } from './NavigationContext';\nimport { NavigationRouteContext } from './NavigationRouteContext';\nimport { SceneView } from './SceneView';\nimport { ThemeContext } from './theming/ThemeContext';\nimport type {\n  Descriptor,\n  EventMapBase,\n  NavigationHelpers,\n  NavigationProp,\n  RouteConfig,\n  RouteProp,\n} from './types';\nimport type { NavigationEventEmitter } from './useEventEmitter';\nimport { useNavigationCache } from './useNavigationCache';\nimport { useRouteCache } from './useRouteCache';\n\nexport type ScreenConfigWithParent<\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends EventMapBase,\n> = {\n  keys: (string | undefined)[];\n  options: (ScreenOptionsOrCallback<ScreenOptions> | undefined)[] | undefined;\n  layout: ScreenLayout | undefined;\n  props: RouteConfig<\n    ParamListBase,\n    string,\n    State,\n    ScreenOptions,\n    EventMap,\n    unknown\n  >;\n};\n\ntype ScreenLayout = (props: {\n  route: RouteProp<ParamListBase, string>;\n  navigation: any;\n  theme: ReactNavigation.Theme;\n  children: React.ReactElement;\n}) => React.ReactElement;\n\ntype ScreenOptionsOrCallback<ScreenOptions extends {}> =\n  | ScreenOptions\n  | ((props: {\n      route: RouteProp<ParamListBase, string>;\n      navigation: any;\n      theme: ReactNavigation.Theme;\n    }) => ScreenOptions);\n\ntype Options<\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends EventMapBase,\n> = {\n  state: State;\n  screens: Record<\n    string,\n    ScreenConfigWithParent<State, ScreenOptions, EventMap>\n  >;\n  navigation: NavigationHelpers<ParamListBase>;\n  screenOptions: ScreenOptionsOrCallback<ScreenOptions> | undefined;\n  screenLayout: ScreenLayout | undefined;\n  onAction: (action: NavigationAction) => boolean;\n  getState: () => State;\n  setState: (state: State) => void;\n  addListener: AddListener;\n  addKeyedListener: AddKeyedListener;\n  onRouteFocus: (key: string) => void;\n  router: Router<State, NavigationAction>;\n  emitter: NavigationEventEmitter<EventMap>;\n};\n\n/**\n * Hook to create descriptor objects for the child routes.\n *\n * A descriptor object provides 3 things:\n * - Helper method to render a screen\n * - Options specified by the screen for the navigator\n * - Navigation object intended for the route\n */\nexport function useDescriptors<\n  State extends NavigationState,\n  ActionHelpers extends Record<string, () => void>,\n  ScreenOptions extends {},\n  EventMap extends EventMapBase,\n>({\n  state,\n  screens,\n  navigation,\n  screenOptions,\n  screenLayout,\n  onAction,\n  getState,\n  setState,\n  addListener,\n  addKeyedListener,\n  onRouteFocus,\n  router,\n  emitter,\n}: Options<State, ScreenOptions, EventMap>) {\n  const theme = React.useContext(ThemeContext);\n  const [options, setOptions] = React.useState<Record<string, ScreenOptions>>(\n    {}\n  );\n  const {\n    onDispatchAction,\n    onOptionsChange,\n    scheduleUpdate,\n    flushUpdates,\n    stackRef,\n  } = React.useContext(NavigationBuilderContext);\n\n  const context = React.useMemo(\n    () => ({\n      navigation,\n      onAction,\n      addListener,\n      addKeyedListener,\n      onRouteFocus,\n      onDispatchAction,\n      onOptionsChange,\n      scheduleUpdate,\n      flushUpdates,\n      stackRef,\n    }),\n    [\n      navigation,\n      onAction,\n      addListener,\n      addKeyedListener,\n      onRouteFocus,\n      onDispatchAction,\n      onOptionsChange,\n      scheduleUpdate,\n      flushUpdates,\n      stackRef,\n    ]\n  );\n\n  const { base, navigations } = useNavigationCache<\n    State,\n    ScreenOptions,\n    EventMap,\n    ActionHelpers\n  >({\n    state,\n    getState,\n    navigation,\n    setOptions,\n    router,\n    emitter,\n  });\n\n  const routes = useRouteCache(state.routes);\n\n  const getOptions = (\n    route: RouteProp<ParamListBase, string>,\n    navigation: NavigationProp<\n      ParamListBase,\n      string,\n      string | undefined,\n      State,\n      ScreenOptions,\n      EventMap\n    >,\n    overrides: Record<string, ScreenOptions>\n  ) => {\n    const config = screens[route.name];\n    const screen = config.props;\n\n    const optionsList = [\n      // The default `screenOptions` passed to the navigator\n      screenOptions,\n      // The `screenOptions` props passed to `Group` elements\n      ...((config.options\n        ? config.options.filter(Boolean)\n        : []) as ScreenOptionsOrCallback<ScreenOptions>[]),\n      // The `options` prop passed to `Screen` elements,\n      screen.options,\n      // The options set via `navigation.setOptions`\n      overrides,\n    ];\n\n    return optionsList.reduce<ScreenOptions>(\n      (acc, curr) =>\n        Object.assign(\n          acc,\n          // @ts-expect-error: we check for function but TS still complains\n          typeof curr !== 'function' ? curr : curr({ route, navigation, theme })\n        ),\n      {} as ScreenOptions\n    );\n  };\n\n  const render = (\n    route: RouteProp<ParamListBase, string>,\n    navigation: NavigationProp<\n      ParamListBase,\n      string,\n      string | undefined,\n      State,\n      ScreenOptions,\n      EventMap\n    >,\n    customOptions: ScreenOptions,\n    routeState: NavigationState | PartialState<NavigationState> | undefined\n  ) => {\n    const config = screens[route.name];\n    const screen = config.props;\n\n    const clearOptions = () =>\n      setOptions((o) => {\n        if (route.key in o) {\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          const { [route.key]: _, ...rest } = o;\n          return rest;\n        }\n\n        return o;\n      });\n\n    const layout =\n      // The `layout` prop passed to `Screen` elements,\n      screen.layout ??\n      // The `screenLayout` props passed to `Group` elements\n      config.layout ??\n      // The default `screenLayout` passed to the navigator\n      screenLayout;\n\n    let element = (\n      <SceneView\n        navigation={navigation}\n        route={route}\n        screen={screen}\n        routeState={routeState}\n        getState={getState}\n        setState={setState}\n        options={customOptions}\n        clearOptions={clearOptions}\n      />\n    );\n\n    if (layout != null) {\n      element = layout({\n        route,\n        navigation,\n        // @ts-expect-error: in practice `theme` will be defined\n        theme,\n        children: element,\n      });\n    }\n\n    return (\n      <NavigationBuilderContext.Provider key={route.key} value={context}>\n        <NavigationContext.Provider value={navigation}>\n          <NavigationRouteContext.Provider value={route}>\n            {element}\n          </NavigationRouteContext.Provider>\n        </NavigationContext.Provider>\n      </NavigationBuilderContext.Provider>\n    );\n  };\n\n  const descriptors = routes.reduce<\n    Record<\n      string,\n      Descriptor<\n        ScreenOptions,\n        NavigationProp<\n          ParamListBase,\n          string,\n          string | undefined,\n          State,\n          ScreenOptions,\n          EventMap\n        > &\n          ActionHelpers,\n        RouteProp<ParamListBase>\n      >\n    >\n  >((acc, route, i) => {\n    const navigation = navigations[route.key];\n    const customOptions = getOptions(route, navigation, options[route.key]);\n    const element = render(\n      route,\n      navigation,\n      customOptions,\n      state.routes[i].state\n    );\n\n    acc[route.key] = {\n      route,\n      // @ts-expect-error: it's missing action helpers, fix later\n      navigation,\n      render() {\n        return element;\n      },\n      options: customOptions as ScreenOptions,\n    };\n\n    return acc;\n  }, {});\n\n  /**\n   * Create a descriptor object for a route.\n   *\n   * @param route Route object for which the descriptor should be created\n   * @param placeholder Whether the descriptor should be a placeholder, e.g. for a route not yet in the state\n   * @returns Descriptor object\n   */\n  const describe = (route: RouteProp<ParamListBase>, placeholder: boolean) => {\n    if (!placeholder) {\n      if (!(route.key in descriptors)) {\n        throw new Error(`Couldn't find a route with the key ${route.key}.`);\n      }\n\n      return descriptors[route.key];\n    }\n\n    const navigation = base;\n    const customOptions = getOptions(route, navigation, {});\n    const element = render(route, navigation, customOptions, undefined);\n\n    return {\n      route,\n      navigation,\n      render() {\n        return element;\n      },\n      options: customOptions as ScreenOptions,\n    };\n  };\n\n  return {\n    describe,\n    descriptors,\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}