{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { loadBundleAsync } from \"./loadBundle\";\nexport function buildAsyncRequire() {\n  var cache = new Map();\n  return function () {\n    var _universal_loadBundleAsync = _asyncToGenerator(function* (path) {\n      if (cache.has(path)) {\n        return cache.get(path);\n      }\n      var promise = loadBundleAsync(path).catch(function (error) {\n        cache.delete(path);\n        throw error;\n      });\n      cache.set(path, promise);\n      return promise;\n    });\n    function universal_loadBundleAsync(_x) {\n      return _universal_loadBundleAsync.apply(this, arguments);\n    }\n    return universal_loadBundleAsync;\n  }();\n}","map":{"version":3,"names":["loadBundleAsync","buildAsyncRequire","cache","Map","_universal_loadBundleAsync","_asyncToGenerator","path","has","get","promise","catch","error","delete","set","universal_loadBundleAsync","_x","apply","arguments"],"sources":["C:/Users/R User/Documents/software_dev/BranchBuddy/node_modules/@expo/metro-runtime/src/async-require/buildAsyncRequire.ts"],"sourcesContent":["/**\n * Copyright Â© 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { loadBundleAsync } from './loadBundle';\n\n/**\n * Must satisfy the requirements of the Metro bundler.\n * https://github.com/react-native-community/discussions-and-proposals/blob/main/proposals/0605-lazy-bundling.md#__loadbundleasync-in-metro\n */\ntype AsyncRequire = (path: string) => Promise<void>;\n\n/** Create an `loadBundleAsync` function in the expected shape for Metro bundler. */\nexport function buildAsyncRequire(): AsyncRequire {\n  const cache = new Map<string, Promise<void>>();\n\n  return async function universal_loadBundleAsync(path: string): Promise<void> {\n    if (cache.has(path)) {\n      return cache.get(path)!;\n    }\n\n    const promise = loadBundleAsync(path).catch((error) => {\n      cache.delete(path);\n      throw error;\n    });\n\n    cache.set(path, promise);\n\n    return promise;\n  };\n}\n"],"mappings":";AAOA,SAASA,eAAe;AASxB,OAAO,SAASC,iBAAiBA,CAAA,EAAiB;EAChD,IAAMC,KAAK,GAAG,IAAIC,GAAG,CAAwB,CAAC;EAE9C;IAAA,IAAAC,0BAAA,GAAAC,iBAAA,CAAO,WAAyCC,IAAY,EAAiB;MAC3E,IAAIJ,KAAK,CAACK,GAAG,CAACD,IAAI,CAAC,EAAE;QACnB,OAAOJ,KAAK,CAACM,GAAG,CAACF,IAAI,CAAC;MACxB;MAEA,IAAMG,OAAO,GAAGT,eAAe,CAACM,IAAI,CAAC,CAACI,KAAK,CAAC,UAACC,KAAK,EAAK;QACrDT,KAAK,CAACU,MAAM,CAACN,IAAI,CAAC;QAClB,MAAMK,KAAK;MACb,CAAC,CAAC;MAEFT,KAAK,CAACW,GAAG,CAACP,IAAI,EAAEG,OAAO,CAAC;MAExB,OAAOA,OAAO;IAChB,CAAC;IAAA,SAbqBK,yBAAyBA,CAAAC,EAAA;MAAA,OAAAX,0BAAA,CAAAY,KAAA,OAAAC,SAAA;IAAA;IAAA,OAAzBH,yBAAyB;EAAA;AAcjD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}