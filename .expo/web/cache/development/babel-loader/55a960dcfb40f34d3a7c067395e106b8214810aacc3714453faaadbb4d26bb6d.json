{"ast":null,"code":"\"use strict\";\n\nvar _reactJsxRuntime = require(\"react/jsx-runtime\");\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SuspenseFallback = void 0;\nvar react_1 = __importDefault(require(\"react\"));\nvar Toast_1 = require(\"./Toast\");\nfunction SuspenseFallback(_ref) {\n  var route = _ref.route;\n  if (__DEV__) {\n    return _reactJsxRuntime.jsx(Toast_1.ToastWrapper, {\n      children: _reactJsxRuntime.jsx(Toast_1.Toast, {\n        filename: route == null ? void 0 : route.contextKey,\n        children: \"Bundling...\"\n      })\n    });\n  }\n  return null;\n}\nexports.SuspenseFallback = SuspenseFallback;","map":{"version":3,"names":["react_1","__importDefault","require","Toast_1","SuspenseFallback","_ref","route","__DEV__","_reactJsxRuntime","jsx","ToastWrapper","children","Toast","filename","contextKey","exports"],"sources":["C:\\Users\\R User\\Documents\\software_dev\\BranchBuddy\\node_modules\\expo-router\\src\\views\\SuspenseFallback.tsx"],"sourcesContent":["import React from 'react';\n\nimport { Toast, ToastWrapper } from './Toast';\nimport { RouteNode } from '../Route';\n\nexport function SuspenseFallback({ route }: { route: RouteNode }) {\n  if (__DEV__) {\n    return (\n      <ToastWrapper>\n        <Toast filename={route?.contextKey}>Bundling...</Toast>\n      </ToastWrapper>\n    );\n  }\n  // TODO: Support user's customizing the fallback.\n  return null;\n}\n"],"mappings":";;;;;;;;;;;;AAAA,IAAAA,OAAA,GAAAC,eAAA,CAAAC,OAAA;AAEA,IAAAC,OAAA,GAAAD,OAAA;AAGA,SAAgBE,gBAAgBA,CAAAC,IAAA,EAAgC;EAAA,IAA7BC,KAAK,GAAAD,IAAA,CAALC,KAAK;EACtC,IAAIC,OAAO,EAAE;IACX,OACEC,gBAAA,CAAAC,GAAA,CAACN,OAAA,CAAAO,YAAY;MAAAC,QAAA,EACXH,gBAAA,CAAAC,GAAA,CAACN,OAAA,CAAAS,KAAK;QAACC,QAAQ,EAAEP,KAAK,oBAALA,KAAK,CAAEQ,UAAW;QAAAH,QAAA,EAAC;MAAW,CAAO;IACxD,CAAc,CAAC;;EAInB,OAAO,IAAI;AACb;AAVAI,OAAA,CAAAX,gBAAA,GAAAA,gBAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}