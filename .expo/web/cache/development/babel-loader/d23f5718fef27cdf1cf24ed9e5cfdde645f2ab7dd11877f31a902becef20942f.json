{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nvar _reactJsxRuntime = require(\"react/jsx-runtime\");\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\nvar _excluded = [\"style\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Slot = void 0;\nvar react_slot_1 = require(\"@radix-ui/react-slot\");\nvar react_1 = require(\"react\");\nvar react_native_1 = require(\"react-native-web/dist/index\");\nfunction ShimSlotForReactNative(Component) {\n  return (0, react_1.forwardRef)(function RNSlotHOC(_ref, ref) {\n    var style = _ref.style,\n      props = _objectWithoutProperties(_ref, _excluded);\n    style = (0, react_1.useMemo)(function () {\n      return react_native_1.StyleSheet.flatten(style);\n    }, [style]);\n    return _reactJsxRuntime.jsx(Component, _objectSpread(_objectSpread({\n      ref: ref\n    }, props), {}, {\n      style: style\n    }));\n  });\n}\nexports.Slot = ShimSlotForReactNative(react_slot_1.Slot);","map":{"version":3,"names":["react_slot_1","require","react_1","react_native_1","ShimSlotForReactNative","Component","forwardRef","RNSlotHOC","_ref","ref","style","props","_objectWithoutProperties","_excluded","useMemo","StyleSheet","flatten","_reactJsxRuntime","jsx","_objectSpread","exports","Slot"],"sources":["C:\\Users\\R User\\Documents\\software_dev\\BranchBuddy\\node_modules\\expo-router\\src\\ui\\Slot.tsx"],"sourcesContent":["import { Slot as RUISlot } from '@radix-ui/react-slot';\nimport { forwardRef, useMemo } from 'react';\nimport { StyleSheet } from 'react-native';\n\n/**\n * RadixUI has special logic to handle the merging of `style` and `className` props.\n * On the web styles are not allowed so Radix does not handle this scenario.\n * This could be fixed upstream (PR open), but it may not as RN is not their target\n * platform.\n *\n * This shim calls `StyleSheet.flatten` on the styles before we render the <Slot />\n *\n * @see https://github.com/expo/expo/issues/31352\n * @see https://github.com/radix-ui/primitives/issues/3107\n * @param Component\n * @returns\n */\nfunction ShimSlotForReactNative(Component: typeof RUISlot): typeof RUISlot {\n  return forwardRef(function RNSlotHOC({ style, ...props }, ref) {\n    style = useMemo(() => StyleSheet.flatten(style), [style]);\n    return <Component ref={ref} {...props} style={style} />;\n  });\n}\n\nexport const Slot = ShimSlotForReactNative(RUISlot);\n"],"mappings":";;;;;;;;;;;;AAAA,IAAAA,YAAA,GAAAC,OAAA;AACA,IAAAC,OAAA,GAAAD,OAAA;AAA4C,IAAAE,cAAA,GAAAF,OAAA;AAgB5C,SAASG,sBAAsBA,CAACC,SAAyB;EACvD,OAAO,IAAAH,OAAA,CAAAI,UAAU,EAAC,SAASC,SAASA,CAAAC,IAAA,EAAsBC,GAAG;IAAA,IAAtBC,KAAK,GAAAF,IAAA,CAALE,KAAK;MAAKC,KAAK,GAAAC,wBAAA,CAAAJ,IAAA,EAAAK,SAAA;IACpDH,KAAK,GAAG,IAAAR,OAAA,CAAAY,OAAO,EAAC;MAAA,OAAMX,cAAA,CAAAY,UAAU,CAACC,OAAO,CAACN,KAAK,CAAC;IAAA,GAAE,CAACA,KAAK,CAAC,CAAC;IACzD,OAAOO,gBAAA,CAAAC,GAAA,CAACb,SAAS,EAAAc,aAAA,CAAAA,aAAA;MAACV,GAAG,EAAEA;IAAI,GAAKE,KAAK;MAAED,KAAK,EAAEA;IAAM,GAAG;EACzD,CAAC,CAAC;AACJ;AAEaU,OAAA,CAAAC,IAAI,GAAGjB,sBAAsB,CAACJ,YAAA,CAAAqB,IAAO,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}