{"ast":null,"code":"var protocol = window.location.protocol === 'https:' ? 'wss' : 'ws';\nvar messageSocket = new WebSocket(`${protocol}://${window.location.host}/message`);\nmessageSocket.onmessage = function (message) {\n  var _globalThis$__EXPO_RS;\n  var data = JSON.parse(String(message.data));\n  switch (data.method) {\n    case 'sendDevCommand':\n      switch (data.params.name) {\n        case 'reload':\n          window.location.reload();\n          break;\n        case 'rsc-reload':\n          (_globalThis$__EXPO_RS = globalThis.__EXPO_RSC_RELOAD_LISTENERS__) == null ? void 0 : _globalThis$__EXPO_RS.forEach(function (l) {\n            return l();\n          });\n          break;\n        case 'module-import':\n          {\n            var _document$querySelect;\n            var moduleData = data.params.data;\n            var id = `expo-module-id=\"${moduleData.id}\"`;\n            var style = document.querySelector(`style[${id}]`);\n            (_document$querySelect = document.querySelector(`script[${id}]`)) == null ? void 0 : _document$querySelect.remove();\n            var code = moduleData.code;\n            var script = document.createElement('script');\n            script.type = 'module';\n            script.text = code;\n            script.setAttribute('expo-module-id', moduleData.id);\n            document.head.appendChild(script);\n            if (style) {\n              queueMicrotask(function () {\n                var _style$parentElement;\n                return (_style$parentElement = style.parentElement) == null ? void 0 : _style$parentElement.removeChild(style);\n              });\n            }\n          }\n          break;\n      }\n      break;\n    case 'reload':\n      window.location.reload();\n      break;\n    case 'devMenu':\n      break;\n  }\n};","map":{"version":3,"names":["protocol","window","location","messageSocket","WebSocket","host","onmessage","message","_globalThis$__EXPO_RS","data","JSON","parse","String","method","params","name","reload","globalThis","__EXPO_RSC_RELOAD_LISTENERS__","forEach","l","_document$querySelect","moduleData","id","style","document","querySelector","remove","code","script","createElement","type","text","setAttribute","head","appendChild","queueMicrotask","_style$parentElement","parentElement","removeChild"],"sources":["C:/Users/R User/Documents/software_dev/BranchBuddy/node_modules/@expo/metro-runtime/src/messageSocket.ts"],"sourcesContent":["/* eslint-env browser */\n\n// Setup websocket messages for reloading the page from the command line.\n// This is normally setup on the native client.\n\nconst protocol = window.location.protocol === 'https:' ? 'wss' : 'ws';\nconst messageSocket = new WebSocket(`${protocol}://${window.location.host}/message`);\nmessageSocket.onmessage = (message) => {\n  const data = JSON.parse(String(message.data));\n  switch (data.method) {\n    case 'sendDevCommand':\n      switch (data.params.name) {\n        case 'reload':\n          window.location.reload();\n          break;\n        case 'rsc-reload':\n          globalThis.__EXPO_RSC_RELOAD_LISTENERS__?.forEach((l) => l());\n          break;\n        // Inject CSS modules from server components into the root client bundle in development.\n        case 'module-import':\n          {\n            const { data: moduleData } = data.params;\n            // remove element with the same 'expo-module-id'\n            const id = `expo-module-id=\"${moduleData.id}\"`;\n            const style = document.querySelector(`style[${id}]`);\n            document.querySelector(`script[${id}]`)?.remove();\n            const code = moduleData.code;\n            const script = document.createElement('script');\n            script.type = 'module';\n            script.text = code;\n            script.setAttribute('expo-module-id', moduleData.id);\n            document.head.appendChild(script);\n            if (style) {\n              // remove the previous block after the new one is loaded to mitigate FOUC.\n              queueMicrotask(() => style.parentElement?.removeChild(style));\n            }\n          }\n          break;\n      }\n      break;\n    case 'reload':\n      window.location.reload();\n      break;\n    case 'devMenu':\n      // no-op\n      break;\n  }\n};\n"],"mappings":"AAKA,IAAMA,QAAQ,GAAGC,MAAM,CAACC,QAAQ,CAACF,QAAQ,KAAK,QAAQ,GAAG,KAAK,GAAG,IAAI;AACrE,IAAMG,aAAa,GAAG,IAAIC,SAAS,CAAC,GAAGJ,QAAQ,MAAMC,MAAM,CAACC,QAAQ,CAACG,IAAI,UAAU,CAAC;AACpFF,aAAa,CAACG,SAAS,GAAG,UAACC,OAAO,EAAK;EAAA,IAAAC,qBAAA;EACrC,IAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,MAAM,CAACL,OAAO,CAACE,IAAI,CAAC,CAAC;EAC7C,QAAQA,IAAI,CAACI,MAAM;IACjB,KAAK,gBAAgB;MACnB,QAAQJ,IAAI,CAACK,MAAM,CAACC,IAAI;QACtB,KAAK,QAAQ;UACXd,MAAM,CAACC,QAAQ,CAACc,MAAM,CAAC,CAAC;UACxB;QACF,KAAK,YAAY;UACf,CAAAR,qBAAA,GAAAS,UAAU,CAACC,6BAA6B,qBAAxCV,qBAAA,CAA0CW,OAAO,CAAC,UAACC,CAAC;YAAA,OAAKA,CAAC,CAAC,CAAC;UAAA,EAAC;UAC7D;QAEF,KAAK,eAAe;UAClB;YAAA,IAAAC,qBAAA;YACE,IAAcC,UAAU,GAAKb,IAAI,CAACK,MAAM,CAAhCL,IAAI;YAEZ,IAAMc,EAAE,GAAG,mBAAmBD,UAAU,CAACC,EAAE,GAAG;YAC9C,IAAMC,KAAK,GAAGC,QAAQ,CAACC,aAAa,CAAC,SAASH,EAAE,GAAG,CAAC;YACpD,CAAAF,qBAAA,GAAAI,QAAQ,CAACC,aAAa,CAAC,UAAUH,EAAE,GAAG,CAAC,qBAAvCF,qBAAA,CAAyCM,MAAM,CAAC,CAAC;YACjD,IAAMC,IAAI,GAAGN,UAAU,CAACM,IAAI;YAC5B,IAAMC,MAAM,GAAGJ,QAAQ,CAACK,aAAa,CAAC,QAAQ,CAAC;YAC/CD,MAAM,CAACE,IAAI,GAAG,QAAQ;YACtBF,MAAM,CAACG,IAAI,GAAGJ,IAAI;YAClBC,MAAM,CAACI,YAAY,CAAC,gBAAgB,EAAEX,UAAU,CAACC,EAAE,CAAC;YACpDE,QAAQ,CAACS,IAAI,CAACC,WAAW,CAACN,MAAM,CAAC;YACjC,IAAIL,KAAK,EAAE;cAETY,cAAc,CAAC;gBAAA,IAAAC,oBAAA;gBAAA,QAAAA,oBAAA,GAAMb,KAAK,CAACc,aAAa,qBAAnBD,oBAAA,CAAqBE,WAAW,CAACf,KAAK,CAAC;cAAA,EAAC;YAC/D;UACF;UACA;MACJ;MACA;IACF,KAAK,QAAQ;MACXvB,MAAM,CAACC,QAAQ,CAACc,MAAM,CAAC,CAAC;MACxB;IACF,KAAK,SAAS;MAEZ;EACJ;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}