{"ast":null,"code":"'use client';\n\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nvar _reactJsxRuntime = require(\"react/jsx-runtime\");\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\nvar _excluded = [\"href\", \"replace\", \"push\", \"dismissTo\", \"relativeToDirectory\", \"asChild\", \"rel\", \"target\", \"download\", \"withAnchor\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Link = exports.Redirect = void 0;\nvar react_1 = require(\"react\");\nvar react_native_1 = require(\"react-native-web/dist/index\");\nvar href_1 = require(\"./href\");\nvar useLinkToPathProps_1 = __importDefault(require(\"./useLinkToPathProps\"));\nvar hooks_1 = require(\"../hooks\");\nvar useFocusEffect_1 = require(\"../useFocusEffect\");\nvar useLinkHooks_1 = require(\"./useLinkHooks\");\nvar Slot_1 = require(\"../ui/Slot\");\nfunction Redirect(_ref) {\n  var href = _ref.href,\n    relativeToDirectory = _ref.relativeToDirectory,\n    withAnchor = _ref.withAnchor;\n  var router = (0, hooks_1.useRouter)();\n  (0, useFocusEffect_1.useFocusEffect)(function () {\n    try {\n      router.replace(href, {\n        relativeToDirectory: relativeToDirectory,\n        withAnchor: withAnchor\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  });\n  return null;\n}\nexports.Redirect = Redirect;\nexports.Link = (0, react_1.forwardRef)(ExpoRouterLink);\nexports.Link.resolveHref = href_1.resolveHref;\nfunction ExpoRouterLink(_ref2, ref) {\n  var href = _ref2.href,\n    replace = _ref2.replace,\n    push = _ref2.push,\n    dismissTo = _ref2.dismissTo,\n    relativeToDirectory = _ref2.relativeToDirectory,\n    asChild = _ref2.asChild,\n    rel = _ref2.rel,\n    target = _ref2.target,\n    download = _ref2.download,\n    withAnchor = _ref2.withAnchor,\n    rest = _objectWithoutProperties(_ref2, _excluded);\n  var style = (0, useLinkHooks_1.useInteropClassName)(rest);\n  var hrefAttrs = (0, useLinkHooks_1.useHrefAttrs)({\n    asChild: asChild,\n    rel: rel,\n    target: target,\n    download: download\n  });\n  var resolvedHref = (0, react_1.useMemo)(function () {\n    if (href == null) {\n      throw new Error('Link: href is required');\n    }\n    return (0, href_1.resolveHref)(href);\n  }, [href]);\n  var event;\n  if (push) event = 'PUSH';\n  if (replace) event = 'REPLACE';\n  if (dismissTo) event = 'POP_TO';\n  var props = (0, useLinkToPathProps_1.default)({\n    href: resolvedHref,\n    event: event,\n    relativeToDirectory: relativeToDirectory,\n    withAnchor: withAnchor\n  });\n  var onPress = function onPress(e) {\n    if ('onPress' in rest) {\n      rest.onPress == null ? void 0 : rest.onPress(e);\n    }\n    props.onPress(e);\n  };\n  var Element = asChild ? Slot_1.Slot : react_native_1.Text;\n  return _reactJsxRuntime.jsx(Element, _objectSpread(_objectSpread(_objectSpread(_objectSpread({\n    ref: ref\n  }, props), hrefAttrs), rest), {}, {\n    style: style\n  }, react_native_1.Platform.select({\n    web: {\n      onClick: onPress\n    },\n    default: {\n      onPress: onPress\n    }\n  })));\n}","map":{"version":3,"names":["react_1","require","react_native_1","href_1","useLinkToPathProps_1","__importDefault","hooks_1","useFocusEffect_1","useLinkHooks_1","Slot_1","Redirect","_ref","href","relativeToDirectory","withAnchor","router","useRouter","useFocusEffect","replace","error","console","exports","Link","forwardRef","ExpoRouterLink","resolveHref","_ref2","ref","push","dismissTo","asChild","rel","target","download","rest","_objectWithoutProperties","_excluded","style","useInteropClassName","hrefAttrs","useHrefAttrs","resolvedHref","useMemo","Error","event","props","default","onPress","e","Element","Slot","Text","_reactJsxRuntime","jsx","_objectSpread","Platform","select","web","onClick"],"sources":["C:\\Users\\R User\\Documents\\software_dev\\BranchBuddy\\node_modules\\expo-router\\src\\link\\Link.tsx"],"sourcesContent":["'use client';\n// Fork of @react-navigation/native Link.tsx with `href` and `replace` support added and\n// `to` / `action` support removed.\nimport { PropsWithChildren, forwardRef, useMemo, MouseEvent, ForwardedRef } from 'react';\nimport { Text, GestureResponderEvent, Platform } from 'react-native';\n\nimport { resolveHref } from './href';\nimport useLinkToPathProps from './useLinkToPathProps';\nimport { useRouter } from '../hooks';\nimport { Href } from '../types';\nimport { useFocusEffect } from '../useFocusEffect';\nimport { useInteropClassName, useHrefAttrs, LinkProps, WebAnchorProps } from './useLinkHooks';\nimport { Slot } from '../ui/Slot';\n\nexport interface LinkComponent {\n  (props: PropsWithChildren<LinkProps>): JSX.Element;\n  /** Helper method to resolve a Href object into a string. */\n  resolveHref: (href: Href) => string;\n}\n\nexport type RedirectProps = {\n  /**\n   * The path of the route to navigate to. It can either be:\n   * - **string**: A full path like `/profile/settings` or a relative path like `../settings`.\n   * - **object**: An object with a `pathname` and optional `params`. The `pathname` can be\n   * a full path like `/profile/settings` or a relative path like `../settings`. The\n   * params can be an object of key-value pairs.\n   *\n   * @example\n   * ```tsx Dynamic\n   * import { Redirect } from 'expo-router';\n   *\n   * export default function RedirectToAbout() {\n   *  return (\n   *    <Redirect href=\"/about\">About</Link>\n   *  );\n   *}\n   * ```\n   */\n  href: Href;\n\n  /**\n   * Relative URL references are either relative to the directory or the document.\n   * By default, relative paths are relative to the document.\n   *\n   * @see [Resolving relative references in Mozilla's documentation](https://developer.mozilla.org/en-US/docs/Web/API/URL_API/Resolving_relative_references).\n   */\n  relativeToDirectory?: boolean;\n\n  /**\n   * Replaces the initial screen with the current route.\n   */\n  withAnchor?: boolean;\n};\n\n/**\n * Redirects to the `href` as soon as the component is mounted.\n *\n * @example\n * ```tsx\n * import { View, Text } from 'react-native';\n * import { Redirect } from 'expo-router';\n *\n * export default function Page() {\n *  const { user } = useAuth();\n *\n *  if (!user) {\n *    return <Redirect href=\"/login\" />;\n *  }\n *\n *  return (\n *    <View>\n *      <Text>Welcome Back!</Text>\n *    </View>\n *  );\n * }\n * ```\n */\nexport function Redirect({ href, relativeToDirectory, withAnchor }: RedirectProps) {\n  const router = useRouter();\n  useFocusEffect(() => {\n    try {\n      router.replace(href, { relativeToDirectory, withAnchor });\n    } catch (error) {\n      console.error(error);\n    }\n  });\n  return null;\n}\n\n/**\n * Component that renders a link using [`href`](#href) to another route.\n * By default, it accepts children and wraps them in a `<Text>` component.\n *\n * Uses an anchor tag (`<a>`) on web and performs a client-side navigation to preserve\n * the state of the website and navigate faster. The web-only attributes such as `target`,\n * `rel`, and `download` are supported and passed to the anchor tag on web. See\n * [`WebAnchorProps`](#webanchorprops) for more details.\n *\n * > **Note**: Client-side navigation works with both single-page apps,\n * and [static-rendering](/router/reference/static-rendering/).\n *\n * @example\n * ```tsx\n * import { Link } from 'expo-router';\n * import { View } from 'react-native';\n *\n * export default function Route() {\n *  return (\n *   <View>\n *    <Link href=\"/about\">About</Link>\n *   </View>\n *  );\n *}\n * ```\n */\nexport const Link = forwardRef(ExpoRouterLink) as unknown as LinkComponent;\n\nLink.resolveHref = resolveHref;\n\nfunction ExpoRouterLink(\n  {\n    href,\n    replace,\n    push,\n    dismissTo,\n    // TODO: This does not prevent default on the anchor tag.\n    relativeToDirectory,\n    asChild,\n    rel,\n    target,\n    download,\n    withAnchor,\n    ...rest\n  }: LinkProps,\n  ref: ForwardedRef<Text>\n) {\n  // Mutate the style prop to add the className on web.\n  const style = useInteropClassName(rest);\n\n  // If not passing asChild, we need to forward the props to the anchor tag using React Native Web's `hrefAttrs`.\n  const hrefAttrs = useHrefAttrs({ asChild, rel, target, download });\n\n  const resolvedHref = useMemo(() => {\n    if (href == null) {\n      throw new Error('Link: href is required');\n    }\n    return resolveHref(href);\n  }, [href]);\n\n  let event;\n  if (push) event = 'PUSH';\n  if (replace) event = 'REPLACE';\n  if (dismissTo) event = 'POP_TO';\n\n  const props = useLinkToPathProps({\n    href: resolvedHref,\n    event,\n    relativeToDirectory,\n    withAnchor,\n  });\n\n  const onPress = (e: MouseEvent<HTMLAnchorElement> | GestureResponderEvent) => {\n    if ('onPress' in rest) {\n      rest.onPress?.(e);\n    }\n    props.onPress(e);\n  };\n\n  const Element = asChild ? Slot : Text;\n\n  // Avoid using createElement directly, favoring JSX, to allow tools like NativeWind to perform custom JSX handling on native.\n  return (\n    <Element\n      ref={ref}\n      {...props}\n      {...hrefAttrs}\n      {...rest}\n      style={style}\n      {...Platform.select({\n        web: {\n          onClick: onPress,\n        } as any,\n        default: { onPress },\n      })}\n    />\n  );\n}\n\nexport { LinkProps, WebAnchorProps };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}