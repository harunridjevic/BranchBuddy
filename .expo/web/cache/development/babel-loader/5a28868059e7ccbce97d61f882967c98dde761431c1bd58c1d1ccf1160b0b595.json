{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BottomTabView = BottomTabView;\nvar _elements = require(\"@react-navigation/elements\");\nvar _native = require(\"@react-navigation/native\");\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native-web/dist/index\");\nvar _reactNativeSafeAreaContext = require(\"react-native-safe-area-context\");\nvar _TransitionPresets = require(\"../TransitionConfigs/TransitionPresets.js\");\nvar _BottomTabBarHeightCallbackContext = require(\"../utils/BottomTabBarHeightCallbackContext.js\");\nvar _BottomTabBarHeightContext = require(\"../utils/BottomTabBarHeightContext.js\");\nvar _useAnimatedHashMap = require(\"../utils/useAnimatedHashMap.js\");\nvar _BottomTabBar = require(\"./BottomTabBar.js\");\nvar _ScreenFallback = require(\"./ScreenFallback.js\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nfunction _getRequireWildcardCache(e) {\n  if (\"function\" != typeof WeakMap) return null;\n  var r = new WeakMap(),\n    t = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(e) {\n    return e ? t : r;\n  })(e);\n}\nfunction _interopRequireWildcard(e, r) {\n  if (!r && e && e.__esModule) return e;\n  if (null === e || \"object\" != typeof e && \"function\" != typeof e) return {\n    default: e\n  };\n  var t = _getRequireWildcardCache(r);\n  if (t && t.has(e)) return t.get(e);\n  var n = {\n      __proto__: null\n    },\n    a = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) {\n    var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;\n    i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];\n  }\n  return n.default = e, t && t.set(e, n), n;\n}\nvar EPSILON = 1e-5;\nvar STATE_INACTIVE = 0;\nvar STATE_TRANSITIONING_OR_BELOW_TOP = 1;\nvar STATE_ON_TOP = 2;\nvar NAMED_TRANSITIONS_PRESETS = {\n  fade: _TransitionPresets.FadeTransition,\n  shift: _TransitionPresets.ShiftTransition,\n  none: {\n    sceneStyleInterpolator: undefined,\n    transitionSpec: {\n      animation: 'timing',\n      config: {\n        duration: 0\n      }\n    }\n  }\n};\nvar useNativeDriver = _reactNative.Platform.OS !== 'web';\nvar hasAnimation = function hasAnimation(options) {\n  var animation = options.animation,\n    transitionSpec = options.transitionSpec;\n  if (animation) {\n    return animation !== 'none';\n  }\n  return Boolean(transitionSpec);\n};\nvar renderTabBarDefault = function renderTabBarDefault(props) {\n  return (0, _jsxRuntime.jsx)(_BottomTabBar.BottomTabBar, _objectSpread({}, props));\n};\nfunction BottomTabView(props) {\n  var _props$tabBar = props.tabBar,\n    tabBar = _props$tabBar === void 0 ? renderTabBarDefault : _props$tabBar,\n    state = props.state,\n    navigation = props.navigation,\n    descriptors = props.descriptors,\n    safeAreaInsets = props.safeAreaInsets,\n    _props$detachInactive = props.detachInactiveScreens,\n    detachInactiveScreens = _props$detachInactive === void 0 ? _reactNative.Platform.OS === 'web' || _reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'ios' : _props$detachInactive;\n  var focusedRouteKey = state.routes[state.index].key;\n  var _ref = (0, _native.useLocale)(),\n    direction = _ref.direction;\n  var _React$useState = React.useState([focusedRouteKey]),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    loaded = _React$useState2[0],\n    setLoaded = _React$useState2[1];\n  if (!loaded.includes(focusedRouteKey)) {\n    setLoaded([].concat(_toConsumableArray(loaded), [focusedRouteKey]));\n  }\n  var previousRouteKeyRef = React.useRef(focusedRouteKey);\n  var tabAnims = (0, _useAnimatedHashMap.useAnimatedHashMap)(state);\n  React.useEffect(function () {\n    var _descriptors$previous;\n    var previousRouteKey = previousRouteKeyRef.current;\n    var popToTopAction;\n    if (previousRouteKey !== focusedRouteKey && (_descriptors$previous = descriptors[previousRouteKey]) != null && _descriptors$previous.options.popToTopOnBlur) {\n      var _prevRoute$state;\n      var prevRoute = state.routes.find(function (route) {\n        return route.key === previousRouteKey;\n      });\n      if ((prevRoute == null ? void 0 : (_prevRoute$state = prevRoute.state) == null ? void 0 : _prevRoute$state.type) === 'stack' && prevRoute.state.key) {\n        popToTopAction = _objectSpread(_objectSpread({}, _native.StackActions.popToTop()), {}, {\n          target: prevRoute.state.key\n        });\n      }\n    }\n    var animateToIndex = function animateToIndex() {\n      if (previousRouteKey !== focusedRouteKey) {\n        navigation.emit({\n          type: 'transitionStart',\n          target: focusedRouteKey\n        });\n      }\n      _reactNative.Animated.parallel(state.routes.map(function (route, index) {\n        var _spec;\n        var options = descriptors[route.key].options;\n        var _options$animation = options.animation,\n          animation = _options$animation === void 0 ? 'none' : _options$animation,\n          _options$transitionSp = options.transitionSpec,\n          transitionSpec = _options$transitionSp === void 0 ? NAMED_TRANSITIONS_PRESETS[animation].transitionSpec : _options$transitionSp;\n        var spec = transitionSpec;\n        if (route.key !== previousRouteKey && route.key !== focusedRouteKey) {\n          spec = NAMED_TRANSITIONS_PRESETS.none.transitionSpec;\n        }\n        spec = (_spec = spec) != null ? _spec : NAMED_TRANSITIONS_PRESETS.none.transitionSpec;\n        var toValue = index === state.index ? 0 : index >= state.index ? 1 : -1;\n        return _reactNative.Animated[spec.animation](tabAnims[route.key], _objectSpread(_objectSpread({}, spec.config), {}, {\n          toValue: toValue,\n          useNativeDriver: useNativeDriver\n        }));\n      }).filter(Boolean)).start(function (_ref2) {\n        var finished = _ref2.finished;\n        if (finished && popToTopAction) {\n          navigation.dispatch(popToTopAction);\n        }\n        if (previousRouteKey !== focusedRouteKey) {\n          navigation.emit({\n            type: 'transitionEnd',\n            target: focusedRouteKey\n          });\n        }\n      });\n    };\n    animateToIndex();\n    previousRouteKeyRef.current = focusedRouteKey;\n  }, [descriptors, focusedRouteKey, navigation, state.index, state.routes, tabAnims]);\n  var dimensions = _elements.SafeAreaProviderCompat.initialMetrics.frame;\n  var _React$useState3 = React.useState(function () {\n      return (0, _BottomTabBar.getTabBarHeight)({\n        state: state,\n        descriptors: descriptors,\n        dimensions: dimensions,\n        insets: _objectSpread(_objectSpread({}, _elements.SafeAreaProviderCompat.initialMetrics.insets), props.safeAreaInsets),\n        style: descriptors[state.routes[state.index].key].options.tabBarStyle\n      });\n    }),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    tabBarHeight = _React$useState4[0],\n    setTabBarHeight = _React$useState4[1];\n  var renderTabBar = function renderTabBar() {\n    return (0, _jsxRuntime.jsx)(_reactNativeSafeAreaContext.SafeAreaInsetsContext.Consumer, {\n      children: function children(insets) {\n        var _ref3, _safeAreaInsets$top, _ref4, _safeAreaInsets$right, _ref5, _safeAreaInsets$botto, _ref6, _safeAreaInsets$left;\n        return tabBar({\n          state: state,\n          descriptors: descriptors,\n          navigation: navigation,\n          insets: {\n            top: (_ref3 = (_safeAreaInsets$top = safeAreaInsets == null ? void 0 : safeAreaInsets.top) != null ? _safeAreaInsets$top : insets == null ? void 0 : insets.top) != null ? _ref3 : 0,\n            right: (_ref4 = (_safeAreaInsets$right = safeAreaInsets == null ? void 0 : safeAreaInsets.right) != null ? _safeAreaInsets$right : insets == null ? void 0 : insets.right) != null ? _ref4 : 0,\n            bottom: (_ref5 = (_safeAreaInsets$botto = safeAreaInsets == null ? void 0 : safeAreaInsets.bottom) != null ? _safeAreaInsets$botto : insets == null ? void 0 : insets.bottom) != null ? _ref5 : 0,\n            left: (_ref6 = (_safeAreaInsets$left = safeAreaInsets == null ? void 0 : safeAreaInsets.left) != null ? _safeAreaInsets$left : insets == null ? void 0 : insets.left) != null ? _ref6 : 0\n          }\n        });\n      }\n    });\n  };\n  var routes = state.routes;\n  var hasTwoStates = !routes.some(function (route) {\n    return hasAnimation(descriptors[route.key].options);\n  });\n  var _descriptors$focusedR = descriptors[focusedRouteKey].options.tabBarPosition,\n    tabBarPosition = _descriptors$focusedR === void 0 ? 'bottom' : _descriptors$focusedR;\n  return (0, _jsxRuntime.jsxs)(_elements.SafeAreaProviderCompat, {\n    style: {\n      flexDirection: tabBarPosition === 'left' || tabBarPosition === 'right' ? tabBarPosition === 'left' && direction === 'ltr' || tabBarPosition === 'right' && direction === 'rtl' ? 'row-reverse' : 'row' : 'column'\n    },\n    children: [tabBarPosition === 'top' ? (0, _jsxRuntime.jsx)(_BottomTabBarHeightCallbackContext.BottomTabBarHeightCallbackContext.Provider, {\n      value: setTabBarHeight,\n      children: renderTabBar()\n    }) : null, (0, _jsxRuntime.jsx)(_ScreenFallback.MaybeScreenContainer, {\n      enabled: detachInactiveScreens,\n      hasTwoStates: hasTwoStates,\n      style: styles.screens,\n      children: routes.map(function (route, index) {\n        var _sceneStyleInterpolat;\n        var descriptor = descriptors[route.key];\n        var _descriptor$options = descriptor.options,\n          _descriptor$options$l = _descriptor$options.lazy,\n          lazy = _descriptor$options$l === void 0 ? true : _descriptor$options$l,\n          _descriptor$options$a = _descriptor$options.animation,\n          animation = _descriptor$options$a === void 0 ? 'none' : _descriptor$options$a,\n          _descriptor$options$s = _descriptor$options.sceneStyleInterpolator,\n          sceneStyleInterpolator = _descriptor$options$s === void 0 ? NAMED_TRANSITIONS_PRESETS[animation].sceneStyleInterpolator : _descriptor$options$s;\n        var isFocused = state.index === index;\n        if (lazy && !loaded.includes(route.key) && !isFocused && !state.preloadedRouteKeys.includes(route.key)) {\n          return null;\n        }\n        var _descriptor$options2 = descriptor.options,\n          freezeOnBlur = _descriptor$options2.freezeOnBlur,\n          _descriptor$options2$ = _descriptor$options2.header,\n          header = _descriptor$options2$ === void 0 ? function (_ref7) {\n            var layout = _ref7.layout,\n              options = _ref7.options;\n            return (0, _jsxRuntime.jsx)(_elements.Header, _objectSpread(_objectSpread({}, options), {}, {\n              layout: layout,\n              title: (0, _elements.getHeaderTitle)(options, route.name)\n            }));\n          } : _descriptor$options2$,\n          headerShown = _descriptor$options2.headerShown,\n          headerStatusBarHeight = _descriptor$options2.headerStatusBarHeight,\n          headerTransparent = _descriptor$options2.headerTransparent,\n          customSceneStyle = _descriptor$options2.sceneStyle;\n        var _ref8 = (_sceneStyleInterpolat = sceneStyleInterpolator == null ? void 0 : sceneStyleInterpolator({\n            current: {\n              progress: tabAnims[route.key]\n            }\n          })) != null ? _sceneStyleInterpolat : {},\n          sceneStyle = _ref8.sceneStyle;\n        var animationEnabled = hasAnimation(descriptor.options);\n        var activityState = isFocused ? STATE_ON_TOP : animationEnabled ? tabAnims[route.key].interpolate({\n          inputRange: [0, 1 - EPSILON, 1],\n          outputRange: [STATE_TRANSITIONING_OR_BELOW_TOP, STATE_TRANSITIONING_OR_BELOW_TOP, STATE_INACTIVE],\n          extrapolate: 'extend'\n        }) : STATE_INACTIVE;\n        return (0, _jsxRuntime.jsx)(_ScreenFallback.MaybeScreen, {\n          style: [_reactNative.StyleSheet.absoluteFill, {\n            zIndex: isFocused ? 0 : -1\n          }],\n          active: activityState,\n          enabled: detachInactiveScreens,\n          freezeOnBlur: freezeOnBlur,\n          children: (0, _jsxRuntime.jsx)(_BottomTabBarHeightContext.BottomTabBarHeightContext.Provider, {\n            value: tabBarPosition === 'bottom' ? tabBarHeight : 0,\n            children: (0, _jsxRuntime.jsx)(_elements.Screen, {\n              focused: isFocused,\n              route: descriptor.route,\n              navigation: descriptor.navigation,\n              headerShown: headerShown,\n              headerStatusBarHeight: headerStatusBarHeight,\n              headerTransparent: headerTransparent,\n              header: header({\n                layout: dimensions,\n                route: descriptor.route,\n                navigation: descriptor.navigation,\n                options: descriptor.options\n              }),\n              style: [customSceneStyle, animationEnabled && sceneStyle],\n              children: descriptor.render()\n            })\n          })\n        }, route.key);\n      })\n    }), tabBarPosition !== 'top' ? (0, _jsxRuntime.jsx)(_BottomTabBarHeightCallbackContext.BottomTabBarHeightCallbackContext.Provider, {\n      value: setTabBarHeight,\n      children: renderTabBar()\n    }) : null]\n  });\n}\nvar styles = _reactNative.StyleSheet.create({\n  screens: {\n    flex: 1,\n    overflow: 'hidden'\n  }\n});","map":{"version":3,"names":["_elements","require","_native","React","_interopRequireWildcard","_reactNative","_reactNativeSafeAreaContext","_TransitionPresets","_BottomTabBarHeightCallbackContext","_BottomTabBarHeightContext","_useAnimatedHashMap","_BottomTabBar","_ScreenFallback","_jsxRuntime","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","EPSILON","STATE_INACTIVE","STATE_TRANSITIONING_OR_BELOW_TOP","STATE_ON_TOP","NAMED_TRANSITIONS_PRESETS","fade","FadeTransition","shift","ShiftTransition","none","sceneStyleInterpolator","undefined","transitionSpec","animation","config","duration","useNativeDriver","Platform","OS","hasAnimation","options","Boolean","renderTabBarDefault","props","jsx","BottomTabBar","_objectSpread","BottomTabView","_props$tabBar","tabBar","state","navigation","descriptors","safeAreaInsets","_props$detachInactive","detachInactiveScreens","focusedRouteKey","routes","index","key","_ref","useLocale","direction","_React$useState","useState","_React$useState2","_slicedToArray","loaded","setLoaded","includes","concat","_toConsumableArray","previousRouteKeyRef","useRef","tabAnims","useAnimatedHashMap","useEffect","_descriptors$previous","previousRouteKey","current","popToTopAction","popToTopOnBlur","_prevRoute$state","prevRoute","find","route","type","StackActions","popToTop","target","animateToIndex","emit","Animated","parallel","map","_spec","_options$animation","_options$transitionSp","spec","toValue","filter","start","_ref2","finished","dispatch","dimensions","SafeAreaProviderCompat","initialMetrics","frame","_React$useState3","getTabBarHeight","insets","style","tabBarStyle","_React$useState4","tabBarHeight","setTabBarHeight","renderTabBar","SafeAreaInsetsContext","Consumer","children","_ref3","_safeAreaInsets$top","_ref4","_safeAreaInsets$right","_ref5","_safeAreaInsets$botto","_ref6","_safeAreaInsets$left","top","right","bottom","left","hasTwoStates","some","_descriptors$focusedR","tabBarPosition","jsxs","flexDirection","BottomTabBarHeightCallbackContext","Provider","value","MaybeScreenContainer","enabled","styles","screens","_sceneStyleInterpolat","descriptor","_descriptor$options","_descriptor$options$l","lazy","_descriptor$options$a","_descriptor$options$s","isFocused","preloadedRouteKeys","_descriptor$options2","freezeOnBlur","_descriptor$options2$","header","_ref7","layout","Header","title","getHeaderTitle","name","headerShown","headerStatusBarHeight","headerTransparent","customSceneStyle","sceneStyle","_ref8","progress","animationEnabled","activityState","interpolate","inputRange","outputRange","extrapolate","MaybeScreen","StyleSheet","absoluteFill","zIndex","active","BottomTabBarHeightContext","Screen","focused","render","create","flex","overflow"],"sources":["C:\\Users\\R User\\Documents\\software_dev\\BranchBuddy\\node_modules\\@react-navigation\\bottom-tabs\\src\\views\\BottomTabView.tsx"],"sourcesContent":["import {\n  getHeaderTitle,\n  Header,\n  SafeAreaProviderCompat,\n  Screen,\n} from '@react-navigation/elements';\nimport {\n  type NavigationAction,\n  type ParamListBase,\n  StackActions,\n  type TabNavigationState,\n  useLocale,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport { Animated, Platform, StyleSheet } from 'react-native';\nimport { SafeAreaInsetsContext } from 'react-native-safe-area-context';\n\nimport {\n  FadeTransition,\n  ShiftTransition,\n} from '../TransitionConfigs/TransitionPresets';\nimport type {\n  BottomTabBarProps,\n  BottomTabDescriptorMap,\n  BottomTabHeaderProps,\n  BottomTabNavigationConfig,\n  BottomTabNavigationHelpers,\n  BottomTabNavigationOptions,\n  BottomTabNavigationProp,\n} from '../types';\nimport { BottomTabBarHeightCallbackContext } from '../utils/BottomTabBarHeightCallbackContext';\nimport { BottomTabBarHeightContext } from '../utils/BottomTabBarHeightContext';\nimport { useAnimatedHashMap } from '../utils/useAnimatedHashMap';\nimport { BottomTabBar, getTabBarHeight } from './BottomTabBar';\nimport { MaybeScreen, MaybeScreenContainer } from './ScreenFallback';\n\ntype Props = BottomTabNavigationConfig & {\n  state: TabNavigationState<ParamListBase>;\n  navigation: BottomTabNavigationHelpers;\n  descriptors: BottomTabDescriptorMap;\n};\n\nconst EPSILON = 1e-5;\nconst STATE_INACTIVE = 0;\nconst STATE_TRANSITIONING_OR_BELOW_TOP = 1;\nconst STATE_ON_TOP = 2;\n\nconst NAMED_TRANSITIONS_PRESETS = {\n  fade: FadeTransition,\n  shift: ShiftTransition,\n  none: {\n    sceneStyleInterpolator: undefined,\n    transitionSpec: {\n      animation: 'timing',\n      config: { duration: 0 },\n    },\n  },\n} as const;\n\nconst useNativeDriver = Platform.OS !== 'web';\n\nconst hasAnimation = (options: BottomTabNavigationOptions) => {\n  const { animation, transitionSpec } = options;\n\n  if (animation) {\n    return animation !== 'none';\n  }\n\n  return Boolean(transitionSpec);\n};\n\nconst renderTabBarDefault = (props: BottomTabBarProps) => (\n  <BottomTabBar {...props} />\n);\n\nexport function BottomTabView(props: Props) {\n  const {\n    tabBar = renderTabBarDefault,\n    state,\n    navigation,\n    descriptors,\n    safeAreaInsets,\n    detachInactiveScreens = Platform.OS === 'web' ||\n      Platform.OS === 'android' ||\n      Platform.OS === 'ios',\n  } = props;\n\n  const focusedRouteKey = state.routes[state.index].key;\n\n  const { direction } = useLocale();\n\n  /**\n   * List of loaded tabs, tabs will be loaded when navigated to.\n   */\n  const [loaded, setLoaded] = React.useState([focusedRouteKey]);\n\n  if (!loaded.includes(focusedRouteKey)) {\n    // Set the current tab to be loaded if it was not loaded before\n    setLoaded([...loaded, focusedRouteKey]);\n  }\n\n  const previousRouteKeyRef = React.useRef(focusedRouteKey);\n  const tabAnims = useAnimatedHashMap(state);\n\n  React.useEffect(() => {\n    const previousRouteKey = previousRouteKeyRef.current;\n\n    let popToTopAction: NavigationAction | undefined;\n\n    if (\n      previousRouteKey !== focusedRouteKey &&\n      descriptors[previousRouteKey]?.options.popToTopOnBlur\n    ) {\n      const prevRoute = state.routes.find(\n        (route) => route.key === previousRouteKey\n      );\n\n      if (prevRoute?.state?.type === 'stack' && prevRoute.state.key) {\n        popToTopAction = {\n          ...StackActions.popToTop(),\n          target: prevRoute.state.key,\n        };\n      }\n    }\n\n    const animateToIndex = () => {\n      if (previousRouteKey !== focusedRouteKey) {\n        navigation.emit({\n          type: 'transitionStart',\n          target: focusedRouteKey,\n        });\n      }\n\n      Animated.parallel(\n        state.routes\n          .map((route, index) => {\n            const { options } = descriptors[route.key];\n            const {\n              animation = 'none',\n              transitionSpec = NAMED_TRANSITIONS_PRESETS[animation]\n                .transitionSpec,\n            } = options;\n\n            let spec = transitionSpec;\n\n            if (\n              route.key !== previousRouteKey &&\n              route.key !== focusedRouteKey\n            ) {\n              // Don't animate if the screen is not previous one or new one\n              // This will avoid flicker for screens not involved in the transition\n              spec = NAMED_TRANSITIONS_PRESETS.none.transitionSpec;\n            }\n\n            spec = spec ?? NAMED_TRANSITIONS_PRESETS.none.transitionSpec;\n\n            const toValue =\n              index === state.index ? 0 : index >= state.index ? 1 : -1;\n\n            return Animated[spec.animation](tabAnims[route.key], {\n              ...spec.config,\n              toValue,\n              useNativeDriver,\n            });\n          })\n          .filter(Boolean) as Animated.CompositeAnimation[]\n      ).start(({ finished }) => {\n        if (finished && popToTopAction) {\n          navigation.dispatch(popToTopAction);\n        }\n\n        if (previousRouteKey !== focusedRouteKey) {\n          navigation.emit({\n            type: 'transitionEnd',\n            target: focusedRouteKey,\n          });\n        }\n      });\n    };\n\n    animateToIndex();\n\n    previousRouteKeyRef.current = focusedRouteKey;\n  }, [\n    descriptors,\n    focusedRouteKey,\n    navigation,\n    state.index,\n    state.routes,\n    tabAnims,\n  ]);\n\n  const dimensions = SafeAreaProviderCompat.initialMetrics.frame;\n  const [tabBarHeight, setTabBarHeight] = React.useState(() =>\n    getTabBarHeight({\n      state,\n      descriptors,\n      dimensions,\n      insets: {\n        ...SafeAreaProviderCompat.initialMetrics.insets,\n        ...props.safeAreaInsets,\n      },\n      style: descriptors[state.routes[state.index].key].options.tabBarStyle,\n    })\n  );\n\n  const renderTabBar = () => {\n    return (\n      <SafeAreaInsetsContext.Consumer>\n        {(insets) =>\n          tabBar({\n            state: state,\n            descriptors: descriptors,\n            navigation: navigation,\n            insets: {\n              top: safeAreaInsets?.top ?? insets?.top ?? 0,\n              right: safeAreaInsets?.right ?? insets?.right ?? 0,\n              bottom: safeAreaInsets?.bottom ?? insets?.bottom ?? 0,\n              left: safeAreaInsets?.left ?? insets?.left ?? 0,\n            },\n          })\n        }\n      </SafeAreaInsetsContext.Consumer>\n    );\n  };\n\n  const { routes } = state;\n\n  // If there is no animation, we only have 2 states: visible and invisible\n  const hasTwoStates = !routes.some((route) =>\n    hasAnimation(descriptors[route.key].options)\n  );\n\n  const { tabBarPosition = 'bottom' } = descriptors[focusedRouteKey].options;\n\n  return (\n    <SafeAreaProviderCompat\n      style={{\n        flexDirection:\n          tabBarPosition === 'left' || tabBarPosition === 'right'\n            ? (tabBarPosition === 'left' && direction === 'ltr') ||\n              (tabBarPosition === 'right' && direction === 'rtl')\n              ? 'row-reverse'\n              : 'row'\n            : 'column',\n      }}\n    >\n      {tabBarPosition === 'top' ? (\n        <BottomTabBarHeightCallbackContext.Provider value={setTabBarHeight}>\n          {renderTabBar()}\n        </BottomTabBarHeightCallbackContext.Provider>\n      ) : null}\n      <MaybeScreenContainer\n        enabled={detachInactiveScreens}\n        hasTwoStates={hasTwoStates}\n        style={styles.screens}\n      >\n        {routes.map((route, index) => {\n          const descriptor = descriptors[route.key];\n          const {\n            lazy = true,\n            animation = 'none',\n            sceneStyleInterpolator = NAMED_TRANSITIONS_PRESETS[animation]\n              .sceneStyleInterpolator,\n          } = descriptor.options;\n          const isFocused = state.index === index;\n\n          if (\n            lazy &&\n            !loaded.includes(route.key) &&\n            !isFocused &&\n            !state.preloadedRouteKeys.includes(route.key)\n          ) {\n            // Don't render a lazy screen if we've never navigated to it or it wasn't preloaded\n            return null;\n          }\n\n          const {\n            freezeOnBlur,\n            header = ({ layout, options }: BottomTabHeaderProps) => (\n              <Header\n                {...options}\n                layout={layout}\n                title={getHeaderTitle(options, route.name)}\n              />\n            ),\n            headerShown,\n            headerStatusBarHeight,\n            headerTransparent,\n            sceneStyle: customSceneStyle,\n          } = descriptor.options;\n\n          const { sceneStyle } =\n            sceneStyleInterpolator?.({\n              current: {\n                progress: tabAnims[route.key],\n              },\n            }) ?? {};\n\n          const animationEnabled = hasAnimation(descriptor.options);\n          const activityState = isFocused\n            ? STATE_ON_TOP // the screen is on top after the transition\n            : animationEnabled // is animation is not enabled, immediately move to inactive state\n              ? tabAnims[route.key].interpolate({\n                  inputRange: [0, 1 - EPSILON, 1],\n                  outputRange: [\n                    STATE_TRANSITIONING_OR_BELOW_TOP, // screen visible during transition\n                    STATE_TRANSITIONING_OR_BELOW_TOP,\n                    STATE_INACTIVE, // the screen is detached after transition\n                  ],\n                  extrapolate: 'extend',\n                })\n              : STATE_INACTIVE;\n\n          return (\n            <MaybeScreen\n              key={route.key}\n              style={[StyleSheet.absoluteFill, { zIndex: isFocused ? 0 : -1 }]}\n              active={activityState}\n              enabled={detachInactiveScreens}\n              freezeOnBlur={freezeOnBlur}\n            >\n              <BottomTabBarHeightContext.Provider\n                value={tabBarPosition === 'bottom' ? tabBarHeight : 0}\n              >\n                <Screen\n                  focused={isFocused}\n                  route={descriptor.route}\n                  navigation={descriptor.navigation}\n                  headerShown={headerShown}\n                  headerStatusBarHeight={headerStatusBarHeight}\n                  headerTransparent={headerTransparent}\n                  header={header({\n                    layout: dimensions,\n                    route: descriptor.route,\n                    navigation:\n                      descriptor.navigation as BottomTabNavigationProp<ParamListBase>,\n                    options: descriptor.options,\n                  })}\n                  style={[customSceneStyle, animationEnabled && sceneStyle]}\n                >\n                  {descriptor.render()}\n                </Screen>\n              </BottomTabBarHeightContext.Provider>\n            </MaybeScreen>\n          );\n        })}\n      </MaybeScreenContainer>\n      {tabBarPosition !== 'top' ? (\n        <BottomTabBarHeightCallbackContext.Provider value={setTabBarHeight}>\n          {renderTabBar()}\n        </BottomTabBarHeightCallbackContext.Provider>\n      ) : null}\n    </SafeAreaProviderCompat>\n  );\n}\n\nconst styles = StyleSheet.create({\n  screens: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n});\n"],"mappings":";;;;;;;;;;;AAAA,IAAAA,SAAA,GAAAC,OAAA;AAMA,IAAAC,OAAA,GAAAD,OAAA;AAOA,IAAAE,KAAA,GAAAC,uBAAA,CAAAH,OAAA;AAAA,IAAAI,YAAA,GAAAJ,OAAA;AAEA,IAAAK,2BAAA,GAAAL,OAAA;AAEA,IAAAM,kBAAA,GAAAN,OAAA;AAaA,IAAAO,kCAAA,GAAAP,OAAA;AACA,IAAAQ,0BAAA,GAAAR,OAAA;AACA,IAAAS,mBAAA,GAAAT,OAAA;AACA,IAAAU,aAAA,GAAAV,OAAA;AACA,IAAAW,eAAA,GAAAX,OAAA;AAAqE,IAAAY,WAAA,GAAAZ,OAAA;AAAA,SAAAa,yBAAAC,CAAA;EAAA,yBAAAC,OAAA;EAAA,IAAAC,CAAA,OAAAD,OAAA;IAAAE,CAAA,OAAAF,OAAA;EAAA,QAAAF,wBAAA,YAAAA,yBAAAC,CAAA;IAAA,OAAAA,CAAA,GAAAG,CAAA,GAAAD,CAAA;EAAA,GAAAF,CAAA;AAAA;AAAA,SAAAX,wBAAAW,CAAA,EAAAE,CAAA;EAAA,KAAAA,CAAA,IAAAF,CAAA,IAAAA,CAAA,CAAAI,UAAA,SAAAJ,CAAA;EAAA,aAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA;IAAAK,OAAA,EAAAL;EAAA;EAAA,IAAAG,CAAA,GAAAJ,wBAAA,CAAAG,CAAA;EAAA,IAAAC,CAAA,IAAAA,CAAA,CAAAG,GAAA,CAAAN,CAAA,UAAAG,CAAA,CAAAI,GAAA,CAAAP,CAAA;EAAA,IAAAQ,CAAA;MAAAC,SAAA;IAAA;IAAAC,CAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA;EAAA,SAAAC,CAAA,IAAAd,CAAA,oBAAAc,CAAA,OAAAC,cAAA,CAAAC,IAAA,CAAAhB,CAAA,EAAAc,CAAA;IAAA,IAAAG,CAAA,GAAAP,CAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAb,CAAA,EAAAc,CAAA;IAAAG,CAAA,KAAAA,CAAA,CAAAV,GAAA,IAAAU,CAAA,CAAAC,GAAA,IAAAP,MAAA,CAAAC,cAAA,CAAAJ,CAAA,EAAAM,CAAA,EAAAG,CAAA,IAAAT,CAAA,CAAAM,CAAA,IAAAd,CAAA,CAAAc,CAAA;EAAA;EAAA,OAAAN,CAAA,CAAAH,OAAA,GAAAL,CAAA,EAAAG,CAAA,IAAAA,CAAA,CAAAe,GAAA,CAAAlB,CAAA,EAAAQ,CAAA,GAAAA,CAAA;AAAA;AAQrE,IAAMW,OAAO,GAAG,IAAI;AACpB,IAAMC,cAAc,GAAG,CAAC;AACxB,IAAMC,gCAAgC,GAAG,CAAC;AAC1C,IAAMC,YAAY,GAAG,CAAC;AAEtB,IAAMC,yBAAyB,GAAG;EAChCC,IAAI,EAAEhC,kBAAA,CAAAiC,cAAc;EACpBC,KAAK,EAAElC,kBAAA,CAAAmC,eAAe;EACtBC,IAAI,EAAE;IACJC,sBAAsB,EAAEC,SAAS;IACjCC,cAAc,EAAE;MACdC,SAAS,EAAE,QAAQ;MACnBC,MAAM,EAAE;QAAEC,QAAQ,EAAE;MAAE;IACxB;EACF;AACF,CAAU;AAEV,IAAMC,eAAe,GAAG7C,YAAA,CAAA8C,QAAQ,CAACC,EAAE,KAAK,KAAK;AAE7C,IAAMC,YAAY,GAAI,SAAhBA,YAAYA,CAAIC,OAAmC,EAAK;EAC5D,IAAQP,SAAS,GAAqBO,OAAO,CAArCP,SAAS;IAAED,cAAA,GAAmBQ,OAAO,CAA1BR,cAAA;EAEnB,IAAIC,SAAS,EAAE;IACb,OAAOA,SAAS,KAAK,MAAM;EAC7B;EAEA,OAAOQ,OAAO,CAACT,cAAc,CAAC;AAChC,CAAC;AAED,IAAMU,mBAAmB,GAAI,SAAvBA,mBAAmBA,CAAIC,KAAwB;EAAA,OACnD,IAAA5C,WAAA,CAAA6C,GAAA,EAAC/C,aAAA,CAAAgD,YAAY,EAAAC,aAAA,KAAKH,KAAA,CAAQ,CAC3B;AAAA;AAEM,SAASI,aAAaA,CAACJ,KAAY,EAAE;EAC1C,IAAAK,aAAA,GASIL,KAAK,CARPM,MAAM;IAANA,MAAM,GAAAD,aAAA,cAAGN,mBAAmB,GAAAM,aAAA;IAC5BE,KAAK,GAOHP,KAAK,CAPPO,KAAK;IACLC,UAAU,GAMRR,KAAK,CANPQ,UAAU;IACVC,WAAW,GAKTT,KAAK,CALPS,WAAW;IACXC,cAAc,GAIZV,KAAK,CAJPU,cAAc;IAAAC,qBAAA,GAIZX,KAAK,CAHPY,qBAAqB;IAArBA,qBAAqB,GAAAD,qBAAA,cAAG/D,YAAA,CAAA8C,QAAQ,CAACC,EAAE,KAAK,KAAK,IAC3C/C,YAAA,CAAA8C,QAAQ,CAACC,EAAE,KAAK,SAAS,IACzB/C,YAAA,CAAA8C,QAAQ,CAACC,EAAE,KAAK,QAAAgB,qBAAA;EAGpB,IAAME,eAAe,GAAGN,KAAK,CAACO,MAAM,CAACP,KAAK,CAACQ,KAAK,CAAC,CAACC,GAAG;EAErD,IAAAC,IAAA,GAAsB,IAAAxE,OAAA,CAAAyE,SAAS,EAAC,CAAC;IAAzBC,SAAA,GAAAF,IAAA,CAAAE,SAAA;EAKR,IAAAC,eAAA,GAA4B1E,KAAK,CAAC2E,QAAQ,CAAC,CAACR,eAAe,CAAC,CAAC;IAAAS,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAAtDI,MAAM,GAAAF,gBAAA;IAAEG,SAAS,GAAAH,gBAAA;EAExB,IAAI,CAACE,MAAM,CAACE,QAAQ,CAACb,eAAe,CAAC,EAAE;IAErCY,SAAS,IAAAE,MAAA,CAAAC,kBAAA,CAAKJ,MAAM,IAAEX,eAAe,EAAC,CAAC;EACzC;EAEA,IAAMgB,mBAAmB,GAAGnF,KAAK,CAACoF,MAAM,CAACjB,eAAe,CAAC;EACzD,IAAMkB,QAAQ,GAAG,IAAA9E,mBAAA,CAAA+E,kBAAkB,EAACzB,KAAK,CAAC;EAE1C7D,KAAK,CAACuF,SAAS,CAAC,YAAM;IAAA,IAAAC,qBAAA;IACpB,IAAMC,gBAAgB,GAAGN,mBAAmB,CAACO,OAAO;IAEpD,IAAIC,cAA4C;IAEhD,IACEF,gBAAgB,KAAKtB,eAAe,KAAAqB,qBAAA,GACpCzB,WAAW,CAAC0B,gBAAgB,CAAC,aAA7BD,qBAAA,CAA+BrC,OAAO,CAACyC,cAAc,EACrD;MAAA,IAAAC,gBAAA;MACA,IAAMC,SAAS,GAAGjC,KAAK,CAACO,MAAM,CAAC2B,IAAI,CAChC,UAAAC,KAAK;QAAA,OAAKA,KAAK,CAAC1B,GAAG,KAAKmB,gBAC3B;MAAA,EAAC;MAED,IAAI,CAAAK,SAAS,qBAAAD,gBAAA,GAATC,SAAS,CAAEjC,KAAK,qBAAhBgC,gBAAA,CAAkBI,IAAI,MAAK,OAAO,IAAIH,SAAS,CAACjC,KAAK,CAACS,GAAG,EAAE;QAC7DqB,cAAc,GAAAlC,aAAA,CAAAA,aAAA,KACT1D,OAAA,CAAAmG,YAAY,CAACC,QAAQ,CAAC,CAAC;UAC1BC,MAAM,EAAEN,SAAS,CAACjC,KAAK,CAACS;QAAA,EACzB;MACH;IACF;IAEA,IAAM+B,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;MAC3B,IAAIZ,gBAAgB,KAAKtB,eAAe,EAAE;QACxCL,UAAU,CAACwC,IAAI,CAAC;UACdL,IAAI,EAAE,iBAAiB;UACvBG,MAAM,EAAEjC;QACV,CAAC,CAAC;MACJ;MAEAjE,YAAA,CAAAqG,QAAQ,CAACC,QAAQ,CACf3C,KAAK,CAACO,MAAM,CACTqC,GAAG,CAAC,UAACT,KAAK,EAAE3B,KAAK,EAAK;QAAA,IAAAqC,KAAA;QACrB,IAAQvD,OAAA,GAAYY,WAAW,CAACiC,KAAK,CAAC1B,GAAG,CAAC,CAAlCnB,OAAA;QACR,IAAAwD,kBAAA,GAIIxD,OAAO,CAHTP,SAAS;UAATA,SAAS,GAAA+D,kBAAA,cAAG,MAAM,GAAAA,kBAAA;UAAAC,qBAAA,GAGhBzD,OAAO,CAFTR,cAAc;UAAdA,cAAc,GAAAiE,qBAAA,cAAGzE,yBAAyB,CAACS,SAAS,CAAC,CAClDD,cAAA,GAAAiE,qBAAA;QAGL,IAAIC,IAAI,GAAGlE,cAAc;QAEzB,IACEqD,KAAK,CAAC1B,GAAG,KAAKmB,gBAAgB,IAC9BO,KAAK,CAAC1B,GAAG,KAAKH,eAAe,EAC7B;UAGA0C,IAAI,GAAG1E,yBAAyB,CAACK,IAAI,CAACG,cAAc;QACtD;QAEAkE,IAAI,IAAAH,KAAA,GAAGG,IAAI,YAAAH,KAAA,GAAIvE,yBAAyB,CAACK,IAAI,CAACG,cAAc;QAE5D,IAAMmE,OAAO,GACXzC,KAAK,KAAKR,KAAK,CAACQ,KAAK,GAAG,CAAC,GAAGA,KAAK,IAAIR,KAAK,CAACQ,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;QAE3D,OAAOnE,YAAA,CAAAqG,QAAQ,CAACM,IAAI,CAACjE,SAAS,CAAC,CAACyC,QAAQ,CAACW,KAAK,CAAC1B,GAAG,CAAC,EAAAb,aAAA,CAAAA,aAAA,KAC9CoD,IAAI,CAAChE,MAAM;UACdiE,OAAO,EAAPA,OAAO;UACP/D,eAAA,EAAAA;QAAA,EACD,CAAC;MACJ,CAAC,CAAC,CACDgE,MAAM,CAAC3D,OAAO,CACnB,CAAC,CAAC4D,KAAK,CAAC,UAAAC,KAAA,EAAkB;QAAA,IAAfC,QAAA,GAAAD,KAAA,CAAAC,QAAA;QACT,IAAIA,QAAQ,IAAIvB,cAAc,EAAE;UAC9B7B,UAAU,CAACqD,QAAQ,CAACxB,cAAc,CAAC;QACrC;QAEA,IAAIF,gBAAgB,KAAKtB,eAAe,EAAE;UACxCL,UAAU,CAACwC,IAAI,CAAC;YACdL,IAAI,EAAE,eAAe;YACrBG,MAAM,EAAEjC;UACV,CAAC,CAAC;QACJ;MACF,CAAC,CAAC;IACJ,CAAC;IAEDkC,cAAc,CAAC,CAAC;IAEhBlB,mBAAmB,CAACO,OAAO,GAAGvB,eAAe;EAC/C,CAAC,EAAE,CACDJ,WAAW,EACXI,eAAe,EACfL,UAAU,EACVD,KAAK,CAACQ,KAAK,EACXR,KAAK,CAACO,MAAM,EACZiB,QAAQ,CACT,CAAC;EAEF,IAAM+B,UAAU,GAAGvH,SAAA,CAAAwH,sBAAsB,CAACC,cAAc,CAACC,KAAK;EAC9D,IAAAC,gBAAA,GAAwCxH,KAAK,CAAC2E,QAAQ,CAAC;MAAA,OACrD,IAAAnE,aAAA,CAAAiH,eAAe,EAAC;QACd5D,KAAK,EAALA,KAAK;QACLE,WAAW,EAAXA,WAAW;QACXqD,UAAU,EAAVA,UAAU;QACVM,MAAM,EAAAjE,aAAA,CAAAA,aAAA,KACD5D,SAAA,CAAAwH,sBAAsB,CAACC,cAAc,CAACI,MAAM,GAC5CpE,KAAK,CAACU,cAAA,CACV;QACD2D,KAAK,EAAE5D,WAAW,CAACF,KAAK,CAACO,MAAM,CAACP,KAAK,CAACQ,KAAK,CAAC,CAACC,GAAG,CAAC,CAACnB,OAAO,CAACyE;MAC5D,CAAC,CACH;IAAA,EAAC;IAAAC,gBAAA,GAAAhD,cAAA,CAAA2C,gBAAA;IAXMM,YAAY,GAAAD,gBAAA;IAAEE,eAAe,GAAAF,gBAAA;EAapC,IAAMG,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IACzB,OACE,IAAAtH,WAAA,CAAA6C,GAAA,EAACpD,2BAAA,CAAA8H,qBAAqB,CAACC,QAAQ;MAAAC,QAAA,EAC3B,SAD2BA,SAC3BT,MAAM;QAAA,IAAAU,KAAA,EAAAC,mBAAA,EAAAC,KAAA,EAAAC,qBAAA,EAAAC,KAAA,EAAAC,qBAAA,EAAAC,KAAA,EAAAC,oBAAA;QAAA,OACN/E,MAAM,CAAC;UACLC,KAAK,EAAEA,KAAK;UACZE,WAAW,EAAEA,WAAW;UACxBD,UAAU,EAAEA,UAAU;UACtB4D,MAAM,EAAE;YACNkB,GAAG,GAAAR,KAAA,IAAAC,mBAAA,GAAErE,cAAc,oBAAdA,cAAc,CAAE4E,GAAG,YAAAP,mBAAA,GAAIX,MAAM,oBAANA,MAAM,CAAEkB,GAAG,YAAAR,KAAA,GAAI,CAAC;YAC5CS,KAAK,GAAAP,KAAA,IAAAC,qBAAA,GAAEvE,cAAc,oBAAdA,cAAc,CAAE6E,KAAK,YAAAN,qBAAA,GAAIb,MAAM,oBAANA,MAAM,CAAEmB,KAAK,YAAAP,KAAA,GAAI,CAAC;YAClDQ,MAAM,GAAAN,KAAA,IAAAC,qBAAA,GAAEzE,cAAc,oBAAdA,cAAc,CAAE8E,MAAM,YAAAL,qBAAA,GAAIf,MAAM,oBAANA,MAAM,CAAEoB,MAAM,YAAAN,KAAA,GAAI,CAAC;YACrDO,IAAI,GAAAL,KAAA,IAAAC,oBAAA,GAAE3E,cAAc,oBAAdA,cAAc,CAAE+E,IAAI,YAAAJ,oBAAA,GAAIjB,MAAM,oBAANA,MAAM,CAAEqB,IAAI,YAAAL,KAAA,GAAI;UAChD;QACF,CAAC;MAAA;IAAC,CAE0B,CAAC;EAErC,CAAC;EAED,IAAQtE,MAAA,GAAWP,KAAK,CAAhBO,MAAA;EAGR,IAAM4E,YAAY,GAAG,CAAC5E,MAAM,CAAC6E,IAAI,CAAE,UAAAjD,KAAK;IAAA,OACtC9C,YAAY,CAACa,WAAW,CAACiC,KAAK,CAAC1B,GAAG,CAAC,CAACnB,OAAO,CAC7C;EAAA,EAAC;EAED,IAAA+F,qBAAA,GAAsCnF,WAAW,CAACI,eAAe,CAAC,CAAChB,OAAO,CAAlEgG,cAAc;IAAdA,cAAc,GAAAD,qBAAA,cAAG,WAAAA,qBAAA;EAEzB,OACE,IAAAxI,WAAA,CAAA0I,IAAA,EAACvJ,SAAA,CAAAwH,sBAAsB;IACrBM,KAAK,EAAE;MACL0B,aAAa,EACXF,cAAc,KAAK,MAAM,IAAIA,cAAc,KAAK,OAAO,GAClDA,cAAc,KAAK,MAAM,IAAI1E,SAAS,KAAK,KAAK,IAChD0E,cAAc,KAAK,OAAO,IAAI1E,SAAS,KAAK,KAAM,GACjD,aAAa,GACb,KAAK,GACP;IACR,CAAE;IAAA0D,QAAA,GAEDgB,cAAc,KAAK,KAAK,GACvB,IAAAzI,WAAA,CAAA6C,GAAA,EAAClD,kCAAA,CAAAiJ,iCAAiC,CAACC,QAAQ;MAACC,KAAK,EAAEzB,eAAgB;MAAAI,QAAA,EAChEH,YAAY,CAAC;IAAC,CAC2B,CAAC,GAC3C,IAAI,EACR,IAAAtH,WAAA,CAAA6C,GAAA,EAAC9C,eAAA,CAAAgJ,oBAAoB;MACnBC,OAAO,EAAExF,qBAAsB;MAC/B8E,YAAY,EAAEA,YAAa;MAC3BrB,KAAK,EAAEgC,MAAM,CAACC,OAAQ;MAAAzB,QAAA,EAErB/D,MAAM,CAACqC,GAAG,CAAC,UAACT,KAAK,EAAE3B,KAAK,EAAK;QAAA,IAAAwF,qBAAA;QAC5B,IAAMC,UAAU,GAAG/F,WAAW,CAACiC,KAAK,CAAC1B,GAAG,CAAC;QACzC,IAAAyF,mBAAA,GAKID,UAAU,CAAC3G,OAAO;UAAA6G,qBAAA,GAAAD,mBAAA,CAJpBE,IAAI;UAAJA,IAAI,GAAAD,qBAAA,cAAG,IAAI,GAAAA,qBAAA;UAAAE,qBAAA,GAAAH,mBAAA,CACXnH,SAAS;UAATA,SAAS,GAAAsH,qBAAA,cAAG,MAAM,GAAAA,qBAAA;UAAAC,qBAAA,GAAAJ,mBAAA,CAClBtH,sBAAsB;UAAtBA,sBAAsB,GAAA0H,qBAAA,cAAGhI,yBAAyB,CAACS,SAAS,CAAC,CAC1DH,sBAAA,GAAA0H,qBAAA;QAEL,IAAMC,SAAS,GAAGvG,KAAK,CAACQ,KAAK,KAAKA,KAAK;QAEvC,IACE4F,IAAI,IACJ,CAACnF,MAAM,CAACE,QAAQ,CAACgB,KAAK,CAAC1B,GAAG,CAAC,IAC3B,CAAC8F,SAAS,IACV,CAACvG,KAAK,CAACwG,kBAAkB,CAACrF,QAAQ,CAACgB,KAAK,CAAC1B,GAAG,CAAC,EAC7C;UAEA,OAAO,IAAI;QACb;QAEA,IAAAgG,oBAAA,GAaIR,UAAU,CAAC3G,OAAO;UAZpBoH,YAAY,GAAAD,oBAAA,CAAZC,YAAY;UAAAC,qBAAA,GAAAF,oBAAA,CACZG,MAAM;UAANA,MAAM,GAAAD,qBAAA,cAAG,UAAAE,KAAA;YAAA,IAAGC,MAAM,GAAAD,KAAA,CAANC,MAAM;cAAExH,OAAA,GAAAuH,KAAA,CAAAvH,OAAA;YAAA,OAClB,IAAAzC,WAAA,CAAA6C,GAAA,EAAC1D,SAAA,CAAA+K,MAAM,EAAAnH,aAAA,CAAAA,aAAA,KACDN,OAAO;cACXwH,MAAM,EAAEA,MAAO;cACfE,KAAK,EAAE,IAAAhL,SAAA,CAAAiL,cAAc,EAAC3H,OAAO,EAAE6C,KAAK,CAAC+E,IAAI;YAAA,EAC1C,CACF;UAAA,IAAAP,qBAAA;UACDQ,WAAW,GAAAV,oBAAA,CAAXU,WAAW;UACXC,qBAAqB,GAAAX,oBAAA,CAArBW,qBAAqB;UACrBC,iBAAiB,GAAAZ,oBAAA,CAAjBY,iBAAiB;UACLC,gBAAA,GAAAb,oBAAA,CAAZc,UAAU;QAGZ,IAAAC,KAAA,IAAAxB,qBAAA,GACEpH,sBAAsB,oBAAtBA,sBAAsB,CAAG;YACvBiD,OAAO,EAAE;cACP4F,QAAQ,EAAEjG,QAAQ,CAACW,KAAK,CAAC1B,GAAG;YAC9B;UACF,CAAC,CAAC,YAAAuF,qBAAA,GAAI,CAAC,CAAC;UALFuB,UAAA,GAAAC,KAAA,CAAAD,UAAA;QAOR,IAAMG,gBAAgB,GAAGrI,YAAY,CAAC4G,UAAU,CAAC3G,OAAO,CAAC;QACzD,IAAMqI,aAAa,GAAGpB,SAAS,GAC3BlI,YAAY,GACZqJ,gBAAgB,GACdlG,QAAQ,CAACW,KAAK,CAAC1B,GAAG,CAAC,CAACmH,WAAW,CAAC;UAC9BC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG3J,OAAO,EAAE,CAAC,CAAC;UAC/B4J,WAAW,EAAE,CACX1J,gCAAgC,EAChCA,gCAAgC,EAChCD,cAAc,CACf;UACD4J,WAAW,EAAE;QACf,CAAC,CAAC,GACF5J,cAAc;QAEpB,OACE,IAAAtB,WAAA,CAAA6C,GAAA,EAAC9C,eAAA,CAAAoL,WAAW;UAEVlE,KAAK,EAAE,CAACzH,YAAA,CAAA4L,UAAU,CAACC,YAAY,EAAE;YAAEC,MAAM,EAAE5B,SAAS,GAAG,CAAC,GAAG,CAAC;UAAE,CAAC,CAAE;UACjE6B,MAAM,EAAET,aAAc;UACtB9B,OAAO,EAAExF,qBAAsB;UAC/BqG,YAAY,EAAEA,YAAa;UAAApC,QAAA,EAE3B,IAAAzH,WAAA,CAAA6C,GAAA,EAACjD,0BAAA,CAAA4L,yBAAyB,CAAC3C,QAAQ;YACjCC,KAAK,EAAEL,cAAc,KAAK,QAAQ,GAAGrB,YAAY,GAAG,CAAE;YAAAK,QAAA,EAEtD,IAAAzH,WAAA,CAAA6C,GAAA,EAAC1D,SAAA,CAAAsM,MAAM;cACLC,OAAO,EAAEhC,SAAU;cACnBpE,KAAK,EAAE8D,UAAU,CAAC9D,KAAM;cACxBlC,UAAU,EAAEgG,UAAU,CAAChG,UAAW;cAClCkH,WAAW,EAAEA,WAAY;cACzBC,qBAAqB,EAAEA,qBAAsB;cAC7CC,iBAAiB,EAAEA,iBAAkB;cACrCT,MAAM,EAAEA,MAAM,CAAC;gBACbE,MAAM,EAAEvD,UAAU;gBAClBpB,KAAK,EAAE8D,UAAU,CAAC9D,KAAK;gBACvBlC,UAAU,EACRgG,UAAU,CAAChG,UAAoD;gBACjEX,OAAO,EAAE2G,UAAU,CAAC3G;cACtB,CAAC,CAAE;cACHwE,KAAK,EAAE,CAACwD,gBAAgB,EAAEI,gBAAgB,IAAIH,UAAU,CAAE;cAAAjD,QAAA,EAEzD2B,UAAU,CAACuC,MAAM,CAAC;YAAC,CACd;UAAC,CACyB;QAAC,GA3BhCrG,KAAK,CAAC1B,GA4BA,CAAC;MAElB,CAAC;IAAC,CACkB,CAAC,EACtB6E,cAAc,KAAK,KAAK,GACvB,IAAAzI,WAAA,CAAA6C,GAAA,EAAClD,kCAAA,CAAAiJ,iCAAiC,CAACC,QAAQ;MAACC,KAAK,EAAEzB,eAAgB;MAAAI,QAAA,EAChEH,YAAY,CAAC;IAAC,CAC2B,CAAC,GAC3C,IAAI;EAAA,CACc,CAAC;AAE7B;AAEA,IAAM2B,MAAM,GAAGzJ,YAAA,CAAA4L,UAAU,CAACQ,MAAM,CAAC;EAC/B1C,OAAO,EAAE;IACP2C,IAAI,EAAE,CAAC;IACPC,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}