{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useEffect } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { ErrorToastMessage } from \"./ErrorToastMessage\";\nimport * as LogBoxData from \"../Data/LogBoxData\";\nimport * as LogBoxStyle from \"../UI/LogBoxStyle\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction useSymbolicatedLog(log) {\n  useEffect(function () {\n    LogBoxData.symbolicateLogLazy('stack', log);\n    LogBoxData.symbolicateLogLazy('component', log);\n  }, [log]);\n}\nexport function ErrorToast(props) {\n  var totalLogCount = props.totalLogCount,\n    level = props.level,\n    log = props.log;\n  useSymbolicatedLog(log);\n  return _jsx(View, {\n    style: toastStyles.container,\n    children: _jsx(Pressable, {\n      style: {\n        flex: 1\n      },\n      onPress: props.onPressOpen,\n      children: function children(_ref) {\n        var hovered = _ref.hovered,\n          pressed = _ref.pressed;\n        return _jsxs(View, {\n          style: [toastStyles.press, {\n            transitionDuration: '150ms',\n            backgroundColor: pressed ? '#323232' : hovered ? '#111111' : LogBoxStyle.getBackgroundColor()\n          }],\n          children: [_jsx(Count, {\n            count: totalLogCount,\n            level: level\n          }), _jsx(ErrorToastMessage, {\n            message: log.message\n          }), _jsx(Dismiss, {\n            onPress: props.onPressDismiss\n          })]\n        });\n      }\n    })\n  });\n}\nfunction Count(_ref2) {\n  var count = _ref2.count,\n    level = _ref2.level;\n  return _jsx(View, {\n    style: [countStyles.inside, countStyles[level]],\n    children: _jsx(Text, {\n      style: countStyles.text,\n      children: count <= 1 ? '!' : count\n    })\n  });\n}\nfunction Dismiss(_ref3) {\n  var onPress = _ref3.onPress;\n  return _jsx(Pressable, {\n    style: {\n      marginLeft: 5\n    },\n    hitSlop: {\n      top: 12,\n      right: 10,\n      bottom: 12,\n      left: 10\n    },\n    onPress: onPress,\n    children: function children(_ref4) {\n      var hovered = _ref4.hovered,\n        pressed = _ref4.pressed;\n      return _jsx(View, {\n        style: [dismissStyles.press, hovered && {\n          opacity: 0.8\n        }, pressed && {\n          opacity: 0.5\n        }],\n        children: _jsx(Image, {\n          source: require('@expo/metro-runtime/assets/close.png'),\n          style: dismissStyles.image\n        })\n      });\n    }\n  });\n}\nvar countStyles = StyleSheet.create({\n  warn: {\n    backgroundColor: LogBoxStyle.getWarningColor(1)\n  },\n  error: {\n    backgroundColor: LogBoxStyle.getErrorColor(1)\n  },\n  log: {\n    backgroundColor: LogBoxStyle.getLogColor(1)\n  },\n  inside: {\n    marginRight: 8,\n    minWidth: 22,\n    aspectRatio: 1,\n    paddingHorizontal: 4,\n    borderRadius: 11,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  text: _objectSpread({\n    color: LogBoxStyle.getTextColor(1),\n    fontSize: 14,\n    lineHeight: 18,\n    textAlign: 'center',\n    fontWeight: '600'\n  }, Platform.select({\n    web: {\n      textShadow: `0px 0px 3px ${LogBoxStyle.getBackgroundColor(0.8)}`\n    }\n  }))\n});\nvar dismissStyles = StyleSheet.create({\n  press: {\n    backgroundColor: '#323232',\n    height: 20,\n    width: 20,\n    borderRadius: 25,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  image: {\n    height: 8,\n    width: 8\n  }\n});\nvar toastStyles = StyleSheet.create({\n  container: {\n    height: 48,\n    justifyContent: 'center',\n    marginBottom: 4\n  },\n  press: {\n    borderWidth: 1,\n    borderRadius: 8,\n    overflow: 'hidden',\n    flexDirection: 'row',\n    alignItems: 'center',\n    borderColor: '#323232',\n    backgroundColor: LogBoxStyle.getBackgroundColor(),\n    flex: 1,\n    paddingHorizontal: 12\n  }\n});","map":{"version":3,"names":["React","useEffect","Image","Platform","Pressable","StyleSheet","Text","View","ErrorToastMessage","LogBoxData","LogBoxStyle","jsx","_jsx","jsxs","_jsxs","useSymbolicatedLog","log","symbolicateLogLazy","ErrorToast","props","totalLogCount","level","style","toastStyles","container","children","flex","onPress","onPressOpen","_ref","hovered","pressed","press","transitionDuration","backgroundColor","getBackgroundColor","Count","count","message","Dismiss","onPressDismiss","_ref2","countStyles","inside","text","_ref3","marginLeft","hitSlop","top","right","bottom","left","_ref4","dismissStyles","opacity","source","require","image","create","warn","getWarningColor","error","getErrorColor","getLogColor","marginRight","minWidth","aspectRatio","paddingHorizontal","borderRadius","justifyContent","alignItems","_objectSpread","color","getTextColor","fontSize","lineHeight","textAlign","fontWeight","select","web","textShadow","height","width","marginBottom","borderWidth","overflow","flexDirection","borderColor"],"sources":["C:/Users/R User/Documents/software_dev/BranchBuddy/node_modules/@expo/metro-runtime/src/error-overlay/toast/ErrorToast.tsx"],"sourcesContent":["/**\n * Copyright (c) 650 Industries.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, { useEffect } from 'react';\nimport { Image, Platform, Pressable, StyleSheet, Text, View } from 'react-native';\n\nimport { ErrorToastMessage } from './ErrorToastMessage';\nimport * as LogBoxData from '../Data/LogBoxData';\nimport { LogBoxLog } from '../Data/LogBoxLog';\nimport * as LogBoxStyle from '../UI/LogBoxStyle';\n\ntype Props = {\n  log: LogBoxLog;\n  totalLogCount: number;\n  level: 'warn' | 'error';\n  onPressOpen: () => void;\n  onPressDismiss: () => void;\n};\n\nfunction useSymbolicatedLog(log: LogBoxLog) {\n  // Eagerly symbolicate so the stack is available when pressing to inspect.\n  useEffect(() => {\n    LogBoxData.symbolicateLogLazy('stack', log);\n    LogBoxData.symbolicateLogLazy('component', log);\n  }, [log]);\n}\n\nexport function ErrorToast(props: Props) {\n  const { totalLogCount, level, log } = props;\n\n  useSymbolicatedLog(log);\n\n  return (\n    <View style={toastStyles.container}>\n      <Pressable style={{ flex: 1 }} onPress={props.onPressOpen}>\n        {({\n          /** @ts-expect-error: react-native types are broken. */\n          hovered,\n          pressed,\n        }) => (\n          <View\n            style={[\n              toastStyles.press,\n              {\n                // @ts-expect-error: web-only type\n                transitionDuration: '150ms',\n                backgroundColor: pressed\n                  ? '#323232'\n                  : hovered\n                    ? '#111111'\n                    : LogBoxStyle.getBackgroundColor(),\n              },\n            ]}>\n            <Count count={totalLogCount} level={level} />\n            <ErrorToastMessage message={log.message} />\n            <Dismiss onPress={props.onPressDismiss} />\n          </View>\n        )}\n      </Pressable>\n    </View>\n  );\n}\n\nfunction Count({ count, level }: { count: number; level: Props['level'] }) {\n  return (\n    <View style={[countStyles.inside, countStyles[level]]}>\n      <Text style={countStyles.text}>{count <= 1 ? '!' : count}</Text>\n    </View>\n  );\n}\n\nfunction Dismiss({ onPress }: { onPress: () => void }) {\n  return (\n    <Pressable\n      style={{\n        marginLeft: 5,\n      }}\n      hitSlop={{\n        top: 12,\n        right: 10,\n        bottom: 12,\n        left: 10,\n      }}\n      onPress={onPress}>\n      {({\n        /** @ts-expect-error: react-native types are broken. */\n        hovered,\n        pressed,\n      }) => (\n        <View\n          style={[dismissStyles.press, hovered && { opacity: 0.8 }, pressed && { opacity: 0.5 }]}>\n          <Image\n            source={require('@expo/metro-runtime/assets/close.png')}\n            style={dismissStyles.image}\n          />\n        </View>\n      )}\n    </Pressable>\n  );\n}\n\nconst countStyles = StyleSheet.create({\n  warn: {\n    backgroundColor: LogBoxStyle.getWarningColor(1),\n  },\n  error: {\n    backgroundColor: LogBoxStyle.getErrorColor(1),\n  },\n  log: {\n    backgroundColor: LogBoxStyle.getLogColor(1),\n  },\n  inside: {\n    marginRight: 8,\n    minWidth: 22,\n    aspectRatio: 1,\n    paddingHorizontal: 4,\n    borderRadius: 11,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  text: {\n    color: LogBoxStyle.getTextColor(1),\n    fontSize: 14,\n    lineHeight: 18,\n    textAlign: 'center',\n    fontWeight: '600',\n    ...Platform.select({\n      web: {\n        textShadow: `0px 0px 3px ${LogBoxStyle.getBackgroundColor(0.8)}`,\n      },\n    }),\n  },\n});\n\nconst dismissStyles = StyleSheet.create({\n  press: {\n    backgroundColor: '#323232',\n    height: 20,\n    width: 20,\n    borderRadius: 25,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  image: {\n    height: 8,\n    width: 8,\n  },\n});\n\nconst toastStyles = StyleSheet.create({\n  container: {\n    height: 48,\n    justifyContent: 'center',\n    marginBottom: 4,\n  },\n  press: {\n    borderWidth: 1,\n    borderRadius: 8,\n    overflow: 'hidden',\n    flexDirection: 'row',\n    alignItems: 'center',\n    borderColor: '#323232',\n    backgroundColor: LogBoxStyle.getBackgroundColor(),\n    flex: 1,\n    paddingHorizontal: 12,\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}