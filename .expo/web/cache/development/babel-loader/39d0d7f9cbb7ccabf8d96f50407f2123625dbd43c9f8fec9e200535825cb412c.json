{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"headerConfig\", \"activityState\", \"stackPresentation\", \"contentStyle\", \"style\", \"screenId\", \"unstable_sheetFooter\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport warnOnce from 'warn-once';\nimport DebugContainer from \"./DebugContainer\";\nimport { ScreenStackHeaderConfig } from \"./ScreenStackHeaderConfig\";\nimport Screen from \"./Screen\";\nimport ScreenStack from \"./ScreenStack\";\nimport { RNSScreensRefContext } from \"../contexts\";\nimport { FooterComponent } from \"./ScreenFooter\";\nfunction ScreenStackItem(_ref, ref) {\n  var _headerConfig$largeTi, _headerConfig$largeTi2;\n  var children = _ref.children,\n    headerConfig = _ref.headerConfig,\n    activityState = _ref.activityState,\n    stackPresentation = _ref.stackPresentation,\n    contentStyle = _ref.contentStyle,\n    style = _ref.style,\n    screenId = _ref.screenId,\n    unstable_sheetFooter = _ref.unstable_sheetFooter,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var currentScreenRef = React.useRef(null);\n  var screenRefs = React.useContext(RNSScreensRefContext);\n  React.useImperativeHandle(ref, function () {\n    return currentScreenRef.current;\n  });\n  var isHeaderInModal = Platform.OS === 'android' ? false : stackPresentation !== 'push' && (headerConfig == null ? void 0 : headerConfig.hidden) === false;\n  var headerHiddenPreviousRef = React.useRef(headerConfig == null ? void 0 : headerConfig.hidden);\n  React.useEffect(function () {\n    warnOnce(Platform.OS !== 'android' && stackPresentation !== 'push' && headerHiddenPreviousRef.current !== (headerConfig == null ? void 0 : headerConfig.hidden), `Dynamically changing header's visibility in modals will result in remounting the screen and losing all local state.`);\n    headerHiddenPreviousRef.current = headerConfig == null ? void 0 : headerConfig.hidden;\n  }, [headerConfig == null ? void 0 : headerConfig.hidden, stackPresentation]);\n  var content = React.createElement(React.Fragment, null, React.createElement(DebugContainer, {\n    style: [stackPresentation === 'formSheet' ? Platform.OS === 'ios' ? styles.absolute : null : styles.container, contentStyle],\n    stackPresentation: stackPresentation != null ? stackPresentation : 'push'\n  }, children), React.createElement(ScreenStackHeaderConfig, headerConfig), stackPresentation === 'formSheet' && unstable_sheetFooter && React.createElement(FooterComponent, null, unstable_sheetFooter()));\n  var internalScreenStyle;\n  if (stackPresentation === 'formSheet' && contentStyle) {\n    var flattenContentStyles = StyleSheet.flatten(contentStyle);\n    internalScreenStyle = {\n      backgroundColor: flattenContentStyles == null ? void 0 : flattenContentStyles.backgroundColor\n    };\n  }\n  return React.createElement(Screen, _extends({\n    ref: function ref(node) {\n      currentScreenRef.current = node;\n      if (screenRefs === null) {\n        console.warn('Looks like RNSScreensRefContext is missing. Make sure the ScreenStack component is wrapped in it');\n        return;\n      }\n      var currentRefs = screenRefs.current;\n      if (node === null) {\n        delete currentRefs[screenId];\n      } else {\n        currentRefs[screenId] = {\n          current: node\n        };\n      }\n    },\n    enabled: true,\n    isNativeStack: true,\n    activityState: activityState,\n    stackPresentation: stackPresentation,\n    hasLargeHeader: (_headerConfig$largeTi = headerConfig == null ? void 0 : headerConfig.largeTitle) != null ? _headerConfig$largeTi : false,\n    style: [style, internalScreenStyle]\n  }, rest), isHeaderInModal ? React.createElement(ScreenStack, {\n    style: styles.container\n  }, React.createElement(Screen, {\n    enabled: true,\n    isNativeStack: true,\n    activityState: activityState,\n    hasLargeHeader: (_headerConfig$largeTi2 = headerConfig == null ? void 0 : headerConfig.largeTitle) != null ? _headerConfig$largeTi2 : false,\n    style: StyleSheet.absoluteFill\n  }, content)) : content);\n}\nexport default React.forwardRef(ScreenStackItem);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  absolute: {\n    position: 'absolute',\n    top: 0,\n    start: 0,\n    end: 0\n  }\n});","map":{"version":3,"names":["React","Platform","StyleSheet","warnOnce","DebugContainer","ScreenStackHeaderConfig","Screen","ScreenStack","RNSScreensRefContext","FooterComponent","ScreenStackItem","_ref","ref","_headerConfig$largeTi","_headerConfig$largeTi2","children","headerConfig","activityState","stackPresentation","contentStyle","style","screenId","unstable_sheetFooter","rest","_objectWithoutProperties","_excluded","currentScreenRef","useRef","screenRefs","useContext","useImperativeHandle","current","isHeaderInModal","OS","hidden","headerHiddenPreviousRef","useEffect","content","createElement","Fragment","styles","absolute","container","internalScreenStyle","flattenContentStyles","flatten","backgroundColor","_extends","node","console","warn","currentRefs","enabled","isNativeStack","hasLargeHeader","largeTitle","absoluteFill","forwardRef","create","flex","position","top","start","end"],"sources":["C:\\Users\\R User\\Documents\\software_dev\\BranchBuddy\\node_modules\\react-native-screens\\src\\components\\ScreenStackItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Platform,\n  type StyleProp,\n  StyleSheet,\n  type ViewStyle,\n  View,\n} from 'react-native';\nimport warnOnce from 'warn-once';\n\nimport DebugContainer from './DebugContainer';\nimport { ScreenProps, ScreenStackHeaderConfigProps } from '../types';\nimport { ScreenStackHeaderConfig } from './ScreenStackHeaderConfig';\nimport Screen from './Screen';\nimport ScreenStack from './ScreenStack';\nimport { RNSScreensRefContext } from '../contexts';\nimport { FooterComponent } from './ScreenFooter';\n\ntype Props = Omit<\n  ScreenProps,\n  'enabled' | 'isNativeStack' | 'hasLargeHeader'\n> & {\n  screenId: string;\n  headerConfig?: ScreenStackHeaderConfigProps;\n  contentStyle?: StyleProp<ViewStyle>;\n};\n\nfunction ScreenStackItem(\n  {\n    children,\n    headerConfig,\n    activityState,\n    stackPresentation,\n    contentStyle,\n    style,\n    screenId,\n    // eslint-disable-next-line camelcase\n    unstable_sheetFooter,\n    ...rest\n  }: Props,\n  ref: React.ForwardedRef<View>,\n) {\n  const currentScreenRef = React.useRef<View | null>(null);\n  const screenRefs = React.useContext(RNSScreensRefContext);\n\n  React.useImperativeHandle(ref, () => currentScreenRef.current!);\n\n  const isHeaderInModal =\n    Platform.OS === 'android'\n      ? false\n      : stackPresentation !== 'push' && headerConfig?.hidden === false;\n\n  const headerHiddenPreviousRef = React.useRef(headerConfig?.hidden);\n\n  React.useEffect(() => {\n    warnOnce(\n      Platform.OS !== 'android' &&\n        stackPresentation !== 'push' &&\n        headerHiddenPreviousRef.current !== headerConfig?.hidden,\n      `Dynamically changing header's visibility in modals will result in remounting the screen and losing all local state.`,\n    );\n\n    headerHiddenPreviousRef.current = headerConfig?.hidden;\n  }, [headerConfig?.hidden, stackPresentation]);\n\n  const content = (\n    <>\n      <DebugContainer\n        style={[\n          stackPresentation === 'formSheet'\n            ? Platform.OS === 'ios'\n              ? styles.absolute\n              : null\n            : styles.container,\n          contentStyle,\n        ]}\n        stackPresentation={stackPresentation ?? 'push'}>\n        {children}\n      </DebugContainer>\n      {/**\n       * `HeaderConfig` needs to be the direct child of `Screen` without any intermediate `View`\n       * We don't render it conditionally based on visibility to make it possible to dynamically render a custom `header`\n       * Otherwise dynamically rendering a custom `header` leaves the native header visible\n       *\n       * https://github.com/software-mansion/react-native-screens/blob/main/guides/GUIDE_FOR_LIBRARY_AUTHORS.md#screenstackheaderconfig\n       *\n       * HeaderConfig must not be first child of a Screen.\n       * See https://github.com/software-mansion/react-native-screens/pull/1825\n       * for detailed explanation.\n       */}\n      <ScreenStackHeaderConfig {...headerConfig} />\n      {/* eslint-disable-next-line camelcase */}\n      {stackPresentation === 'formSheet' && unstable_sheetFooter && (\n        <FooterComponent>{unstable_sheetFooter()}</FooterComponent>\n      )}\n    </>\n  );\n\n  // We take backgroundColor from contentStyle and apply it on Screen.\n  // This allows to workaround one issue with truncated\n  // content with formSheet presentation.\n  let internalScreenStyle;\n\n  if (stackPresentation === 'formSheet' && contentStyle) {\n    const flattenContentStyles = StyleSheet.flatten(contentStyle);\n    internalScreenStyle = {\n      backgroundColor: flattenContentStyles?.backgroundColor,\n    };\n  }\n\n  return (\n    <Screen\n      ref={node => {\n        currentScreenRef.current = node;\n\n        if (screenRefs === null) {\n          console.warn(\n            'Looks like RNSScreensRefContext is missing. Make sure the ScreenStack component is wrapped in it',\n          );\n          return;\n        }\n\n        const currentRefs = screenRefs.current;\n\n        if (node === null) {\n          // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n          delete currentRefs[screenId];\n        } else {\n          currentRefs[screenId] = { current: node };\n        }\n      }}\n      enabled\n      isNativeStack\n      activityState={activityState}\n      stackPresentation={stackPresentation}\n      hasLargeHeader={headerConfig?.largeTitle ?? false}\n      style={[style, internalScreenStyle]}\n      {...rest}>\n      {isHeaderInModal ? (\n        <ScreenStack style={styles.container}>\n          <Screen\n            enabled\n            isNativeStack\n            activityState={activityState}\n            hasLargeHeader={headerConfig?.largeTitle ?? false}\n            style={StyleSheet.absoluteFill}>\n            {content}\n          </Screen>\n        </ScreenStack>\n      ) : (\n        content\n      )}\n    </Screen>\n  );\n}\n\nexport default React.forwardRef(ScreenStackItem);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  absolute: {\n    position: 'absolute',\n    top: 0,\n    start: 0,\n    end: 0,\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}