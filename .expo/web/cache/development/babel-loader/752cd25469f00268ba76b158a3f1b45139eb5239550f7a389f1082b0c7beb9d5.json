{"ast":null,"code":"'use client';\n\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { LogBoxButton } from \"../UI/LogBoxButton\";\nimport * as LogBoxStyle from \"../UI/LogBoxStyle\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function LogBoxInspectorSourceMapStatus(props) {\n  var _color;\n  var _useState = useState({\n      animation: null,\n      rotate: null\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    state = _useState2[0],\n    setState = _useState2[1];\n  useEffect(function () {\n    if (props.status === 'PENDING') {\n      if (state.animation == null) {\n        var animated = new Animated.Value(0);\n        var animation = Animated.loop(Animated.timing(animated, {\n          duration: 2000,\n          easing: Easing.linear,\n          toValue: 1,\n          useNativeDriver: true\n        }));\n        setState({\n          animation: animation,\n          rotate: animated.interpolate({\n            inputRange: [0, 1],\n            outputRange: ['0deg', '360deg']\n          })\n        });\n        animation.start();\n      }\n    } else {\n      if (state.animation != null) {\n        state.animation.stop();\n        setState({\n          animation: null,\n          rotate: null\n        });\n      }\n    }\n    return function () {\n      if (state.animation != null) {\n        state.animation.stop();\n      }\n    };\n  }, [props.status, state.animation]);\n  var image;\n  var color;\n  switch (props.status) {\n    case 'FAILED':\n      image = require('@expo/metro-runtime/assets/alert-triangle.png');\n      color = LogBoxStyle.getErrorColor(1);\n      break;\n    case 'PENDING':\n      image = require('@expo/metro-runtime/assets/loader.png');\n      color = LogBoxStyle.getWarningColor(1);\n      break;\n  }\n  if (props.status === 'COMPLETE' || image == null) {\n    return null;\n  }\n  return _jsxs(LogBoxButton, {\n    backgroundColor: {\n      default: 'transparent',\n      pressed: LogBoxStyle.getBackgroundColor(1)\n    },\n    hitSlop: {\n      bottom: 8,\n      left: 8,\n      right: 8,\n      top: 8\n    },\n    onPress: props.onPress,\n    style: styles.root,\n    children: [_jsx(Animated.Image, {\n      source: image,\n      tintColor: (_color = color) != null ? _color : LogBoxStyle.getTextColor(0.4),\n      style: [styles.image, state.rotate == null || props.status !== 'PENDING' ? null : {\n        transform: [{\n          rotate: state.rotate\n        }]\n      }]\n    }), _jsx(Text, {\n      style: [styles.text, {\n        color: color\n      }],\n      children: \"Source Map\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  root: {\n    alignItems: 'center',\n    borderRadius: 12,\n    flexDirection: 'row',\n    height: 24,\n    paddingHorizontal: 8\n  },\n  image: {\n    height: 14,\n    width: 16,\n    marginEnd: 4\n  },\n  text: {\n    fontSize: 12,\n    includeFontPadding: false,\n    lineHeight: 16\n  }\n});","map":{"version":3,"names":["_slicedToArray","React","useEffect","useState","Animated","Easing","StyleSheet","Text","LogBoxButton","LogBoxStyle","jsx","_jsx","jsxs","_jsxs","LogBoxInspectorSourceMapStatus","props","_color","_useState","animation","rotate","_useState2","state","setState","status","animated","Value","loop","timing","duration","easing","linear","toValue","useNativeDriver","interpolate","inputRange","outputRange","start","stop","image","color","require","getErrorColor","getWarningColor","backgroundColor","default","pressed","getBackgroundColor","hitSlop","bottom","left","right","top","onPress","style","styles","root","children","Image","source","tintColor","getTextColor","transform","text","create","alignItems","borderRadius","flexDirection","height","paddingHorizontal","width","marginEnd","fontSize","includeFontPadding","lineHeight"],"sources":["C:/Users/R User/Documents/software_dev/BranchBuddy/node_modules/@expo/metro-runtime/src/error-overlay/overlay/LogBoxInspectorSourceMapStatus.tsx"],"sourcesContent":["/**\n * Copyright (c) 650 Industries.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use client';\n\nimport React, { useEffect, useState } from 'react';\nimport { Animated, Easing, StyleSheet, Text } from 'react-native';\nimport type { GestureResponderEvent } from 'react-native';\n\nimport { LogBoxButton } from '../UI/LogBoxButton';\nimport * as LogBoxStyle from '../UI/LogBoxStyle';\n\ntype Props = {\n  onPress?: ((event: GestureResponderEvent) => void) | null;\n  status: 'COMPLETE' | 'FAILED' | 'NONE' | 'PENDING';\n};\n\nexport function LogBoxInspectorSourceMapStatus(props: Props) {\n  const [state, setState] = useState<{\n    animation: null | Animated.CompositeAnimation;\n    rotate: null | Animated.AnimatedInterpolation<string>;\n  }>({\n    animation: null,\n    rotate: null,\n  });\n\n  useEffect(() => {\n    if (props.status === 'PENDING') {\n      if (state.animation == null) {\n        const animated = new Animated.Value(0);\n        const animation = Animated.loop(\n          Animated.timing(animated, {\n            duration: 2000,\n            easing: Easing.linear,\n            toValue: 1,\n            useNativeDriver: true,\n          })\n        );\n        setState({\n          animation,\n          rotate: animated.interpolate({\n            inputRange: [0, 1],\n            outputRange: ['0deg', '360deg'],\n          }),\n        });\n        animation.start();\n      }\n    } else {\n      if (state.animation != null) {\n        state.animation.stop();\n        setState({\n          animation: null,\n          rotate: null,\n        });\n      }\n    }\n\n    return () => {\n      if (state.animation != null) {\n        state.animation.stop();\n      }\n    };\n  }, [props.status, state.animation]);\n\n  let image;\n  let color;\n  switch (props.status) {\n    case 'FAILED':\n      image = require('@expo/metro-runtime/assets/alert-triangle.png');\n      color = LogBoxStyle.getErrorColor(1);\n      break;\n    case 'PENDING':\n      image = require('@expo/metro-runtime/assets/loader.png');\n      color = LogBoxStyle.getWarningColor(1);\n      break;\n  }\n\n  if (props.status === 'COMPLETE' || image == null) {\n    return null;\n  }\n\n  return (\n    <LogBoxButton\n      backgroundColor={{\n        default: 'transparent',\n        pressed: LogBoxStyle.getBackgroundColor(1),\n      }}\n      hitSlop={{ bottom: 8, left: 8, right: 8, top: 8 }}\n      onPress={props.onPress}\n      style={styles.root}>\n      <Animated.Image\n        source={image}\n        tintColor={color ?? LogBoxStyle.getTextColor(0.4)}\n        style={[\n          styles.image,\n          state.rotate == null || props.status !== 'PENDING'\n            ? null\n            : { transform: [{ rotate: state.rotate }] },\n        ]}\n      />\n      <Text style={[styles.text, { color }]}>Source Map</Text>\n    </LogBoxButton>\n  );\n}\n\nconst styles = StyleSheet.create({\n  root: {\n    alignItems: 'center',\n    borderRadius: 12,\n    flexDirection: 'row',\n    height: 24,\n    paddingHorizontal: 8,\n  },\n  image: {\n    height: 14,\n    width: 16,\n    marginEnd: 4,\n  },\n  text: {\n    fontSize: 12,\n    includeFontPadding: false,\n    lineHeight: 16,\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}