{"ast":null,"code":"'use client';\n\"use strict\";\n\nvar _reactJsxRuntime = require(\"react/jsx-runtime\");\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DefaultNavigator = exports.Slot = exports.useNavigatorContext = exports.Navigator = exports.NavigatorContext = void 0;\nvar native_1 = require(\"@react-navigation/native\");\nvar React = __importStar(require(\"react\"));\nvar react_native_safe_area_context_1 = require(\"react-native-safe-area-context\");\nvar Screen_1 = require(\"./Screen\");\nvar Route_1 = require(\"../Route\");\nvar withLayoutContext_1 = require(\"../layouts/withLayoutContext\");\nvar useScreens_1 = require(\"../useScreens\");\nexports.NavigatorContext = React.createContext(null);\nif (process.env.NODE_ENV !== 'production') {\n  exports.NavigatorContext.displayName = 'NavigatorContext';\n}\nfunction Navigator(_ref) {\n  var initialRouteName = _ref.initialRouteName,\n    screenOptions = _ref.screenOptions,\n    children = _ref.children,\n    router = _ref.router,\n    routerOptions = _ref.routerOptions;\n  var contextKey = (0, Route_1.useContextKey)();\n  var _ref2 = (0, withLayoutContext_1.useFilterScreenChildren)(children, {\n      isCustomNavigator: true,\n      contextKey: contextKey\n    }),\n    screens = _ref2.screens,\n    nonScreenChildren = _ref2.children;\n  var sortedScreens = (0, useScreens_1.useSortedScreens)(screens != null ? screens : []);\n  router ||= native_1.StackRouter;\n  var navigation = (0, native_1.useNavigationBuilder)(router, _objectSpread(_objectSpread({}, routerOptions), {}, {\n    id: contextKey,\n    children: sortedScreens || [_reactJsxRuntime.jsx(Screen_1.Screen, {}, \"default\")],\n    screenOptions: screenOptions,\n    initialRouteName: initialRouteName\n  }));\n  if (!sortedScreens.length) {\n    console.warn(`Navigator at \"${contextKey}\" has no children.`);\n    return null;\n  }\n  return _reactJsxRuntime.jsx(exports.NavigatorContext.Provider, {\n    value: _objectSpread(_objectSpread({}, navigation), {}, {\n      contextKey: contextKey,\n      router: router\n    }),\n    children: nonScreenChildren\n  });\n}\nexports.Navigator = Navigator;\nfunction useNavigatorContext() {\n  var context = React.useContext(exports.NavigatorContext);\n  if (!context) {\n    throw new Error('useNavigatorContext must be used within a <Navigator />');\n  }\n  return context;\n}\nexports.useNavigatorContext = useNavigatorContext;\nfunction SlotNavigator(props) {\n  var contextKey = (0, Route_1.useContextKey)();\n  var _ref3 = (0, withLayoutContext_1.useFilterScreenChildren)([], {\n      contextKey: contextKey\n    }),\n    screens = _ref3.screens;\n  var _ref4 = (0, native_1.useNavigationBuilder)(native_1.StackRouter, _objectSpread(_objectSpread({}, props), {}, {\n      id: contextKey,\n      children: (0, useScreens_1.useSortedScreens)(screens != null ? screens : [])\n    })),\n    state = _ref4.state,\n    descriptors = _ref4.descriptors,\n    NavigationContent = _ref4.NavigationContent;\n  return _reactJsxRuntime.jsx(NavigationContent, {\n    children: descriptors[state.routes[state.index].key].render()\n  });\n}\nfunction Slot(props) {\n  var contextKey = (0, Route_1.useContextKey)();\n  var context = React.useContext(exports.NavigatorContext);\n  if ((context == null ? void 0 : context.contextKey) !== contextKey) {\n    return _reactJsxRuntime.jsx(SlotNavigator, _objectSpread({}, props));\n  }\n  return _reactJsxRuntime.jsx(NavigatorSlot, {});\n}\nexports.Slot = Slot;\nfunction NavigatorSlot() {\n  var _descriptors$state$ro, _descriptors$state$ro2;\n  var context = useNavigatorContext();\n  var state = context.state,\n    descriptors = context.descriptors;\n  return (_descriptors$state$ro = (_descriptors$state$ro2 = descriptors[state.routes[state.index].key]) == null ? void 0 : _descriptors$state$ro2.render()) != null ? _descriptors$state$ro : null;\n}\nfunction DefaultNavigator() {\n  return _reactJsxRuntime.jsx(react_native_safe_area_context_1.SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    children: _reactJsxRuntime.jsx(SlotNavigator, {})\n  });\n}\nexports.DefaultNavigator = DefaultNavigator;\nNavigator.Slot = NavigatorSlot;\nNavigator.useContext = useNavigatorContext;\nNavigator.Screen = Screen_1.Screen;","map":{"version":3,"names":["native_1","require","React","__importStar","react_native_safe_area_context_1","Screen_1","Route_1","withLayoutContext_1","useScreens_1","exports","NavigatorContext","createContext","process","env","NODE_ENV","displayName","Navigator","_ref","initialRouteName","screenOptions","children","router","routerOptions","contextKey","useContextKey","_ref2","useFilterScreenChildren","isCustomNavigator","screens","nonScreenChildren","sortedScreens","useSortedScreens","StackRouter","navigation","useNavigationBuilder","_objectSpread","id","_reactJsxRuntime","jsx","Screen","length","console","warn","Provider","value","useNavigatorContext","context","useContext","Error","SlotNavigator","props","_ref3","_ref4","state","descriptors","NavigationContent","routes","index","key","render","Slot","NavigatorSlot","_descriptors$state$ro","_descriptors$state$ro2","DefaultNavigator","SafeAreaView","style","flex"],"sources":["C:\\Users\\R User\\Documents\\software_dev\\BranchBuddy\\node_modules\\expo-router\\src\\views\\Navigator.tsx"],"sourcesContent":["// Copyright Â© 2024 650 Industries.\n'use client';\n\nimport { RouterFactory, StackRouter, useNavigationBuilder } from '@react-navigation/native';\nimport * as React from 'react';\nimport { SafeAreaView } from 'react-native-safe-area-context';\n\nimport { Screen } from './Screen';\nimport { useContextKey } from '../Route';\nimport { useFilterScreenChildren } from '../layouts/withLayoutContext';\nimport { useSortedScreens } from '../useScreens';\n\nexport type NavigatorContextValue = ReturnType<typeof useNavigationBuilder> & {\n  contextKey: string;\n  router: RouterFactory<any, any, any>;\n};\n\nexport const NavigatorContext = React.createContext<NavigatorContextValue | null>(null);\n\nif (process.env.NODE_ENV !== 'production') {\n  NavigatorContext.displayName = 'NavigatorContext';\n}\n\ntype UseNavigationBuilderRouter = Parameters<typeof useNavigationBuilder>[0];\ntype UseNavigationBuilderOptions = Parameters<typeof useNavigationBuilder>[1];\n\nexport type NavigatorProps<T extends UseNavigationBuilderRouter> = {\n  initialRouteName?: UseNavigationBuilderOptions['initialRouteName'];\n  screenOptions?: UseNavigationBuilderOptions['screenOptions'];\n  children?: UseNavigationBuilderOptions['children'];\n  router?: T;\n  routerOptions?: Omit<Parameters<T>[0], 'initialRouteName'>;\n};\n\n/**\n * An unstyled custom navigator. Good for basic web layouts.\n *\n * @hidden\n */\nexport function Navigator<T extends UseNavigationBuilderRouter = typeof StackRouter>({\n  initialRouteName,\n  screenOptions,\n  children,\n  router,\n  routerOptions,\n}: NavigatorProps<T>) {\n  const contextKey = useContextKey();\n\n  // A custom navigator can have a mix of Screen and other components (like a Slot inside a View)\n  const { screens, children: nonScreenChildren } = useFilterScreenChildren(children, {\n    isCustomNavigator: true,\n    contextKey,\n  });\n\n  const sortedScreens = useSortedScreens(screens ?? []);\n\n  router ||= StackRouter as unknown as T;\n\n  const navigation = useNavigationBuilder(router, {\n    // Used for getting the parent with navigation.getParent('/normalized/path')\n    ...routerOptions,\n    id: contextKey,\n    children: sortedScreens || [<Screen key=\"default\" />],\n    screenOptions,\n    initialRouteName,\n  });\n\n  // useNavigationBuilder requires at least one screen to be defined otherwise it will throw.\n  if (!sortedScreens.length) {\n    console.warn(`Navigator at \"${contextKey}\" has no children.`);\n    return null;\n  }\n\n  return (\n    <NavigatorContext.Provider\n      value={{\n        ...navigation,\n        contextKey,\n        router,\n      }}>\n      {nonScreenChildren}\n    </NavigatorContext.Provider>\n  );\n}\n\n/**\n * @hidden\n */\nexport function useNavigatorContext() {\n  const context = React.useContext(NavigatorContext);\n  if (!context) {\n    throw new Error('useNavigatorContext must be used within a <Navigator />');\n  }\n  return context;\n}\n\nfunction SlotNavigator(props: NavigatorProps<any>) {\n  const contextKey = useContextKey();\n\n  // Allows adding Screen components as children to configure routes.\n  const { screens } = useFilterScreenChildren([], {\n    contextKey,\n  });\n\n  const { state, descriptors, NavigationContent } = useNavigationBuilder(StackRouter, {\n    ...props,\n    id: contextKey,\n    children: useSortedScreens(screens ?? []),\n  });\n\n  return (\n    <NavigationContent>{descriptors[state.routes[state.index].key].render()}</NavigationContent>\n  );\n}\n\n/**\n * Renders the currently selected content.\n *\n * There are actually two different implementations of `<Slot/>`:\n *  - Used inside a `_layout` as the `Navigator`\n *  - Used inside a `Navigator` as the content\n *\n * Since a custom `Navigator` will set the `NavigatorContext.contextKey` to\n * the current `_layout`, you can use this to determine if you are inside\n * a custom navigator or not.\n */\nexport function Slot(props: Omit<NavigatorProps<any>, 'children'>) {\n  const contextKey = useContextKey();\n  const context = React.useContext(NavigatorContext);\n\n  if (context?.contextKey !== contextKey) {\n    // The _layout has changed since the last navigator\n    return <SlotNavigator {...props} />;\n  }\n\n  /*\n   * The user has defined a custom navigator\n   * <Navigator><Slot /></Navigator>\n   */\n  return <NavigatorSlot />;\n}\n\n/**\n * Render the current navigator content.\n */\nfunction NavigatorSlot() {\n  const context = useNavigatorContext();\n\n  const { state, descriptors } = context;\n\n  return descriptors[state.routes[state.index].key]?.render() ?? null;\n}\n\n/**\n * The default navigator for the app when no root _layout is provided.\n */\nexport function DefaultNavigator() {\n  return (\n    <SafeAreaView style={{ flex: 1 }}>\n      <SlotNavigator />\n    </SafeAreaView>\n  );\n}\n\nNavigator.Slot = NavigatorSlot;\nNavigator.useContext = useNavigatorContext;\n\n/** Used to configure route settings. */\nNavigator.Screen = Screen;\n"],"mappings":"AACA,YAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEZ,IAAAA,QAAA,GAAAC,OAAA;AACA,IAAAC,KAAA,GAAAC,YAAA,CAAAF,OAAA;AACA,IAAAG,gCAAA,GAAAH,OAAA;AAEA,IAAAI,QAAA,GAAAJ,OAAA;AACA,IAAAK,OAAA,GAAAL,OAAA;AACA,IAAAM,mBAAA,GAAAN,OAAA;AACA,IAAAO,YAAA,GAAAP,OAAA;AAOaQ,OAAA,CAAAC,gBAAgB,GAAGR,KAAK,CAACS,aAAa,CAA+B,IAAI,CAAC;AAEvF,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;EACzCL,OAAA,CAAAC,gBAAgB,CAACK,WAAW,GAAG,kBAAkB;;AAmBnD,SAAgBC,SAASA,CAAAC,IAAA,EAML;EAAA,IALlBC,gBAAgB,GAAAD,IAAA,CAAhBC,gBAAgB;IAChBC,aAAa,GAAAF,IAAA,CAAbE,aAAa;IACbC,QAAQ,GAAAH,IAAA,CAARG,QAAQ;IACRC,MAAM,GAAAJ,IAAA,CAANI,MAAM;IACNC,aAAa,GAAAL,IAAA,CAAbK,aAAa;EAEb,IAAMC,UAAU,GAAG,IAAAjB,OAAA,CAAAkB,aAAa,GAAE;EAGlC,IAAAC,KAAA,GAAiD,IAAAlB,mBAAA,CAAAmB,uBAAuB,EAACN,QAAQ,EAAE;MACjFO,iBAAiB,EAAE,IAAI;MACvBJ,UAAU,EAAVA;KACD,CAAC;IAHMK,OAAO,GAAAH,KAAA,CAAPG,OAAO;IAAYC,iBAAiB,GAAAJ,KAAA,CAA3BL,QAAQ;EAKzB,IAAMU,aAAa,GAAG,IAAAtB,YAAA,CAAAuB,gBAAgB,EAACH,OAAO,WAAPA,OAAO,GAAI,EAAE,CAAC;EAErDP,MAAM,KAAKrB,QAAA,CAAAgC,WAA2B;EAEtC,IAAMC,UAAU,GAAG,IAAAjC,QAAA,CAAAkC,oBAAoB,EAACb,MAAM,EAAAc,aAAA,CAAAA,aAAA,KAEzCb,aAAa;IAChBc,EAAE,EAAEb,UAAU;IACdH,QAAQ,EAAEU,aAAa,IAAI,CAACO,gBAAA,CAAAC,GAAA,CAACjC,QAAA,CAAAkC,MAAM,MAAK,SAAS,CAAG,CAAC;IACrDpB,aAAa,EAAbA,aAAa;IACbD,gBAAgB,EAAhBA;EAAgB,EACjB,CAAC;EAGF,IAAI,CAACY,aAAa,CAACU,MAAM,EAAE;IACzBC,OAAO,CAACC,IAAI,CAAC,iBAAiBnB,UAAU,oBAAoB,CAAC;IAC7D,OAAO,IAAI;;EAGb,OACEc,gBAAA,CAAAC,GAAA,CAAC7B,OAAA,CAAAC,gBAAgB,CAACiC,QAAQ;IACxBC,KAAK,EAAAT,aAAA,CAAAA,aAAA,KACAF,UAAU;MACbV,UAAU,EAAVA,UAAU;MACVF,MAAM,EAANA;IAAM,EACN;IAAAD,QAAA,EACDS;EAAiB,CACO,CAAC;AAEhC;AA5CApB,OAAA,CAAAO,SAAA,GAAAA,SAAA;AAiDA,SAAgB6B,mBAAmBA,CAAA;EACjC,IAAMC,OAAO,GAAG5C,KAAK,CAAC6C,UAAU,CAACtC,OAAA,CAAAC,gBAAgB,CAAC;EAClD,IAAI,CAACoC,OAAO,EAAE;IACZ,MAAM,IAAIE,KAAK,CAAC,yDAAyD,CAAC;;EAE5E,OAAOF,OAAO;AAChB;AANArC,OAAA,CAAAoC,mBAAA,GAAAA,mBAAA;AAQA,SAASI,aAAaA,CAACC,KAA0B;EAC/C,IAAM3B,UAAU,GAAG,IAAAjB,OAAA,CAAAkB,aAAa,GAAE;EAGlC,IAAA2B,KAAA,GAAoB,IAAA5C,mBAAA,CAAAmB,uBAAuB,EAAC,EAAE,EAAE;MAC9CH,UAAU,EAAVA;KACD,CAAC;IAFMK,OAAO,GAAAuB,KAAA,CAAPvB,OAAO;EAIf,IAAAwB,KAAA,GAAkD,IAAApD,QAAA,CAAAkC,oBAAoB,EAAClC,QAAA,CAAAgC,WAAW,EAAAG,aAAA,CAAAA,aAAA,KAC7Ee,KAAK;MACRd,EAAE,EAAEb,UAAU;MACdH,QAAQ,EAAE,IAAAZ,YAAA,CAAAuB,gBAAgB,EAACH,OAAO,WAAPA,OAAO,GAAI,EAAE;IAAC,EAC1C,CAAC;IAJMyB,KAAK,GAAAD,KAAA,CAALC,KAAK;IAAEC,WAAW,GAAAF,KAAA,CAAXE,WAAW;IAAEC,iBAAiB,GAAAH,KAAA,CAAjBG,iBAAiB;EAM7C,OACElB,gBAAA,CAAAC,GAAA,CAACiB,iBAAiB;IAAAnC,QAAA,EAAEkC,WAAW,CAACD,KAAK,CAACG,MAAM,CAACH,KAAK,CAACI,KAAK,CAAC,CAACC,GAAG,CAAC,CAACC,MAAM;EAAE,CAAoB,CAAC;AAEhG;AAaA,SAAgBC,IAAIA,CAACV,KAA4C;EAC/D,IAAM3B,UAAU,GAAG,IAAAjB,OAAA,CAAAkB,aAAa,GAAE;EAClC,IAAMsB,OAAO,GAAG5C,KAAK,CAAC6C,UAAU,CAACtC,OAAA,CAAAC,gBAAgB,CAAC;EAElD,IAAI,CAAAoC,OAAO,oBAAPA,OAAO,CAAEvB,UAAU,MAAKA,UAAU,EAAE;IAEtC,OAAOc,gBAAA,CAAAC,GAAA,CAACW,aAAa,EAAAd,aAAA,KAAKe,KAAK,CAAC,CAAG;;EAOrC,OAAOb,gBAAA,CAAAC,GAAA,CAACuB,aAAa,KAAG;AAC1B;AAdApD,OAAA,CAAAmD,IAAA,GAAAA,IAAA;AAmBA,SAASC,aAAaA,CAAA;EAAA,IAAAC,qBAAA,EAAAC,sBAAA;EACpB,IAAMjB,OAAO,GAAGD,mBAAmB,EAAE;EAErC,IAAQQ,KAAK,GAAkBP,OAAO,CAA9BO,KAAK;IAAEC,WAAW,GAAKR,OAAO,CAAvBQ,WAAW;EAE1B,QAAAQ,qBAAA,IAAAC,sBAAA,GAAOT,WAAW,CAACD,KAAK,CAACG,MAAM,CAACH,KAAK,CAACI,KAAK,CAAC,CAACC,GAAG,CAAC,qBAA1CK,sBAAA,CAA4CJ,MAAM,EAAE,YAAAG,qBAAA,GAAI,IAAI;AACrE;AAKA,SAAgBE,gBAAgBA,CAAA;EAC9B,OACE3B,gBAAA,CAAAC,GAAA,CAAClC,gCAAA,CAAA6D,YAAY;IAACC,KAAK,EAAE;MAAEC,IAAI,EAAE;IAAC,CAAG;IAAA/C,QAAA,EAC/BiB,gBAAA,CAAAC,GAAA,CAACW,aAAa;EAChB,CAAc,CAAC;AAEnB;AANAxC,OAAA,CAAAuD,gBAAA,GAAAA,gBAAA;AAQAhD,SAAS,CAAC4C,IAAI,GAAGC,aAAa;AAC9B7C,SAAS,CAAC+B,UAAU,GAAGF,mBAAmB;AAG1C7B,SAAS,CAACuB,MAAM,GAAGlC,QAAA,CAAAkC,MAAM","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}