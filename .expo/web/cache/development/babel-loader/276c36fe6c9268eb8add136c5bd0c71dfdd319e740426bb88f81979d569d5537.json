{"ast":null,"code":"import React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useLogs } from \"../Data/LogContext\";\nimport { LogBoxButton } from \"../UI/LogBoxButton\";\nimport * as LogBoxStyle from \"../UI/LogBoxStyle\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function LogBoxInspectorHeader(props) {\n  var _useLogs = useLogs(),\n    selectedIndex = _useLogs.selectedLogIndex,\n    logs = _useLogs.logs;\n  var total = logs.length;\n  if (props.level === 'syntax') {\n    return _jsx(View, {\n      style: [styles.safeArea, styles[props.level]],\n      children: _jsx(View, {\n        style: styles.header,\n        children: _jsx(View, {\n          style: styles.title,\n          children: _jsx(Text, {\n            style: styles.titleText,\n            children: \"Failed to compile\"\n          })\n        })\n      })\n    });\n  }\n  var prevIndex = selectedIndex - 1 < 0 ? total - 1 : selectedIndex - 1;\n  var nextIndex = selectedIndex + 1 > total - 1 ? 0 : selectedIndex + 1;\n  var titleText = `Log ${selectedIndex + 1} of ${total}`;\n  return _jsx(View, {\n    style: [styles.safeArea, styles[props.level]],\n    children: _jsxs(View, {\n      style: styles.header,\n      children: [_jsx(LogBoxInspectorHeaderButton, {\n        disabled: total <= 1,\n        level: props.level,\n        image: require('@expo/metro-runtime/assets/chevron-left.png'),\n        onPress: function onPress() {\n          return props.onSelectIndex(prevIndex);\n        }\n      }), _jsx(View, {\n        style: styles.title,\n        children: _jsx(Text, {\n          style: styles.titleText,\n          children: titleText\n        })\n      }), _jsx(LogBoxInspectorHeaderButton, {\n        disabled: total <= 1,\n        level: props.level,\n        image: require('@expo/metro-runtime/assets/chevron-right.png'),\n        onPress: function onPress() {\n          return props.onSelectIndex(nextIndex);\n        }\n      })]\n    })\n  });\n}\nvar backgroundForLevel = function backgroundForLevel(level) {\n  return {\n    warn: {\n      default: 'transparent',\n      pressed: LogBoxStyle.getWarningDarkColor()\n    },\n    error: {\n      default: 'transparent',\n      pressed: LogBoxStyle.getErrorDarkColor()\n    },\n    fatal: {\n      default: 'transparent',\n      pressed: LogBoxStyle.getFatalDarkColor()\n    },\n    syntax: {\n      default: 'transparent',\n      pressed: LogBoxStyle.getFatalDarkColor()\n    },\n    static: {\n      default: 'transparent',\n      pressed: LogBoxStyle.getFatalDarkColor()\n    }\n  }[level];\n};\nfunction LogBoxInspectorHeaderButton(props) {\n  return _jsx(LogBoxButton, {\n    backgroundColor: backgroundForLevel(props.level),\n    onPress: props.disabled ? undefined : props.onPress,\n    style: headerStyles.button,\n    children: props.disabled ? null : _jsx(Image, {\n      source: props.image,\n      tintColor: LogBoxStyle.getTextColor(),\n      style: headerStyles.buttonImage\n    })\n  });\n}\nvar headerStyles = StyleSheet.create({\n  button: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    aspectRatio: 1,\n    marginRight: 6,\n    marginLeft: 6,\n    borderRadius: 3\n  },\n  buttonImage: {\n    height: 14,\n    width: 8\n  }\n});\nvar styles = StyleSheet.create({\n  syntax: {\n    backgroundColor: LogBoxStyle.getFatalColor()\n  },\n  static: {\n    backgroundColor: LogBoxStyle.getFatalColor()\n  },\n  fatal: {\n    backgroundColor: LogBoxStyle.getFatalColor()\n  },\n  warn: {\n    backgroundColor: LogBoxStyle.getWarningColor()\n  },\n  error: {\n    backgroundColor: LogBoxStyle.getErrorColor()\n  },\n  header: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 8,\n    height: Platform.select({\n      default: 48,\n      ios: 44\n    })\n  },\n  title: {\n    alignItems: 'center',\n    flex: 1,\n    justifyContent: 'center'\n  },\n  titleText: {\n    color: LogBoxStyle.getTextColor(),\n    fontSize: 16,\n    fontWeight: '600',\n    includeFontPadding: false,\n    lineHeight: 20\n  },\n  safeArea: {\n    paddingTop: process.env.EXPO_OS !== 'ios' ? StatusBar.currentHeight : 40\n  }\n});","map":{"version":3,"names":["React","Image","Platform","StatusBar","StyleSheet","Text","View","useLogs","LogBoxButton","LogBoxStyle","jsx","_jsx","jsxs","_jsxs","LogBoxInspectorHeader","props","_useLogs","selectedIndex","selectedLogIndex","logs","total","length","level","style","styles","safeArea","children","header","title","titleText","prevIndex","nextIndex","LogBoxInspectorHeaderButton","disabled","image","require","onPress","onSelectIndex","backgroundForLevel","warn","default","pressed","getWarningDarkColor","error","getErrorDarkColor","fatal","getFatalDarkColor","syntax","static","backgroundColor","undefined","headerStyles","button","source","tintColor","getTextColor","buttonImage","create","alignItems","justifyContent","aspectRatio","marginRight","marginLeft","borderRadius","height","width","getFatalColor","getWarningColor","getErrorColor","flexDirection","paddingHorizontal","select","ios","flex","color","fontSize","fontWeight","includeFontPadding","lineHeight","paddingTop","process","env","EXPO_OS","currentHeight"],"sources":["C:/Users/R User/Documents/software_dev/BranchBuddy/node_modules/@expo/metro-runtime/src/error-overlay/overlay/LogBoxInspectorHeader.tsx"],"sourcesContent":["/**\n * Copyright (c) 650 Industries.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport { Image, Platform, StatusBar, StyleSheet, Text, View } from 'react-native';\n\nimport type { LogLevel } from '../Data/LogBoxLog';\nimport { useLogs } from '../Data/LogContext';\nimport { LogBoxButton } from '../UI/LogBoxButton';\nimport * as LogBoxStyle from '../UI/LogBoxStyle';\n\ntype Props = {\n  onSelectIndex: (selectedIndex: number) => void;\n  level: LogLevel;\n};\n\nexport function LogBoxInspectorHeader(props: Props) {\n  const { selectedLogIndex: selectedIndex, logs } = useLogs();\n  const total = logs.length;\n\n  if (props.level === 'syntax') {\n    return (\n      <View style={[styles.safeArea, styles[props.level]]}>\n        <View style={styles.header}>\n          <View style={styles.title}>\n            <Text style={styles.titleText}>Failed to compile</Text>\n          </View>\n        </View>\n      </View>\n    );\n  }\n\n  const prevIndex = selectedIndex - 1 < 0 ? total - 1 : selectedIndex - 1;\n  const nextIndex = selectedIndex + 1 > total - 1 ? 0 : selectedIndex + 1;\n\n  const titleText = `Log ${selectedIndex + 1} of ${total}`;\n\n  return (\n    <View style={[styles.safeArea, styles[props.level]]}>\n      <View style={styles.header}>\n        <LogBoxInspectorHeaderButton\n          disabled={total <= 1}\n          level={props.level}\n          image={require('@expo/metro-runtime/assets/chevron-left.png')}\n          onPress={() => props.onSelectIndex(prevIndex)}\n        />\n        <View style={styles.title}>\n          <Text style={styles.titleText}>{titleText}</Text>\n        </View>\n        <LogBoxInspectorHeaderButton\n          disabled={total <= 1}\n          level={props.level}\n          image={require('@expo/metro-runtime/assets/chevron-right.png')}\n          onPress={() => props.onSelectIndex(nextIndex)}\n        />\n      </View>\n    </View>\n  );\n}\n\nconst backgroundForLevel = (level: LogLevel) =>\n  ({\n    warn: {\n      default: 'transparent',\n      pressed: LogBoxStyle.getWarningDarkColor(),\n    },\n    error: {\n      default: 'transparent',\n      pressed: LogBoxStyle.getErrorDarkColor(),\n    },\n    fatal: {\n      default: 'transparent',\n      pressed: LogBoxStyle.getFatalDarkColor(),\n    },\n    syntax: {\n      default: 'transparent',\n      pressed: LogBoxStyle.getFatalDarkColor(),\n    },\n    static: {\n      default: 'transparent',\n      pressed: LogBoxStyle.getFatalDarkColor(),\n    },\n  })[level];\n\nfunction LogBoxInspectorHeaderButton(props: {\n  disabled: boolean;\n  image: number;\n  level: LogLevel;\n  onPress?: () => void;\n}) {\n  return (\n    <LogBoxButton\n      backgroundColor={backgroundForLevel(props.level)}\n      onPress={props.disabled ? undefined : props.onPress}\n      style={headerStyles.button}>\n      {props.disabled ? null : (\n        <Image\n          source={props.image}\n          tintColor={LogBoxStyle.getTextColor()}\n          style={headerStyles.buttonImage}\n        />\n      )}\n    </LogBoxButton>\n  );\n}\n\nconst headerStyles = StyleSheet.create({\n  button: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    aspectRatio: 1,\n    marginRight: 6,\n    marginLeft: 6,\n    borderRadius: 3,\n  },\n  buttonImage: {\n    height: 14,\n    width: 8,\n  },\n});\n\nconst styles = StyleSheet.create({\n  syntax: {\n    backgroundColor: LogBoxStyle.getFatalColor(),\n  },\n  static: {\n    backgroundColor: LogBoxStyle.getFatalColor(),\n  },\n  fatal: {\n    backgroundColor: LogBoxStyle.getFatalColor(),\n  },\n  warn: {\n    backgroundColor: LogBoxStyle.getWarningColor(),\n  },\n  error: {\n    backgroundColor: LogBoxStyle.getErrorColor(),\n  },\n  header: {\n    flexDirection: 'row',\n    alignItems: 'center',\n\n    paddingHorizontal: 8,\n    height: Platform.select({\n      default: 48,\n      ios: 44,\n    }),\n  },\n  title: {\n    alignItems: 'center',\n    flex: 1,\n    justifyContent: 'center',\n  },\n  titleText: {\n    color: LogBoxStyle.getTextColor(),\n    fontSize: 16,\n    fontWeight: '600',\n    includeFontPadding: false,\n    lineHeight: 20,\n  },\n  safeArea: {\n    paddingTop: process.env.EXPO_OS !== 'ios' ? StatusBar.currentHeight : 40,\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}