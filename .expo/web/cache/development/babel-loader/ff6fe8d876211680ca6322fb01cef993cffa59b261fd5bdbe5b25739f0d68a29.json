{"ast":null,"code":"'use client';\n\"use strict\";\n\nvar _react = require(\"react\");\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nvar _reactJsxRuntime = require(\"react/jsx-runtime\");\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\nvar _excluded = [\"ErrorBoundary\"],\n  _excluded2 = [\"route\", \"navigation\"],\n  _excluded3 = [\"options\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.routeToScreen = exports.screenOptionsFactory = exports.createGetIdForRoute = exports.getQualifiedRouteComponent = exports.useSortedScreens = void 0;\nvar react_1 = __importDefault(require(\"react\"));\nvar Route_1 = require(\"./Route\");\nvar import_mode_1 = __importDefault(require(\"./import-mode\"));\nvar primitives_1 = require(\"./primitives\");\nvar EmptyRoute_1 = require(\"./views/EmptyRoute\");\nvar SuspenseFallback_1 = require(\"./views/SuspenseFallback\");\nvar Try_1 = require(\"./views/Try\");\nfunction getSortedChildren(children, order, initialRouteName) {\n  if (!(order != null && order.length)) {\n    return children.sort((0, Route_1.sortRoutesWithInitial)(initialRouteName)).map(function (route) {\n      return {\n        route: route,\n        props: {}\n      };\n    });\n  }\n  var entries = _toConsumableArray(children);\n  var ordered = order.map(function (_ref) {\n    var name = _ref.name,\n      redirect = _ref.redirect,\n      initialParams = _ref.initialParams,\n      listeners = _ref.listeners,\n      options = _ref.options,\n      getId = _ref.getId;\n    if (!entries.length) {\n      console.warn(`[Layout children]: Too many screens defined. Route \"${name}\" is extraneous.`);\n      return null;\n    }\n    var matchIndex = entries.findIndex(function (child) {\n      return child.route === name;\n    });\n    if (matchIndex === -1) {\n      console.warn(`[Layout children]: No route named \"${name}\" exists in nested children:`, children.map(function (_ref2) {\n        var route = _ref2.route;\n        return route;\n      }));\n      return null;\n    } else {\n      var match = entries[matchIndex];\n      entries.splice(matchIndex, 1);\n      if (redirect) {\n        if (typeof redirect === 'string') {\n          throw new Error(`Redirecting to a specific route is not supported yet.`);\n        }\n        return null;\n      }\n      return {\n        route: match,\n        props: {\n          initialParams: initialParams,\n          listeners: listeners,\n          options: options,\n          getId: getId\n        }\n      };\n    }\n  }).filter(Boolean);\n  ordered.push.apply(ordered, _toConsumableArray(entries.sort((0, Route_1.sortRoutesWithInitial)(initialRouteName)).map(function (route) {\n    return {\n      route: route,\n      props: {}\n    };\n  })));\n  return ordered;\n}\nfunction useSortedScreens(order) {\n  var _node$children;\n  var node = (0, Route_1.useRouteNode)();\n  var sorted = node != null && (_node$children = node.children) != null && _node$children.length ? getSortedChildren(node.children, order, node.initialRouteName) : [];\n  return react_1.default.useMemo(function () {\n    return sorted.map(function (value) {\n      return routeToScreen(value.route, value.props);\n    });\n  }, [sorted]);\n}\nexports.useSortedScreens = useSortedScreens;\nfunction fromImport(_ref3) {\n  var ErrorBoundary = _ref3.ErrorBoundary,\n    component = _objectWithoutProperties(_ref3, _excluded);\n  if (ErrorBoundary) {\n    return {\n      default: react_1.default.forwardRef(function (props, ref) {\n        var children = react_1.default.createElement(component.default || EmptyRoute_1.EmptyRoute, _objectSpread(_objectSpread({}, props), {}, {\n          ref: ref\n        }));\n        return _reactJsxRuntime.jsx(Try_1.Try, {\n          catch: ErrorBoundary,\n          children: children\n        });\n      })\n    };\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof component.default === 'object' && component.default && Object.keys(component.default).length === 0) {\n      return {\n        default: EmptyRoute_1.EmptyRoute\n      };\n    }\n  }\n  return {\n    default: component.default\n  };\n}\nfunction fromLoadedRoute(res) {\n  if (!(res instanceof Promise)) {\n    return fromImport(res);\n  }\n  return res.then(fromImport);\n}\nvar qualifiedStore = new WeakMap();\nfunction getQualifiedRouteComponent(value) {\n  if (qualifiedStore.has(value)) {\n    return qualifiedStore.get(value);\n  }\n  var ScreenComponent;\n  if (import_mode_1.default === 'lazy') {\n    ScreenComponent = react_1.default.lazy(_asyncToGenerator(function* () {\n      var res = value.loadRoute();\n      return fromLoadedRoute(res);\n    }));\n  } else {\n    var res = value.loadRoute();\n    var Component = fromImport(res).default;\n    ScreenComponent = react_1.default.forwardRef(function (props, ref) {\n      return _reactJsxRuntime.jsx(Component, _objectSpread(_objectSpread({}, props), {}, {\n        ref: ref\n      }));\n    });\n  }\n  var getLoadable = function getLoadable(props, ref) {\n    return _reactJsxRuntime.jsx(react_1.default.Suspense, {\n      fallback: _reactJsxRuntime.jsx(SuspenseFallback_1.SuspenseFallback, {\n        route: value\n      }),\n      children: _reactJsxRuntime.jsx(ScreenComponent, _objectSpread({}, _objectSpread(_objectSpread({}, props), {}, {\n        ref: ref,\n        segment: value.route\n      })))\n    });\n  };\n  var QualifiedRoute = react_1.default.forwardRef(function (_ref5, ref) {\n    var route = _ref5.route,\n      navigation = _ref5.navigation,\n      props = _objectWithoutProperties(_ref5, _excluded2);\n    var loadable = getLoadable(props, ref);\n    return _reactJsxRuntime.jsx(Route_1.Route, {\n      node: value,\n      route: route,\n      children: loadable\n    });\n  });\n  QualifiedRoute.displayName = `Route(${value.route})`;\n  qualifiedStore.set(value, QualifiedRoute);\n  return QualifiedRoute;\n}\nexports.getQualifiedRouteComponent = getQualifiedRouteComponent;\nfunction createGetIdForRoute(route) {\n  var include = new Map();\n  if (route.dynamic) {\n    for (var segment of route.dynamic) {\n      include.set(segment.name, segment);\n    }\n  }\n  return function () {\n    var _segments$join;\n    var _ref6 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref6$params = _ref6.params,\n      params = _ref6$params === void 0 ? {} : _ref6$params;\n    if (params.__EXPO_ROUTER_key) {\n      var key = params.__EXPO_ROUTER_key;\n      delete params.__EXPO_ROUTER_key;\n      return key;\n    }\n    var segments = [];\n    for (var dynamic of include.values()) {\n      var value = params == null ? void 0 : params[dynamic.name];\n      if (Array.isArray(value) && value.length > 0) {\n        segments.push(value.join('/'));\n      } else if (value && !Array.isArray(value)) {\n        segments.push(value);\n      } else if (dynamic.deep) {\n        segments.push(`[...${dynamic.name}]`);\n      } else {\n        segments.push(`[${dynamic.name}]`);\n      }\n    }\n    return (_segments$join = segments.join('/')) != null ? _segments$join : route.contextKey;\n  };\n}\nexports.createGetIdForRoute = createGetIdForRoute;\nfunction screenOptionsFactory(route, options) {\n  return function (args) {\n    var _route$loadRoute;\n    var staticOptions = route.generated ? (_route$loadRoute = route.loadRoute()) == null ? void 0 : _route$loadRoute.getNavOptions : null;\n    var staticResult = typeof staticOptions === 'function' ? staticOptions(args) : staticOptions;\n    var dynamicResult = typeof options === 'function' ? options == null ? void 0 : options(args) : options;\n    var output = _objectSpread(_objectSpread({}, staticResult), dynamicResult);\n    if (route.generated) {\n      output.tabBarItemStyle = {\n        display: 'none'\n      };\n      output.tabBarButton = function () {\n        return null;\n      };\n      output.drawerItemStyle = {\n        height: 0,\n        display: 'none'\n      };\n    }\n    return output;\n  };\n}\nexports.screenOptionsFactory = screenOptionsFactory;\nfunction routeToScreen(route) {\n  var _ref7 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var options = _ref7.options,\n    props = _objectWithoutProperties(_ref7, _excluded3);\n  return _react.createElement(primitives_1.Screen, _objectSpread(_objectSpread({\n    getId: createGetIdForRoute(route)\n  }, props), {}, {\n    name: route.route,\n    key: route.route,\n    options: screenOptionsFactory(route, options),\n    getComponent: function getComponent() {\n      return getQualifiedRouteComponent(route);\n    }\n  }));\n}\nexports.routeToScreen = routeToScreen;","map":{"version":3,"names":["react_1","__importDefault","require","Route_1","import_mode_1","primitives_1","EmptyRoute_1","SuspenseFallback_1","Try_1","getSortedChildren","children","order","initialRouteName","length","sort","sortRoutesWithInitial","map","route","props","entries","_toConsumableArray","ordered","_ref","name","redirect","initialParams","listeners","options","getId","console","warn","matchIndex","findIndex","child","_ref2","match","splice","Error","filter","Boolean","push","apply","useSortedScreens","_node$children","node","useRouteNode","sorted","default","useMemo","value","routeToScreen","exports","fromImport","_ref3","ErrorBoundary","component","_objectWithoutProperties","_excluded","forwardRef","ref","createElement","EmptyRoute","_objectSpread","_reactJsxRuntime","jsx","Try","catch","process","env","NODE_ENV","Object","keys","fromLoadedRoute","res","Promise","then","qualifiedStore","WeakMap","getQualifiedRouteComponent","has","get","ScreenComponent","lazy","_asyncToGenerator","loadRoute","Component","getLoadable","Suspense","fallback","SuspenseFallback","segment","QualifiedRoute","_ref5","navigation","_excluded2","loadable","Route","displayName","set","createGetIdForRoute","include","Map","dynamic","_segments$join","_ref6","arguments","undefined","_ref6$params","params","__EXPO_ROUTER_key","key","segments","values","Array","isArray","join","deep","contextKey","screenOptionsFactory","args","_route$loadRoute","staticOptions","generated","getNavOptions","staticResult","dynamicResult","output","tabBarItemStyle","display","tabBarButton","drawerItemStyle","height","_ref7","_excluded3","_react","Screen","getComponent"],"sources":["C:\\Users\\R User\\Documents\\software_dev\\BranchBuddy\\node_modules\\expo-router\\src\\useScreens.tsx"],"sourcesContent":["'use client';\n\nimport type {\n  EventMapBase,\n  NavigationState,\n  ParamListBase,\n  RouteConfig,\n  RouteProp,\n  ScreenListeners,\n} from '@react-navigation/native';\nimport React from 'react';\n\nimport {\n  DynamicConvention,\n  LoadedRoute,\n  Route,\n  RouteNode,\n  sortRoutesWithInitial,\n  useRouteNode,\n} from './Route';\nimport EXPO_ROUTER_IMPORT_MODE from './import-mode';\nimport { Screen } from './primitives';\nimport { EmptyRoute } from './views/EmptyRoute';\nimport { SuspenseFallback } from './views/SuspenseFallback';\nimport { Try } from './views/Try';\n\nexport type ScreenProps<\n  TOptions extends Record<string, any> = Record<string, any>,\n  TState extends NavigationState = NavigationState,\n  TEventMap extends EventMapBase = EventMapBase,\n> = {\n  /** Name is required when used inside a Layout component. */\n  name?: string;\n  /**\n   * Redirect to the nearest sibling route.\n   * If all children are `redirect={true}`, the layout will render `null` as there are no children to render.\n   */\n  redirect?: boolean;\n  initialParams?: Record<string, any>;\n  options?:\n    | TOptions\n    | ((prop: { route: RouteProp<ParamListBase, string>; navigation: any }) => TOptions);\n\n  listeners?:\n    | ScreenListeners<TState, TEventMap>\n    | ((prop: {\n        route: RouteProp<ParamListBase, string>;\n        navigation: any;\n      }) => ScreenListeners<TState, TEventMap>);\n\n  getId?: ({ params }: { params?: Record<string, any> }) => string | undefined;\n};\n\nfunction getSortedChildren(\n  children: RouteNode[],\n  order?: ScreenProps[],\n  initialRouteName?: string\n): { route: RouteNode; props: Partial<ScreenProps> }[] {\n  if (!order?.length) {\n    return children\n      .sort(sortRoutesWithInitial(initialRouteName))\n      .map((route) => ({ route, props: {} }));\n  }\n  const entries = [...children];\n\n  const ordered = order\n    .map(({ name, redirect, initialParams, listeners, options, getId }) => {\n      if (!entries.length) {\n        console.warn(`[Layout children]: Too many screens defined. Route \"${name}\" is extraneous.`);\n        return null;\n      }\n      const matchIndex = entries.findIndex((child) => child.route === name);\n      if (matchIndex === -1) {\n        console.warn(\n          `[Layout children]: No route named \"${name}\" exists in nested children:`,\n          children.map(({ route }) => route)\n        );\n        return null;\n      } else {\n        // Get match and remove from entries\n        const match = entries[matchIndex];\n        entries.splice(matchIndex, 1);\n\n        // Ensure to return null after removing from entries.\n        if (redirect) {\n          if (typeof redirect === 'string') {\n            throw new Error(`Redirecting to a specific route is not supported yet.`);\n          }\n          return null;\n        }\n\n        return {\n          route: match,\n          props: { initialParams, listeners, options, getId },\n        };\n      }\n    })\n    .filter(Boolean) as {\n    route: RouteNode;\n    props: Partial<ScreenProps>;\n  }[];\n\n  // Add any remaining children\n  ordered.push(\n    ...entries.sort(sortRoutesWithInitial(initialRouteName)).map((route) => ({ route, props: {} }))\n  );\n\n  return ordered;\n}\n\n/**\n * @returns React Navigation screens sorted by the `route` property.\n */\nexport function useSortedScreens(order: ScreenProps[]): React.ReactNode[] {\n  const node = useRouteNode();\n\n  const sorted = node?.children?.length\n    ? getSortedChildren(node.children, order, node.initialRouteName)\n    : [];\n  return React.useMemo(\n    () => sorted.map((value) => routeToScreen(value.route, value.props)),\n    [sorted]\n  );\n}\n\nfunction fromImport({ ErrorBoundary, ...component }: LoadedRoute) {\n  if (ErrorBoundary) {\n    return {\n      default: React.forwardRef((props: any, ref: any) => {\n        const children = React.createElement(component.default || EmptyRoute, {\n          ...props,\n          ref,\n        });\n        return <Try catch={ErrorBoundary}>{children}</Try>;\n      }),\n    };\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    if (\n      typeof component.default === 'object' &&\n      component.default &&\n      Object.keys(component.default).length === 0\n    ) {\n      return { default: EmptyRoute };\n    }\n  }\n\n  return { default: component.default };\n}\n\nfunction fromLoadedRoute(res: LoadedRoute) {\n  if (!(res instanceof Promise)) {\n    return fromImport(res);\n  }\n\n  return res.then(fromImport);\n}\n\n// TODO: Maybe there's a more React-y way to do this?\n// Without this store, the process enters a recursive loop.\nconst qualifiedStore = new WeakMap<RouteNode, React.ComponentType<any>>();\n\n/** Wrap the component with various enhancements and add access to child routes. */\nexport function getQualifiedRouteComponent(value: RouteNode) {\n  if (qualifiedStore.has(value)) {\n    return qualifiedStore.get(value)!;\n  }\n\n  let ScreenComponent: React.ForwardRefExoticComponent<React.RefAttributes<unknown>>;\n\n  // TODO: This ensures sync doesn't use React.lazy, but it's not ideal.\n  if (EXPO_ROUTER_IMPORT_MODE === 'lazy') {\n    ScreenComponent = React.lazy(async () => {\n      const res = value.loadRoute();\n      return fromLoadedRoute(res) as Promise<{\n        default: React.ComponentType<any>;\n      }>;\n    });\n  } else {\n    const res = value.loadRoute();\n    const Component = fromImport(res).default as React.ComponentType<any>;\n    ScreenComponent = React.forwardRef((props, ref) => {\n      return <Component {...props} ref={ref} />;\n    });\n  }\n\n  const getLoadable = (props: any, ref: any) => (\n    <React.Suspense fallback={<SuspenseFallback route={value} />}>\n      <ScreenComponent\n        {...{\n          ...props,\n          ref,\n          // Expose the template segment path, e.g. `(home)`, `[foo]`, `index`\n          // the intention is to make it possible to deduce shared routes.\n          segment: value.route,\n        }}\n      />\n    </React.Suspense>\n  );\n\n  const QualifiedRoute = React.forwardRef(\n    (\n      {\n        // Remove these React Navigation props to\n        // enforce usage of expo-router hooks (where the query params are correct).\n        route,\n        navigation,\n\n        // Pass all other props to the component\n        ...props\n      }: any,\n      ref: any\n    ) => {\n      const loadable = getLoadable(props, ref);\n\n      return (\n        <Route node={value} route={route}>\n          {loadable}\n        </Route>\n      );\n    }\n  );\n\n  QualifiedRoute.displayName = `Route(${value.route})`;\n\n  qualifiedStore.set(value, QualifiedRoute);\n  return QualifiedRoute;\n}\n\n/** @returns a function which provides a screen id that matches the dynamic route name in params. */\nexport function createGetIdForRoute(\n  route: Pick<RouteNode, 'dynamic' | 'route' | 'contextKey' | 'children'>\n) {\n  const include = new Map<string, DynamicConvention>();\n\n  if (route.dynamic) {\n    for (const segment of route.dynamic) {\n      include.set(segment.name, segment);\n    }\n  }\n\n  return ({ params = {} } = {} as { params?: Record<string, any> }) => {\n    if (params.__EXPO_ROUTER_key) {\n      const key = params.__EXPO_ROUTER_key;\n      delete params.__EXPO_ROUTER_key;\n      return key;\n    }\n\n    const segments: string[] = [];\n\n    for (const dynamic of include.values()) {\n      const value = params?.[dynamic.name];\n      if (Array.isArray(value) && value.length > 0) {\n        // If we are an array with a value\n        segments.push(value.join('/'));\n      } else if (value && !Array.isArray(value)) {\n        // If we have a value and not an empty array\n        segments.push(value);\n      } else if (dynamic.deep) {\n        segments.push(`[...${dynamic.name}]`);\n      } else {\n        segments.push(`[${dynamic.name}]`);\n      }\n    }\n\n    return segments.join('/') ?? route.contextKey;\n  };\n}\n\nexport function screenOptionsFactory(\n  route: RouteNode,\n  options?: ScreenProps['options']\n): RouteConfig<any, any, any, any, any, any>['options'] {\n  return (args) => {\n    // Only eager load generated components\n    const staticOptions = route.generated ? route.loadRoute()?.getNavOptions : null;\n    const staticResult = typeof staticOptions === 'function' ? staticOptions(args) : staticOptions;\n    const dynamicResult = typeof options === 'function' ? options?.(args) : options;\n    const output = {\n      ...staticResult,\n      ...dynamicResult,\n    };\n\n    // Prevent generated screens from showing up in the tab bar.\n    if (route.generated) {\n      output.tabBarItemStyle = { display: 'none' };\n      output.tabBarButton = () => null;\n      // TODO: React Navigation doesn't provide a way to prevent rendering the drawer item.\n      output.drawerItemStyle = { height: 0, display: 'none' };\n    }\n\n    return output;\n  };\n}\n\nexport function routeToScreen(route: RouteNode, { options, ...props }: Partial<ScreenProps> = {}) {\n  return (\n    <Screen\n      // Users can override the screen getId function.\n      getId={createGetIdForRoute(route)}\n      {...props}\n      name={route.route}\n      key={route.route}\n      options={screenOptionsFactory(route, options)}\n      getComponent={() => getQualifiedRouteComponent(route)}\n    />\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}