{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\nvar _excluded = [\"style\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Text = Text;\nvar _native = require(\"@react-navigation/native\");\nvar _reactNative = require(\"react-native-web/dist/index\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nfunction Text(_ref) {\n  var style = _ref.style,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var _ref2 = (0, _native.useTheme)(),\n    colors = _ref2.colors,\n    fonts = _ref2.fonts;\n  return (0, _jsxRuntime.jsx)(_reactNative.Text, _objectSpread(_objectSpread({}, rest), {}, {\n    style: [{\n      color: colors.text\n    }, fonts.regular, style]\n  }));\n}","map":{"version":3,"names":["_native","require","_reactNative","_jsxRuntime","Text","_ref","style","rest","_objectWithoutProperties","_excluded","_ref2","useTheme","colors","fonts","jsx","_objectSpread","color","text","regular"],"sources":["C:\\Users\\R User\\Documents\\software_dev\\BranchBuddy\\node_modules\\@react-navigation\\elements\\src\\Text.tsx"],"sourcesContent":["import { useTheme } from '@react-navigation/native';\n// eslint-disable-next-line no-restricted-imports\nimport { Text as NativeText, type TextProps } from 'react-native';\n\nexport function Text({ style, ...rest }: TextProps) {\n  const { colors, fonts } = useTheme();\n\n  return (\n    <NativeText\n      {...rest}\n      style={[{ color: colors.text }, fonts.regular, style]}\n    />\n  );\n}\n"],"mappings":";;;;;;;;;;;AAAA,IAAAA,OAAA,GAAAC,OAAA;AAAA,IAAAC,YAAA,GAAAD,OAAA;AAEkE,IAAAE,WAAA,GAAAF,OAAA;AAE3D,SAASG,IAAIA,CAAAC,IAAA,EAAgC;EAAA,IAA7BC,KAAK,GAAAD,IAAA,CAALC,KAAK;IAAKC,IAAA,GAAAC,wBAAA,CAAAH,IAAA,EAAAI,SAAA;EAC/B,IAAAC,KAAA,GAA0B,IAAAV,OAAA,CAAAW,QAAQ,EAAC,CAAC;IAA5BC,MAAM,GAAAF,KAAA,CAANE,MAAM;IAAEC,KAAA,GAAAH,KAAA,CAAAG,KAAA;EAEhB,OACE,IAAAV,WAAA,CAAAW,GAAA,EAACZ,YAAA,CAAAE,IAAU,EAAAW,aAAA,CAAAA,aAAA,KACLR,IAAI;IACRD,KAAK,EAAE,CAAC;MAAEU,KAAK,EAAEJ,MAAM,CAACK;IAAK,CAAC,EAAEJ,KAAK,CAACK,OAAO,EAAEZ,KAAK;EAAA,EACrD,CAAC;AAEN","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}