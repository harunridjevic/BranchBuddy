{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useCallback, useEffect, useState } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport * as LogBoxData from \"./Data/LogBoxData\";\nimport { useLogs, useSelectedLog } from \"./Data/LogContext\";\nimport * as LogBoxStyle from \"./UI/LogBoxStyle\";\nimport { LogBoxInspectorCodeFrame } from \"./overlay/LogBoxInspectorCodeFrame\";\nimport { LogBoxInspectorFooter as ErrorOverlayFooter } from \"./overlay/LogBoxInspectorFooter\";\nimport { LogBoxInspectorHeader as ErrorOverlayHeader } from \"./overlay/LogBoxInspectorHeader\";\nimport { LogBoxInspectorMessageHeader } from \"./overlay/LogBoxInspectorMessageHeader\";\nimport { LogBoxInspectorStackFrames } from \"./overlay/LogBoxInspectorStackFrames\";\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nvar HEADER_TITLE_MAP = {\n  warn: 'Console Warning',\n  error: 'Console Error',\n  fatal: 'Uncaught Error',\n  syntax: 'Syntax Error',\n  static: 'Server Error',\n  component: 'Render Error'\n};\nexport function LogBoxInspectorContainer() {\n  var _useLogs = useLogs(),\n    selectedLogIndex = _useLogs.selectedLogIndex,\n    logs = _useLogs.logs;\n  var log = logs[selectedLogIndex];\n  if (log == null) {\n    return null;\n  }\n  return _jsx(LogBoxInspector, {\n    log: log,\n    selectedLogIndex: selectedLogIndex,\n    logs: logs\n  });\n}\nexport function LogBoxInspector(_ref) {\n  var log = _ref.log,\n    selectedLogIndex = _ref.selectedLogIndex,\n    logs = _ref.logs;\n  var onDismiss = useCallback(function () {\n    var logsArray = Array.from(logs);\n    if (selectedLogIndex != null) {\n      if (logsArray.length - 1 <= 0) {\n        LogBoxData.setSelectedLog(-1);\n      } else if (selectedLogIndex >= logsArray.length - 1) {\n        LogBoxData.setSelectedLog(selectedLogIndex - 1);\n      }\n      LogBoxData.dismiss(logsArray[selectedLogIndex]);\n    }\n  }, [selectedLogIndex]);\n  var onMinimize = useCallback(function () {\n    LogBoxData.setSelectedLog(-1);\n  }, []);\n  var onChangeSelectedIndex = useCallback(function (index) {\n    LogBoxData.setSelectedLog(index);\n  }, []);\n  useEffect(function () {\n    if (log) {\n      LogBoxData.symbolicateLogNow('stack', log);\n      LogBoxData.symbolicateLogNow('component', log);\n    }\n  }, [log]);\n  useEffect(function () {\n    if (logs.length > 1) {\n      var selected = selectedLogIndex;\n      var lastIndex = logs.length - 1;\n      var prevIndex = selected - 1 < 0 ? lastIndex : selected - 1;\n      var nextIndex = selected + 1 > lastIndex ? 0 : selected + 1;\n      for (var type of ['component', 'stack']) {\n        LogBoxData.symbolicateLogLazy(type, logs[prevIndex]);\n        LogBoxData.symbolicateLogLazy(type, logs[nextIndex]);\n      }\n    }\n  }, [logs, selectedLogIndex]);\n  var _handleRetry = useCallback(function (type) {\n    LogBoxData.retrySymbolicateLogNow(type, log);\n  }, [log]);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(ErrorOverlayHeader, {\n      onSelectIndex: onChangeSelectedIndex,\n      level: log.level\n    }), _jsx(ErrorOverlayBody, {\n      onRetry: _handleRetry\n    }), _jsx(ErrorOverlayFooter, {\n      onDismiss: onDismiss,\n      onMinimize: onMinimize\n    })]\n  });\n}\nexport function ErrorOverlayBody(_ref2) {\n  var onRetry = _ref2.onRetry;\n  var log = useSelectedLog();\n  return _jsx(ErrorOverlayBodyContents, {\n    log: log,\n    onRetry: onRetry\n  });\n}\nexport function ErrorOverlayBodyContents(_ref3) {\n  var _HEADER_TITLE_MAP, _log$componentStack;\n  var log = _ref3.log,\n    onRetry = _ref3.onRetry;\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    collapsed = _useState2[0],\n    setCollapsed = _useState2[1];\n  useEffect(function () {\n    setCollapsed(true);\n  }, [log]);\n  var headerTitle = (_HEADER_TITLE_MAP = HEADER_TITLE_MAP[log.isComponentError ? 'component' : log.level]) != null ? _HEADER_TITLE_MAP : log.type;\n  var header = _jsx(LogBoxInspectorMessageHeader, {\n    collapsed: collapsed,\n    onPress: function onPress() {\n      return setCollapsed(!collapsed);\n    },\n    message: log.message,\n    level: log.level,\n    title: headerTitle\n  });\n  var needsStack = !log.message.content.match(/(Expected server HTML to contain a matching|Text content did not match\\.)/);\n  return _jsxs(_Fragment, {\n    children: [collapsed && header, _jsxs(ScrollView, {\n      style: styles.scrollBody,\n      children: [!collapsed && header, _jsx(LogBoxInspectorCodeFrame, {\n        codeFrame: log.codeFrame\n      }), needsStack && _jsx(LogBoxInspectorStackFrames, {\n        type: \"stack\",\n        onRetry: onRetry.bind(onRetry, 'stack')\n      }), !!(log != null && (_log$componentStack = log.componentStack) != null && _log$componentStack.length) && _jsx(LogBoxInspectorStackFrames, {\n        type: \"component\",\n        onRetry: onRetry.bind(onRetry, 'component')\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  scrollBody: {\n    backgroundColor: LogBoxStyle.getBackgroundColor(1),\n    flex: 1\n  },\n  container: {\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n    zIndex: 999,\n    flex: 1,\n    position: 'fixed'\n  }\n});\nexport default LogBoxData.withSubscription(LogBoxInspectorContainer);","map":{"version":3,"names":["React","useCallback","useEffect","useState","ScrollView","View","StyleSheet","LogBoxData","useLogs","useSelectedLog","LogBoxStyle","LogBoxInspectorCodeFrame","LogBoxInspectorFooter","ErrorOverlayFooter","LogBoxInspectorHeader","ErrorOverlayHeader","LogBoxInspectorMessageHeader","LogBoxInspectorStackFrames","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","HEADER_TITLE_MAP","warn","error","fatal","syntax","static","component","LogBoxInspectorContainer","_useLogs","selectedLogIndex","logs","log","LogBoxInspector","_ref","onDismiss","logsArray","Array","from","length","setSelectedLog","dismiss","onMinimize","onChangeSelectedIndex","index","symbolicateLogNow","selected","lastIndex","prevIndex","nextIndex","type","symbolicateLogLazy","_handleRetry","retrySymbolicateLogNow","style","styles","container","children","onSelectIndex","level","ErrorOverlayBody","onRetry","_ref2","ErrorOverlayBodyContents","_ref3","_HEADER_TITLE_MAP","_log$componentStack","_useState","_useState2","_slicedToArray","collapsed","setCollapsed","headerTitle","isComponentError","header","onPress","message","title","needsStack","content","match","scrollBody","codeFrame","bind","componentStack","create","backgroundColor","getBackgroundColor","flex","top","left","bottom","right","zIndex","position","withSubscription"],"sources":["C:/Users/R User/Documents/software_dev/BranchBuddy/node_modules/@expo/metro-runtime/src/error-overlay/ErrorOverlay.tsx"],"sourcesContent":["/**\n * Copyright (c) 650 Industries.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { ScrollView, View, StyleSheet } from 'react-native';\n\nimport * as LogBoxData from './Data/LogBoxData';\nimport { LogBoxLog, StackType } from './Data/LogBoxLog';\nimport { useLogs, useSelectedLog } from './Data/LogContext';\nimport * as LogBoxStyle from './UI/LogBoxStyle';\nimport { LogBoxInspectorCodeFrame } from './overlay/LogBoxInspectorCodeFrame';\nimport { LogBoxInspectorFooter as ErrorOverlayFooter } from './overlay/LogBoxInspectorFooter';\nimport { LogBoxInspectorHeader as ErrorOverlayHeader } from './overlay/LogBoxInspectorHeader';\nimport { LogBoxInspectorMessageHeader } from './overlay/LogBoxInspectorMessageHeader';\nimport { LogBoxInspectorStackFrames } from './overlay/LogBoxInspectorStackFrames';\n\nconst HEADER_TITLE_MAP = {\n  warn: 'Console Warning',\n  error: 'Console Error',\n  fatal: 'Uncaught Error',\n  syntax: 'Syntax Error',\n  static: 'Server Error',\n  component: 'Render Error',\n};\n\nexport function LogBoxInspectorContainer() {\n  const { selectedLogIndex, logs } = useLogs();\n  const log = logs[selectedLogIndex];\n  if (log == null) {\n    return null;\n  }\n  return <LogBoxInspector log={log} selectedLogIndex={selectedLogIndex} logs={logs} />;\n}\n\nexport function LogBoxInspector({\n  log,\n  selectedLogIndex,\n  logs,\n}: {\n  log: LogBoxLog;\n  selectedLogIndex: number;\n  logs: LogBoxLog[];\n}) {\n  const onDismiss = useCallback((): void => {\n    // Here we handle the cases when the log is dismissed and it\n    // was either the last log, or when the current index\n    // is now outside the bounds of the log array.\n    const logsArray = Array.from(logs);\n    if (selectedLogIndex != null) {\n      if (logsArray.length - 1 <= 0) {\n        LogBoxData.setSelectedLog(-1);\n      } else if (selectedLogIndex >= logsArray.length - 1) {\n        LogBoxData.setSelectedLog(selectedLogIndex - 1);\n      }\n\n      LogBoxData.dismiss(logsArray[selectedLogIndex]);\n    }\n  }, [selectedLogIndex]);\n\n  const onMinimize = useCallback((): void => {\n    LogBoxData.setSelectedLog(-1);\n  }, []);\n\n  const onChangeSelectedIndex = useCallback((index: number): void => {\n    LogBoxData.setSelectedLog(index);\n  }, []);\n\n  useEffect(() => {\n    if (log) {\n      LogBoxData.symbolicateLogNow('stack', log);\n      LogBoxData.symbolicateLogNow('component', log);\n    }\n  }, [log]);\n\n  useEffect(() => {\n    // Optimistically symbolicate the last and next logs.\n    if (logs.length > 1) {\n      const selected = selectedLogIndex;\n      const lastIndex = logs.length - 1;\n      const prevIndex = selected - 1 < 0 ? lastIndex : selected - 1;\n      const nextIndex = selected + 1 > lastIndex ? 0 : selected + 1;\n      for (const type of ['component', 'stack'] as const) {\n        LogBoxData.symbolicateLogLazy(type, logs[prevIndex]);\n        LogBoxData.symbolicateLogLazy(type, logs[nextIndex]);\n      }\n    }\n  }, [logs, selectedLogIndex]);\n\n  const _handleRetry = useCallback(\n    (type: StackType) => {\n      LogBoxData.retrySymbolicateLogNow(type, log);\n    },\n    [log]\n  );\n\n  return (\n    <View style={styles.container}>\n      <ErrorOverlayHeader onSelectIndex={onChangeSelectedIndex} level={log.level} />\n      <ErrorOverlayBody onRetry={_handleRetry} />\n      <ErrorOverlayFooter onDismiss={onDismiss} onMinimize={onMinimize} />\n    </View>\n  );\n}\n\nexport function ErrorOverlayBody({ onRetry }: { onRetry: (type: StackType) => void }) {\n  const log = useSelectedLog();\n  return <ErrorOverlayBodyContents log={log} onRetry={onRetry} />;\n}\n\nexport function ErrorOverlayBodyContents({\n  log,\n  onRetry,\n}: {\n  log: LogBoxLog;\n  onRetry: (type: StackType) => void;\n}) {\n  const [collapsed, setCollapsed] = useState(true);\n\n  useEffect(() => {\n    setCollapsed(true);\n  }, [log]);\n\n  const headerTitle = HEADER_TITLE_MAP[log.isComponentError ? 'component' : log.level] ?? log.type;\n\n  const header = (\n    <LogBoxInspectorMessageHeader\n      collapsed={collapsed}\n      onPress={() => setCollapsed(!collapsed)}\n      message={log.message}\n      level={log.level}\n      title={headerTitle}\n    />\n  );\n\n  // Hide useless React stack.\n  const needsStack = !log.message.content.match(\n    /(Expected server HTML to contain a matching|Text content did not match\\.)/\n  );\n\n  return (\n    <>\n      {collapsed && header}\n      <ScrollView style={styles.scrollBody}>\n        {!collapsed && header}\n\n        <LogBoxInspectorCodeFrame codeFrame={log.codeFrame} />\n        {needsStack && (\n          <LogBoxInspectorStackFrames\n            type=\"stack\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onRetry={onRetry.bind(onRetry, 'stack')}\n          />\n        )}\n        {!!log?.componentStack?.length && (\n          <LogBoxInspectorStackFrames\n            type=\"component\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onRetry={onRetry.bind(onRetry, 'component')}\n          />\n        )}\n      </ScrollView>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  scrollBody: {\n    backgroundColor: LogBoxStyle.getBackgroundColor(1),\n    flex: 1,\n  },\n  container: {\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n    zIndex: 999,\n    flex: 1,\n    // @ts-expect-error: fixed is not in the RN types but it works on web\n    position: 'fixed',\n  },\n});\n\nexport default LogBoxData.withSubscription(LogBoxInspectorContainer);\n"],"mappings":";AAOA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAGhE,OAAO,KAAKC,UAAU;AAEtB,SAASC,OAAO,EAAEC,cAAc;AAChC,OAAO,KAAKC,WAAW;AACvB,SAASC,wBAAwB;AACjC,SAASC,qBAAqB,IAAIC,kBAAkB;AACpD,SAASC,qBAAqB,IAAIC,kBAAkB;AACpD,SAASC,4BAA4B;AACrC,SAASC,0BAA0B;AAA+C,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA,EAAAC,QAAA,IAAAC,SAAA;AAElF,IAAMC,gBAAgB,GAAG;EACvBC,IAAI,EAAE,iBAAiB;EACvBC,KAAK,EAAE,eAAe;EACtBC,KAAK,EAAE,gBAAgB;EACvBC,MAAM,EAAE,cAAc;EACtBC,MAAM,EAAE,cAAc;EACtBC,SAAS,EAAE;AACb,CAAC;AAED,OAAO,SAASC,wBAAwBA,CAAA,EAAG;EACzC,IAAAC,QAAA,GAAmCxB,OAAO,CAAC,CAAC;IAApCyB,gBAAgB,GAAAD,QAAA,CAAhBC,gBAAgB;IAAEC,IAAI,GAAAF,QAAA,CAAJE,IAAI;EAC9B,IAAMC,GAAG,GAAGD,IAAI,CAACD,gBAAgB,CAAC;EAClC,IAAIE,GAAG,IAAI,IAAI,EAAE;IACf,OAAO,IAAI;EACb;EACA,OAAOhB,IAAA,CAACiB,eAAe;IAACD,GAAG,EAAEA,GAAI;IAACF,gBAAgB,EAAEA,gBAAiB;IAACC,IAAI,EAAEA;EAAK,CAAE,CAAC;AACtF;AAEA,OAAO,SAASE,eAAeA,CAAAC,IAAA,EAQ5B;EAAA,IAPDF,GAAG,GAAAE,IAAA,CAAHF,GAAG;IACHF,gBAAgB,GAAAI,IAAA,CAAhBJ,gBAAgB;IAChBC,IAAI,GAAAG,IAAA,CAAJH,IAAI;EAMJ,IAAMI,SAAS,GAAGrC,WAAW,CAAC,YAAY;IAIxC,IAAMsC,SAAS,GAAGC,KAAK,CAACC,IAAI,CAACP,IAAI,CAAC;IAClC,IAAID,gBAAgB,IAAI,IAAI,EAAE;MAC5B,IAAIM,SAAS,CAACG,MAAM,GAAG,CAAC,IAAI,CAAC,EAAE;QAC7BnC,UAAU,CAACoC,cAAc,CAAC,CAAC,CAAC,CAAC;MAC/B,CAAC,MAAM,IAAIV,gBAAgB,IAAIM,SAAS,CAACG,MAAM,GAAG,CAAC,EAAE;QACnDnC,UAAU,CAACoC,cAAc,CAACV,gBAAgB,GAAG,CAAC,CAAC;MACjD;MAEA1B,UAAU,CAACqC,OAAO,CAACL,SAAS,CAACN,gBAAgB,CAAC,CAAC;IACjD;EACF,CAAC,EAAE,CAACA,gBAAgB,CAAC,CAAC;EAEtB,IAAMY,UAAU,GAAG5C,WAAW,CAAC,YAAY;IACzCM,UAAU,CAACoC,cAAc,CAAC,CAAC,CAAC,CAAC;EAC/B,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMG,qBAAqB,GAAG7C,WAAW,CAAC,UAAC8C,KAAa,EAAW;IACjExC,UAAU,CAACoC,cAAc,CAACI,KAAK,CAAC;EAClC,CAAC,EAAE,EAAE,CAAC;EAEN7C,SAAS,CAAC,YAAM;IACd,IAAIiC,GAAG,EAAE;MACP5B,UAAU,CAACyC,iBAAiB,CAAC,OAAO,EAAEb,GAAG,CAAC;MAC1C5B,UAAU,CAACyC,iBAAiB,CAAC,WAAW,EAAEb,GAAG,CAAC;IAChD;EACF,CAAC,EAAE,CAACA,GAAG,CAAC,CAAC;EAETjC,SAAS,CAAC,YAAM;IAEd,IAAIgC,IAAI,CAACQ,MAAM,GAAG,CAAC,EAAE;MACnB,IAAMO,QAAQ,GAAGhB,gBAAgB;MACjC,IAAMiB,SAAS,GAAGhB,IAAI,CAACQ,MAAM,GAAG,CAAC;MACjC,IAAMS,SAAS,GAAGF,QAAQ,GAAG,CAAC,GAAG,CAAC,GAAGC,SAAS,GAAGD,QAAQ,GAAG,CAAC;MAC7D,IAAMG,SAAS,GAAGH,QAAQ,GAAG,CAAC,GAAGC,SAAS,GAAG,CAAC,GAAGD,QAAQ,GAAG,CAAC;MAC7D,KAAK,IAAMI,IAAI,IAAI,CAAC,WAAW,EAAE,OAAO,CAAC,EAAW;QAClD9C,UAAU,CAAC+C,kBAAkB,CAACD,IAAI,EAAEnB,IAAI,CAACiB,SAAS,CAAC,CAAC;QACpD5C,UAAU,CAAC+C,kBAAkB,CAACD,IAAI,EAAEnB,IAAI,CAACkB,SAAS,CAAC,CAAC;MACtD;IACF;EACF,CAAC,EAAE,CAAClB,IAAI,EAAED,gBAAgB,CAAC,CAAC;EAE5B,IAAMsB,YAAY,GAAGtD,WAAW,CAC9B,UAACoD,IAAe,EAAK;IACnB9C,UAAU,CAACiD,sBAAsB,CAACH,IAAI,EAAElB,GAAG,CAAC;EAC9C,CAAC,EACD,CAACA,GAAG,CACN,CAAC;EAED,OACEd,KAAA,CAAChB,IAAI;IAACoD,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BzC,IAAA,CAACJ,kBAAkB;MAAC8C,aAAa,EAAEf,qBAAsB;MAACgB,KAAK,EAAE3B,GAAG,CAAC2B;IAAM,CAAE,CAAC,EAC9E3C,IAAA,CAAC4C,gBAAgB;MAACC,OAAO,EAAET;IAAa,CAAE,CAAC,EAC3CpC,IAAA,CAACN,kBAAkB;MAACyB,SAAS,EAAEA,SAAU;MAACO,UAAU,EAAEA;IAAW,CAAE,CAAC;EAAA,CAChE,CAAC;AAEX;AAEA,OAAO,SAASkB,gBAAgBA,CAAAE,KAAA,EAAsD;EAAA,IAAnDD,OAAO,GAAAC,KAAA,CAAPD,OAAO;EACxC,IAAM7B,GAAG,GAAG1B,cAAc,CAAC,CAAC;EAC5B,OAAOU,IAAA,CAAC+C,wBAAwB;IAAC/B,GAAG,EAAEA,GAAI;IAAC6B,OAAO,EAAEA;EAAQ,CAAE,CAAC;AACjE;AAEA,OAAO,SAASE,wBAAwBA,CAAAC,KAAA,EAMrC;EAAA,IAAAC,iBAAA,EAAAC,mBAAA;EAAA,IALDlC,GAAG,GAAAgC,KAAA,CAAHhC,GAAG;IACH6B,OAAO,GAAAG,KAAA,CAAPH,OAAO;EAKP,IAAAM,SAAA,GAAkCnE,QAAQ,CAAC,IAAI,CAAC;IAAAoE,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAzCG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAE9BrE,SAAS,CAAC,YAAM;IACdwE,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC,EAAE,CAACvC,GAAG,CAAC,CAAC;EAET,IAAMwC,WAAW,IAAAP,iBAAA,GAAG5C,gBAAgB,CAACW,GAAG,CAACyC,gBAAgB,GAAG,WAAW,GAAGzC,GAAG,CAAC2B,KAAK,CAAC,YAAAM,iBAAA,GAAIjC,GAAG,CAACkB,IAAI;EAEhG,IAAMwB,MAAM,GACV1D,IAAA,CAACH,4BAA4B;IAC3ByD,SAAS,EAAEA,SAAU;IACrBK,OAAO,EAAE,SAATA,OAAOA,CAAA;MAAA,OAAQJ,YAAY,CAAC,CAACD,SAAS,CAAC;IAAA,CAAC;IACxCM,OAAO,EAAE5C,GAAG,CAAC4C,OAAQ;IACrBjB,KAAK,EAAE3B,GAAG,CAAC2B,KAAM;IACjBkB,KAAK,EAAEL;EAAY,CACpB,CACF;EAGD,IAAMM,UAAU,GAAG,CAAC9C,GAAG,CAAC4C,OAAO,CAACG,OAAO,CAACC,KAAK,CAC3C,2EACF,CAAC;EAED,OACE9D,KAAA,CAAAE,SAAA;IAAAqC,QAAA,GACGa,SAAS,IAAII,MAAM,EACpBxD,KAAA,CAACjB,UAAU;MAACqD,KAAK,EAAEC,MAAM,CAAC0B,UAAW;MAAAxB,QAAA,GAClC,CAACa,SAAS,IAAII,MAAM,EAErB1D,IAAA,CAACR,wBAAwB;QAAC0E,SAAS,EAAElD,GAAG,CAACkD;MAAU,CAAE,CAAC,EACrDJ,UAAU,IACT9D,IAAA,CAACF,0BAA0B;QACzBoC,IAAI,EAAC,OAAO;QAEZW,OAAO,EAAEA,OAAO,CAACsB,IAAI,CAACtB,OAAO,EAAE,OAAO;MAAE,CACzC,CACF,EACA,CAAC,EAAC7B,GAAG,aAAAkC,mBAAA,GAAHlC,GAAG,CAAEoD,cAAc,aAAnBlB,mBAAA,CAAqB3B,MAAM,KAC5BvB,IAAA,CAACF,0BAA0B;QACzBoC,IAAI,EAAC,WAAW;QAEhBW,OAAO,EAAEA,OAAO,CAACsB,IAAI,CAACtB,OAAO,EAAE,WAAW;MAAE,CAC7C,CACF;IAAA,CACS,CAAC;EAAA,CACb,CAAC;AAEP;AAEA,IAAMN,MAAM,GAAGpD,UAAU,CAACkF,MAAM,CAAC;EAC/BJ,UAAU,EAAE;IACVK,eAAe,EAAE/E,WAAW,CAACgF,kBAAkB,CAAC,CAAC,CAAC;IAClDC,IAAI,EAAE;EACR,CAAC;EACDhC,SAAS,EAAE;IACTiC,GAAG,EAAE,CAAC;IACNC,IAAI,EAAE,CAAC;IACPC,MAAM,EAAE,CAAC;IACTC,KAAK,EAAE,CAAC;IACRC,MAAM,EAAE,GAAG;IACXL,IAAI,EAAE,CAAC;IAEPM,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC;AAEF,eAAe1F,UAAU,CAAC2F,gBAAgB,CAACnE,wBAAwB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}