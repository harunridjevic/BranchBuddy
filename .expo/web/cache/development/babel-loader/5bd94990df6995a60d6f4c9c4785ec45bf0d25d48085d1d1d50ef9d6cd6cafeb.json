{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nif (!global.setImmediate) {\n  global.setImmediate = function (fn) {\n    return setTimeout(fn, 0);\n  };\n}\nif (process.env.NODE_ENV === 'development' && process.env.EXPO_OS === 'web') {\n  require(\"./LogBox\").default.install();\n}\nexport function withErrorOverlay(Comp) {\n  if (process.env.NODE_ENV === 'production') {\n    return Comp;\n  }\n  var _ref = require(\"./toast/ErrorToastContainer\"),\n    ErrorToastContainer = _ref.default;\n  return function ErrorOverlay(props) {\n    return _jsx(ErrorToastContainer, {\n      children: _jsx(Comp, _objectSpread({}, props))\n    });\n  };\n}","map":{"version":3,"names":["React","jsx","_jsx","global","setImmediate","fn","setTimeout","process","env","NODE_ENV","EXPO_OS","require","default","install","withErrorOverlay","Comp","_ref","ErrorToastContainer","ErrorOverlay","props","children","_objectSpread"],"sources":["C:/Users/R User/Documents/software_dev/BranchBuddy/node_modules/@expo/metro-runtime/src/error-overlay/index.tsx"],"sourcesContent":["import React from 'react';\n\nif (!global.setImmediate) {\n  global.setImmediate = function (fn) {\n    return setTimeout(fn, 0);\n  };\n}\n\nif (process.env.NODE_ENV === 'development' && process.env.EXPO_OS === 'web') {\n  // Stack traces are big with React Navigation\n  require('./LogBox').default.install();\n}\n\nexport function withErrorOverlay(Comp: React.ComponentType<any>) {\n  if (process.env.NODE_ENV === 'production') {\n    return Comp;\n  }\n\n  const { default: ErrorToastContainer } =\n    require('./toast/ErrorToastContainer') as typeof import('./toast/ErrorToastContainer');\n\n  return function ErrorOverlay(props: any) {\n    return (\n      <ErrorToastContainer>\n        <Comp {...props} />\n      </ErrorToastContainer>\n    );\n  };\n}\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAE1B,IAAI,CAACC,MAAM,CAACC,YAAY,EAAE;EACxBD,MAAM,CAACC,YAAY,GAAG,UAAUC,EAAE,EAAE;IAClC,OAAOC,UAAU,CAACD,EAAE,EAAE,CAAC,CAAC;EAC1B,CAAC;AACH;AAEA,IAAIE,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,IAAIF,OAAO,CAACC,GAAG,CAACE,OAAO,KAAK,KAAK,EAAE;EAE3EC,OAAO,WAAW,CAAC,CAACC,OAAO,CAACC,OAAO,CAAC,CAAC;AACvC;AAEA,OAAO,SAASC,gBAAgBA,CAACC,IAA8B,EAAE;EAC/D,IAAIR,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACzC,OAAOM,IAAI;EACb;EAEA,IAAAC,IAAA,GACEL,OAAO,8BAA8B,CAAC;IADvBM,mBAAmB,GAAAD,IAAA,CAA5BJ,OAAO;EAGf,OAAO,SAASM,YAAYA,CAACC,KAAU,EAAE;IACvC,OACEjB,IAAA,CAACe,mBAAmB;MAAAG,QAAA,EAClBlB,IAAA,CAACa,IAAI,EAAAM,aAAA,KAAKF,KAAK,CAAG;IAAC,CACA,CAAC;EAE1B,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}