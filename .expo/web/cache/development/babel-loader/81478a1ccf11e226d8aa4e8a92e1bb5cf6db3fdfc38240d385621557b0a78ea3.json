{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nvar _globalThis$expo, _globalThis$expo$modu;\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getPathFromState = exports.getStateFromPath = exports.addEventListener = exports.getRootURL = exports.getInitialURL = void 0;\nvar Linking = __importStar(require(\"expo-linking\"));\nvar react_native_1 = require(\"react-native-web/dist/index\");\nvar extractPathFromURL_1 = require(\"../fork/extractPathFromURL\");\nvar getPathFromState_1 = require(\"../fork/getPathFromState\");\nObject.defineProperty(exports, \"getPathFromState\", {\n  enumerable: true,\n  get: function get() {\n    return getPathFromState_1.getPathFromState;\n  }\n});\nvar getStateFromPath_1 = require(\"../fork/getStateFromPath\");\nObject.defineProperty(exports, \"getStateFromPath\", {\n  enumerable: true,\n  get: function get() {\n    return getStateFromPath_1.getStateFromPath;\n  }\n});\nvar isExpoGo = typeof expo !== 'undefined' && ((_globalThis$expo = globalThis.expo) == null ? void 0 : (_globalThis$expo$modu = _globalThis$expo.modules) == null ? void 0 : _globalThis$expo$modu.ExpoGo);\nfunction getInitialURLWithTimeout() {\n  return Promise.race([Linking.getInitialURL(), new Promise(function (resolve) {\n    return (setTimeout(function () {\n        return resolve(null);\n      }, 150)\n    );\n  })]);\n}\nfunction getInitialURL() {\n  if (react_native_1.Platform.OS === 'web') {\n    var _window$location;\n    if (typeof window === 'undefined') {\n      return '';\n    } else if ((_window$location = window.location) != null && _window$location.href) {\n      return window.location.href;\n    }\n  }\n  return getInitialURLWithTimeout().then(function (url) {\n    var _parseExpoGoUrlFromLi;\n    return (_parseExpoGoUrlFromLi = parseExpoGoUrlFromListener(url)) != null ? _parseExpoGoUrlFromLi : getRootURL();\n  });\n}\nexports.getInitialURL = getInitialURL;\nvar _rootURL;\nfunction getRootURL() {\n  if (_rootURL === undefined) {\n    _rootURL = Linking.createURL('/');\n  }\n  return _rootURL;\n}\nexports.getRootURL = getRootURL;\nfunction parseExpoGoUrlFromListener(url) {\n  if (!url || !isExpoGo) {\n    return url;\n  }\n  var _ref = (0, extractPathFromURL_1.parsePathAndParamsFromExpoGoLink)(url),\n    pathname = _ref.pathname,\n    queryString = _ref.queryString;\n  if (!pathname || pathname === '/') {\n    return getRootURL() + queryString;\n  }\n  return url;\n}\nfunction addEventListener(nativeLinking) {\n  return function (listener) {\n    var callback;\n    var legacySubscription = nativeLinking == null ? void 0 : nativeLinking.legacy_subscribe == null ? void 0 : nativeLinking.legacy_subscribe(listener);\n    if (isExpoGo) {\n      callback = function () {\n        var _ref3 = _asyncToGenerator(function* (_ref2) {\n          var url = _ref2.url;\n          url = parseExpoGoUrlFromListener(url);\n          if (url && nativeLinking != null && nativeLinking.redirectSystemPath) {\n            url = yield nativeLinking.redirectSystemPath({\n              path: url,\n              initial: false\n            });\n          }\n          listener(url);\n        });\n        return function callback(_x) {\n          return _ref3.apply(this, arguments);\n        };\n      }();\n    } else {\n      callback = function () {\n        var _ref5 = _asyncToGenerator(function* (_ref4) {\n          var url = _ref4.url;\n          if (url && nativeLinking != null && nativeLinking.redirectSystemPath) {\n            url = yield nativeLinking.redirectSystemPath({\n              path: url,\n              initial: false\n            });\n          }\n          listener(url);\n        });\n        return function callback(_x2) {\n          return _ref5.apply(this, arguments);\n        };\n      }();\n    }\n    var subscription = Linking.addEventListener('url', callback);\n    return function () {\n      subscription == null ? void 0 : subscription.remove == null ? void 0 : subscription.remove();\n      legacySubscription == null ? void 0 : legacySubscription();\n    };\n  };\n}\nexports.addEventListener = addEventListener;","map":{"version":3,"names":["Linking","__importStar","require","react_native_1","extractPathFromURL_1","getPathFromState_1","Object","defineProperty","exports","enumerable","get","getPathFromState","getStateFromPath_1","getStateFromPath","isExpoGo","expo","_globalThis$expo","globalThis","_globalThis$expo$modu","modules","ExpoGo","getInitialURLWithTimeout","Promise","race","getInitialURL","resolve","setTimeout","Platform","OS","_window$location","window","location","href","then","url","_parseExpoGoUrlFromLi","parseExpoGoUrlFromListener","getRootURL","_rootURL","undefined","createURL","_ref","parsePathAndParamsFromExpoGoLink","pathname","queryString","addEventListener","nativeLinking","listener","callback","legacySubscription","legacy_subscribe","_ref3","_asyncToGenerator","_ref2","redirectSystemPath","path","initial","_x","apply","arguments","_ref5","_ref4","_x2","subscription","remove"],"sources":["C:\\Users\\R User\\Documents\\software_dev\\BranchBuddy\\node_modules\\expo-router\\src\\link\\linking.ts"],"sourcesContent":["import { LinkingOptions } from '@react-navigation/native';\nimport * as Linking from 'expo-linking';\nimport { Platform } from 'react-native';\n\nimport { parsePathAndParamsFromExpoGoLink } from '../fork/extractPathFromURL';\nimport { getPathFromState } from '../fork/getPathFromState';\nimport { getStateFromPath } from '../fork/getStateFromPath';\nimport { NativeIntent } from '../types';\n\nconst isExpoGo = typeof expo !== 'undefined' && globalThis.expo?.modules?.ExpoGo;\n\nfunction getInitialURLWithTimeout(): Promise<string | null> {\n  return Promise.race([\n    Linking.getInitialURL(),\n    new Promise<null>((resolve) =>\n      // Timeout in 150ms if `getInitialState` doesn't resolve\n      // Workaround for https://github.com/facebook/react-native/issues/25675\n      setTimeout(() => resolve(null), 150)\n    ),\n  ]);\n}\n\n// A custom getInitialURL is used on native to ensure the app always starts at\n// the root path if it's launched from something other than a deep link.\n// This helps keep the native functionality working like the web functionality.\n// For example, if you had a root navigator where the first screen was `/settings` and the second was `/index`\n// then `/index` would be used on web and `/settings` would be used on native.\nexport function getInitialURL(): ReturnType<\n  NonNullable<LinkingOptions<Record<string, unknown>>['getInitialURL']>\n> {\n  if (Platform.OS === 'web') {\n    if (typeof window === 'undefined') {\n      return '';\n    } else if (window.location?.href) {\n      return window.location.href;\n    }\n  }\n\n  return getInitialURLWithTimeout().then(\n    (url) =>\n      parseExpoGoUrlFromListener(url) ??\n      // The path will be nullish in bare apps when the app is launched from the home screen.\n      // TODO(EvanBacon): define some policy around notifications.\n      getRootURL()\n  );\n}\n\nlet _rootURL: string | undefined;\n\nexport function getRootURL(): string {\n  if (_rootURL === undefined) {\n    _rootURL = Linking.createURL('/');\n  }\n  return _rootURL;\n}\n\n// Expo Go is weird and requires the root path to be `/--/`\nfunction parseExpoGoUrlFromListener<T extends string | null>(url: T): T {\n  if (!url || !isExpoGo) {\n    return url;\n  }\n  const { pathname, queryString } = parsePathAndParamsFromExpoGoLink(url);\n  // If the URL is defined (default in Expo Go dev apps) and the URL has no path:\n  // `exp://192.168.87.39:19000/` then use the default `exp://192.168.87.39:19000/--/`\n  if (!pathname || pathname === '/') {\n    return (getRootURL() + queryString) as T;\n  }\n  return url;\n}\n\nexport function addEventListener(nativeLinking?: NativeIntent) {\n  return (listener: (url: string) => void) => {\n    let callback: (({ url }: { url: string }) => void) | undefined;\n\n    const legacySubscription = nativeLinking?.legacy_subscribe?.(listener);\n\n    if (isExpoGo) {\n      // This extra work is only done in the Expo Go app.\n      callback = async ({ url }) => {\n        url = parseExpoGoUrlFromListener(url);\n\n        if (url && nativeLinking?.redirectSystemPath) {\n          url = await nativeLinking.redirectSystemPath({ path: url, initial: false });\n        }\n\n        listener(url);\n      };\n    } else {\n      callback = async ({ url }) => {\n        if (url && nativeLinking?.redirectSystemPath) {\n          url = await nativeLinking.redirectSystemPath({ path: url, initial: false });\n        }\n        listener(url);\n      };\n    }\n\n    const subscription = Linking.addEventListener('url', callback);\n\n    return () => {\n      // https://github.com/facebook/react-native/commit/6d1aca806cee86ad76de771ed3a1cc62982ebcd7\n      subscription?.remove?.();\n      legacySubscription?.();\n    };\n  };\n}\n\nexport { getStateFromPath, getPathFromState };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}